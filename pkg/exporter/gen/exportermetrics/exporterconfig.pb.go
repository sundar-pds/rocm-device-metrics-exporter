//
//Copyright (c) Advanced Micro Devices, Inc. All rights reserved.
//
//Licensed under the Apache License, Version 2.0 (the \"License\");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an \"AS IS\" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

//----------------------------------------------------------------------------
///
/// \file
/// AMD Metrics Exporter configs
///
//----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: exporterconfig.proto

package exportermetrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// list of common labels between GPU and NIC
type MetricLabel int32

const (
	// cluster name
	MetricLabel_CLUSTER_NAME MetricLabel = 0
	// mandatory field HOSTNAME cannot be disabled
	MetricLabel_HOSTNAME MetricLabel = 1
	// mandatory SERIAL_NUMBER cannot be disabled
	MetricLabel_SERIAL_NUMBER MetricLabel = 2
	// mandatory field POD cannot be disabled
	MetricLabel_POD MetricLabel = 3
	// mandatory field NAMESPACE cannot be disabled
	MetricLabel_NAMESPACE MetricLabel = 4
	// mandatory field CONTAINER cannot be disabled
	MetricLabel_CONTAINER MetricLabel = 5
	// mandatory field JOB_ID cannot be disabled (for GPU Metrics)
	MetricLabel_JOB_ID MetricLabel = 6
	// mandatory field JOB_USER cannot be disabled (for GPU Metrics)
	MetricLabel_JOB_USER MetricLabel = 7
	// mandatory field JOB_PARTITION cannot be disabled  (for GPU Metrics)
	MetricLabel_JOB_PARTITION MetricLabel = 8
	// Card related fields
	MetricLabel_CARD_SERIES MetricLabel = 9
	// mandatory CARD_MODEL cannot be disabled
	MetricLabel_CARD_MODEL     MetricLabel = 10
	MetricLabel_CARD_VENDOR    MetricLabel = 11
	MetricLabel_DRIVER_VERSION MetricLabel = 12
	MetricLabel_VBIOS_VERSION  MetricLabel = 13
)

// Enum value maps for MetricLabel.
var (
	MetricLabel_name = map[int32]string{
		0:  "CLUSTER_NAME",
		1:  "HOSTNAME",
		2:  "SERIAL_NUMBER",
		3:  "POD",
		4:  "NAMESPACE",
		5:  "CONTAINER",
		6:  "JOB_ID",
		7:  "JOB_USER",
		8:  "JOB_PARTITION",
		9:  "CARD_SERIES",
		10: "CARD_MODEL",
		11: "CARD_VENDOR",
		12: "DRIVER_VERSION",
		13: "VBIOS_VERSION",
	}
	MetricLabel_value = map[string]int32{
		"CLUSTER_NAME":   0,
		"HOSTNAME":       1,
		"SERIAL_NUMBER":  2,
		"POD":            3,
		"NAMESPACE":      4,
		"CONTAINER":      5,
		"JOB_ID":         6,
		"JOB_USER":       7,
		"JOB_PARTITION":  8,
		"CARD_SERIES":    9,
		"CARD_MODEL":     10,
		"CARD_VENDOR":    11,
		"DRIVER_VERSION": 12,
		"VBIOS_VERSION":  13,
	}
)

func (x MetricLabel) Enum() *MetricLabel {
	p := new(MetricLabel)
	*p = x
	return p
}

func (x MetricLabel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricLabel) Descriptor() protoreflect.EnumDescriptor {
	return file_exporterconfig_proto_enumTypes[0].Descriptor()
}

func (MetricLabel) Type() protoreflect.EnumType {
	return &file_exporterconfig_proto_enumTypes[0]
}

func (x MetricLabel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricLabel.Descriptor instead.
func (MetricLabel) EnumDescriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{0}
}

type GPUMetricField int32

const (
	GPUMetricField_GPU_NODES_TOTAL             GPUMetricField = 0
	GPUMetricField_GPU_PACKAGE_POWER           GPUMetricField = 1
	GPUMetricField_GPU_AVERAGE_PACKAGE_POWER   GPUMetricField = 2
	GPUMetricField_GPU_EDGE_TEMPERATURE        GPUMetricField = 3
	GPUMetricField_GPU_JUNCTION_TEMPERATURE    GPUMetricField = 4
	GPUMetricField_GPU_MEMORY_TEMPERATURE      GPUMetricField = 5
	GPUMetricField_GPU_HBM_TEMPERATURE         GPUMetricField = 6
	GPUMetricField_GPU_GFX_ACTIVITY            GPUMetricField = 7
	GPUMetricField_GPU_UMC_ACTIVITY            GPUMetricField = 8
	GPUMetricField_GPU_MMA_ACTIVITY            GPUMetricField = 9
	GPUMetricField_GPU_VCN_ACTIVITY            GPUMetricField = 10
	GPUMetricField_GPU_JPEG_ACTIVITY           GPUMetricField = 11
	GPUMetricField_GPU_VOLTAGE                 GPUMetricField = 12
	GPUMetricField_GPU_GFX_VOLTAGE             GPUMetricField = 13
	GPUMetricField_GPU_MEMORY_VOLTAGE          GPUMetricField = 14
	GPUMetricField_PCIE_SPEED                  GPUMetricField = 15
	GPUMetricField_PCIE_MAX_SPEED              GPUMetricField = 16
	GPUMetricField_PCIE_BANDWIDTH              GPUMetricField = 17
	GPUMetricField_GPU_ENERGY_CONSUMED         GPUMetricField = 18
	GPUMetricField_PCIE_REPLAY_COUNT           GPUMetricField = 19
	GPUMetricField_PCIE_RECOVERY_COUNT         GPUMetricField = 20
	GPUMetricField_PCIE_REPLAY_ROLLOVER_COUNT  GPUMetricField = 21
	GPUMetricField_PCIE_NACK_SENT_COUNT        GPUMetricField = 22
	GPUMetricField_PCIE_NACK_RECEIVED_COUNT    GPUMetricField = 23
	GPUMetricField_GPU_CLOCK                   GPUMetricField = 24
	GPUMetricField_GPU_POWER_USAGE             GPUMetricField = 25
	GPUMetricField_GPU_TOTAL_VRAM              GPUMetricField = 26
	GPUMetricField_GPU_ECC_CORRECT_TOTAL       GPUMetricField = 27
	GPUMetricField_GPU_ECC_UNCORRECT_TOTAL     GPUMetricField = 28
	GPUMetricField_GPU_ECC_CORRECT_SDMA        GPUMetricField = 29
	GPUMetricField_GPU_ECC_UNCORRECT_SDMA      GPUMetricField = 30
	GPUMetricField_GPU_ECC_CORRECT_GFX         GPUMetricField = 31
	GPUMetricField_GPU_ECC_UNCORRECT_GFX       GPUMetricField = 32
	GPUMetricField_GPU_ECC_CORRECT_MMHUB       GPUMetricField = 33
	GPUMetricField_GPU_ECC_UNCORRECT_MMHUB     GPUMetricField = 34
	GPUMetricField_GPU_ECC_CORRECT_ATHUB       GPUMetricField = 35
	GPUMetricField_GPU_ECC_UNCORRECT_ATHUB     GPUMetricField = 36
	GPUMetricField_GPU_ECC_CORRECT_BIF         GPUMetricField = 37
	GPUMetricField_GPU_ECC_UNCORRECT_BIF       GPUMetricField = 38
	GPUMetricField_GPU_ECC_CORRECT_HDP         GPUMetricField = 39
	GPUMetricField_GPU_ECC_UNCORRECT_HDP       GPUMetricField = 40
	GPUMetricField_GPU_ECC_CORRECT_XGMI_WAFL   GPUMetricField = 41
	GPUMetricField_GPU_ECC_UNCORRECT_XGMI_WAFL GPUMetricField = 42
	GPUMetricField_GPU_ECC_CORRECT_DF          GPUMetricField = 43
	GPUMetricField_GPU_ECC_UNCORRECT_DF        GPUMetricField = 44
	GPUMetricField_GPU_ECC_CORRECT_SMN         GPUMetricField = 45
	GPUMetricField_GPU_ECC_UNCORRECT_SMN       GPUMetricField = 46
	GPUMetricField_GPU_ECC_CORRECT_SEM         GPUMetricField = 47
	GPUMetricField_GPU_ECC_UNCORRECT_SEM       GPUMetricField = 48
	GPUMetricField_GPU_ECC_CORRECT_MP0         GPUMetricField = 49
	GPUMetricField_GPU_ECC_UNCORRECT_MP0       GPUMetricField = 50
	GPUMetricField_GPU_ECC_CORRECT_MP1         GPUMetricField = 51
	GPUMetricField_GPU_ECC_UNCORRECT_MP1       GPUMetricField = 52
	GPUMetricField_GPU_ECC_CORRECT_FUSE        GPUMetricField = 53
	GPUMetricField_GPU_ECC_UNCORRECT_FUSE      GPUMetricField = 54
	GPUMetricField_GPU_ECC_CORRECT_UMC         GPUMetricField = 55
	GPUMetricField_GPU_ECC_UNCORRECT_UMC       GPUMetricField = 56
	GPUMetricField_GPU_XGMI_NBR_0_NOP_TX       GPUMetricField = 57
	GPUMetricField_GPU_XGMI_NBR_0_REQ_TX       GPUMetricField = 58
	GPUMetricField_GPU_XGMI_NBR_0_RESP_TX      GPUMetricField = 59
	GPUMetricField_GPU_XGMI_NBR_0_BEATS_TX     GPUMetricField = 60
	GPUMetricField_GPU_XGMI_NBR_1_NOP_TX       GPUMetricField = 61
	GPUMetricField_GPU_XGMI_NBR_1_REQ_TX       GPUMetricField = 62
	GPUMetricField_GPU_XGMI_NBR_1_RESP_TX      GPUMetricField = 63
	GPUMetricField_GPU_XGMI_NBR_1_BEATS_TX     GPUMetricField = 64
	GPUMetricField_GPU_XGMI_NBR_0_TX_THRPUT    GPUMetricField = 65
	GPUMetricField_GPU_XGMI_NBR_1_TX_THRPUT    GPUMetricField = 66
	GPUMetricField_GPU_XGMI_NBR_2_TX_THRPUT    GPUMetricField = 67
	GPUMetricField_GPU_XGMI_NBR_3_TX_THRPUT    GPUMetricField = 68
	GPUMetricField_GPU_XGMI_NBR_4_TX_THRPUT    GPUMetricField = 69
	GPUMetricField_GPU_XGMI_NBR_5_TX_THRPUT    GPUMetricField = 70
	GPUMetricField_GPU_USED_VRAM               GPUMetricField = 71
	GPUMetricField_GPU_FREE_VRAM               GPUMetricField = 72
	GPUMetricField_GPU_TOTAL_VISIBLE_VRAM      GPUMetricField = 73
	GPUMetricField_GPU_USED_VISIBLE_VRAM       GPUMetricField = 74
	GPUMetricField_GPU_FREE_VISIBLE_VRAM       GPUMetricField = 75
	GPUMetricField_GPU_TOTAL_GTT               GPUMetricField = 76
	GPUMetricField_GPU_USED_GTT                GPUMetricField = 77
	GPUMetricField_GPU_FREE_GTT                GPUMetricField = 78
	GPUMetricField_GPU_ECC_CORRECT_MCA         GPUMetricField = 79
	GPUMetricField_GPU_ECC_UNCORRECT_MCA       GPUMetricField = 80
	GPUMetricField_GPU_ECC_CORRECT_VCN         GPUMetricField = 81
	GPUMetricField_GPU_ECC_UNCORRECT_VCN       GPUMetricField = 82
	GPUMetricField_GPU_ECC_CORRECT_JPEG        GPUMetricField = 83
	GPUMetricField_GPU_ECC_UNCORRECT_JPEG      GPUMetricField = 84
	GPUMetricField_GPU_ECC_CORRECT_IH          GPUMetricField = 85
	GPUMetricField_GPU_ECC_UNCORRECT_IH        GPUMetricField = 86
	GPUMetricField_GPU_ECC_CORRECT_MPIO        GPUMetricField = 87
	GPUMetricField_GPU_ECC_UNCORRECT_MPIO      GPUMetricField = 88
	// 1 - healthy, 0 unhealthy
	GPUMetricField_GPU_HEALTH       GPUMetricField = 89
	GPUMetricField_GPU_XGMI_LINK_RX GPUMetricField = 90
	GPUMetricField_GPU_XGMI_LINK_TX GPUMetricField = 91
	// GPU violation accumulated stats
	GPUMetricField_GPU_VIOLATION_CURRENT_ACCUMULATED_COUNTER          GPUMetricField = 92
	GPUMetricField_GPU_VIOLATION_PROCESSOR_HOT_RESIDENCY_ACCUMULATED  GPUMetricField = 93
	GPUMetricField_GPU_VIOLATION_PPT_RESIDENCY_ACCUMULATED            GPUMetricField = 94
	GPUMetricField_GPU_VIOLATION_SOCKET_THERMAL_RESIDENCY_ACCUMULATED GPUMetricField = 95
	GPUMetricField_GPU_VIOLATION_VR_THERMAL_RESIDENCY_ACCUMULATED     GPUMetricField = 96
	GPUMetricField_GPU_VIOLATION_HBM_THERMAL_RESIDENCY_ACCUMULATED    GPUMetricField = 97
	// GPU Instantaneous Activity
	// XCP Accelerated Compute Processor
	// also referred to as the Graphics Compute Partitions.
	// Each physical gpu could have a maximum of 8 separate partitions
	// associated with each (depending on ASIC support)
	// XCC - Accelerated Compute Core, the collection of compute units,
	GPUMetricField_GPU_GFX_BUSY_INSTANTANEOUS   GPUMetricField = 98
	GPUMetricField_GPU_VCN_BUSY_INSTANTANEOUS   GPUMetricField = 99
	GPUMetricField_GPU_JPEG_BUSY_INSTANTANEOUS  GPUMetricField = 100
	GPUMetricField_PCIE_RX                      GPUMetricField = 101
	GPUMetricField_PCIE_TX                      GPUMetricField = 102
	GPUMetricField_PCIE_BIDIRECTIONAL_BANDWIDTH GPUMetricField = 103
	// Profiler Metrics (reserving 801 to 1200)
	GPUMetricField_GPU_PROF_GRBM_GUI_ACTIVE                    GPUMetricField = 801
	GPUMetricField_GPU_PROF_SQ_WAVES                           GPUMetricField = 802
	GPUMetricField_GPU_PROF_GRBM_COUNT                         GPUMetricField = 803
	GPUMetricField_GPU_PROF_CPC_CPC_STAT_BUSY                  GPUMetricField = 804
	GPUMetricField_GPU_PROF_CPC_CPC_STAT_IDLE                  GPUMetricField = 805
	GPUMetricField_GPU_PROF_CPC_CPC_STAT_STALL                 GPUMetricField = 806
	GPUMetricField_GPU_PROF_CPC_CPC_TCIU_BUSY                  GPUMetricField = 807
	GPUMetricField_GPU_PROF_CPC_CPC_TCIU_IDLE                  GPUMetricField = 808
	GPUMetricField_GPU_PROF_CPC_CPC_UTCL2IU_BUSY               GPUMetricField = 809
	GPUMetricField_GPU_PROF_CPC_CPC_UTCL2IU_IDLE               GPUMetricField = 810
	GPUMetricField_GPU_PROF_CPC_CPC_UTCL2IU_STALL              GPUMetricField = 811
	GPUMetricField_GPU_PROF_CPC_ME1_BUSY_FOR_PACKET_DECODE     GPUMetricField = 812
	GPUMetricField_GPU_PROF_CPC_ME1_DC0_SPI_BUSY               GPUMetricField = 813
	GPUMetricField_GPU_PROF_CPC_UTCL1_STALL_ON_TRANSLATION     GPUMetricField = 814
	GPUMetricField_GPU_PROF_CPC_ALWAYS_COUNT                   GPUMetricField = 815
	GPUMetricField_GPU_PROF_CPC_ADC_VALID_CHUNK_NOT_AVAIL      GPUMetricField = 816
	GPUMetricField_GPU_PROF_CPC_ADC_DISPATCH_ALLOC_DONE        GPUMetricField = 817
	GPUMetricField_GPU_PROF_CPC_ADC_VALID_CHUNK_END            GPUMetricField = 818
	GPUMetricField_GPU_PROF_CPC_SYNC_FIFO_FULL_LEVEL           GPUMetricField = 819
	GPUMetricField_GPU_PROF_CPC_SYNC_FIFO_FULL                 GPUMetricField = 820
	GPUMetricField_GPU_PROF_CPC_GD_BUSY                        GPUMetricField = 821
	GPUMetricField_GPU_PROF_CPC_TG_SEND                        GPUMetricField = 822
	GPUMetricField_GPU_PROF_CPC_WALK_NEXT_CHUNK                GPUMetricField = 823
	GPUMetricField_GPU_PROF_CPC_STALLED_BY_SE0_SPI             GPUMetricField = 824
	GPUMetricField_GPU_PROF_CPC_STALLED_BY_SE1_SPI             GPUMetricField = 825
	GPUMetricField_GPU_PROF_CPC_STALLED_BY_SE2_SPI             GPUMetricField = 826
	GPUMetricField_GPU_PROF_CPC_STALLED_BY_SE3_SPI             GPUMetricField = 827
	GPUMetricField_GPU_PROF_CPC_LTE_ALL                        GPUMetricField = 828
	GPUMetricField_GPU_PROF_CPC_SYNC_WRREQ_FIFO_BUSY           GPUMetricField = 829
	GPUMetricField_GPU_PROF_CPC_CANE_BUSY                      GPUMetricField = 830
	GPUMetricField_GPU_PROF_CPC_CANE_STALL                     GPUMetricField = 831
	GPUMetricField_GPU_PROF_CPF_CMP_UTCL1_STALL_ON_TRANSLATION GPUMetricField = 832
	GPUMetricField_GPU_PROF_CPF_CPF_STAT_BUSY                  GPUMetricField = 833
	GPUMetricField_GPU_PROF_CPF_CPF_STAT_IDLE                  GPUMetricField = 834
	GPUMetricField_GPU_PROF_CPF_CPF_STAT_STALL                 GPUMetricField = 835
	GPUMetricField_GPU_PROF_CPF_CPF_TCIU_BUSY                  GPUMetricField = 836
	GPUMetricField_GPU_PROF_CPF_CPF_TCIU_IDLE                  GPUMetricField = 837
	GPUMetricField_GPU_PROF_CPF_CPF_TCIU_STALL                 GPUMetricField = 838
	// Profiler Derived Metrics
	GPUMetricField_GPU_PROF_FETCH_SIZE       GPUMetricField = 1000
	GPUMetricField_GPU_PROF_WRITE_SIZE       GPUMetricField = 1001
	GPUMetricField_GPU_PROF_TOTAL_16_OPS     GPUMetricField = 1002
	GPUMetricField_GPU_PROF_TOTAL_32_OPS     GPUMetricField = 1003
	GPUMetricField_GPU_PROF_TOTAL_64_OPS     GPUMetricField = 1004
	GPUMetricField_GPU_PROF_GUI_UTIL_PERCENT GPUMetricField = 1005
	// OccupancyPercent
	GPUMetricField_GPU_PROF_OCCUPANCY_PERCENT GPUMetricField = 1006
	// MfmaUtil
	GPUMetricField_GPU_PROF_TENSOR_ACTIVE_PERCENT GPUMetricField = 1007
	// ValuPipeIssueUtil
	GPUMetricField_GPU_PROF_VALU_PIPE_ISSUE_UTIL GPUMetricField = 1008
	// VALUBusy
	GPUMetricField_GPU_PROF_SM_ACTIVE GPUMetricField = 1009
	// GRBM_GUI_ACTIVE
	GPUMetricField_GPU_PROF_OCCUPANCY_ELAPSED GPUMetricField = 1010
	// MeanOccupancyPerActiveCU
	GPUMetricField_GPU_PROF_OCCUPANCY_PER_ACTIVE_CU GPUMetricField = 1011
	// MeanOccupancyPerCU
	GPUMetricField_GPU_PROF_OCCUPANCY_PER_CU GPUMetricField = 1012
	// SIMD_UTILIZATION
	GPUMetricField_GPU_PROF_SIMD_UTILIZATION GPUMetricField = 1013
)

// Enum value maps for GPUMetricField.
var (
	GPUMetricField_name = map[int32]string{
		0:    "GPU_NODES_TOTAL",
		1:    "GPU_PACKAGE_POWER",
		2:    "GPU_AVERAGE_PACKAGE_POWER",
		3:    "GPU_EDGE_TEMPERATURE",
		4:    "GPU_JUNCTION_TEMPERATURE",
		5:    "GPU_MEMORY_TEMPERATURE",
		6:    "GPU_HBM_TEMPERATURE",
		7:    "GPU_GFX_ACTIVITY",
		8:    "GPU_UMC_ACTIVITY",
		9:    "GPU_MMA_ACTIVITY",
		10:   "GPU_VCN_ACTIVITY",
		11:   "GPU_JPEG_ACTIVITY",
		12:   "GPU_VOLTAGE",
		13:   "GPU_GFX_VOLTAGE",
		14:   "GPU_MEMORY_VOLTAGE",
		15:   "PCIE_SPEED",
		16:   "PCIE_MAX_SPEED",
		17:   "PCIE_BANDWIDTH",
		18:   "GPU_ENERGY_CONSUMED",
		19:   "PCIE_REPLAY_COUNT",
		20:   "PCIE_RECOVERY_COUNT",
		21:   "PCIE_REPLAY_ROLLOVER_COUNT",
		22:   "PCIE_NACK_SENT_COUNT",
		23:   "PCIE_NACK_RECEIVED_COUNT",
		24:   "GPU_CLOCK",
		25:   "GPU_POWER_USAGE",
		26:   "GPU_TOTAL_VRAM",
		27:   "GPU_ECC_CORRECT_TOTAL",
		28:   "GPU_ECC_UNCORRECT_TOTAL",
		29:   "GPU_ECC_CORRECT_SDMA",
		30:   "GPU_ECC_UNCORRECT_SDMA",
		31:   "GPU_ECC_CORRECT_GFX",
		32:   "GPU_ECC_UNCORRECT_GFX",
		33:   "GPU_ECC_CORRECT_MMHUB",
		34:   "GPU_ECC_UNCORRECT_MMHUB",
		35:   "GPU_ECC_CORRECT_ATHUB",
		36:   "GPU_ECC_UNCORRECT_ATHUB",
		37:   "GPU_ECC_CORRECT_BIF",
		38:   "GPU_ECC_UNCORRECT_BIF",
		39:   "GPU_ECC_CORRECT_HDP",
		40:   "GPU_ECC_UNCORRECT_HDP",
		41:   "GPU_ECC_CORRECT_XGMI_WAFL",
		42:   "GPU_ECC_UNCORRECT_XGMI_WAFL",
		43:   "GPU_ECC_CORRECT_DF",
		44:   "GPU_ECC_UNCORRECT_DF",
		45:   "GPU_ECC_CORRECT_SMN",
		46:   "GPU_ECC_UNCORRECT_SMN",
		47:   "GPU_ECC_CORRECT_SEM",
		48:   "GPU_ECC_UNCORRECT_SEM",
		49:   "GPU_ECC_CORRECT_MP0",
		50:   "GPU_ECC_UNCORRECT_MP0",
		51:   "GPU_ECC_CORRECT_MP1",
		52:   "GPU_ECC_UNCORRECT_MP1",
		53:   "GPU_ECC_CORRECT_FUSE",
		54:   "GPU_ECC_UNCORRECT_FUSE",
		55:   "GPU_ECC_CORRECT_UMC",
		56:   "GPU_ECC_UNCORRECT_UMC",
		57:   "GPU_XGMI_NBR_0_NOP_TX",
		58:   "GPU_XGMI_NBR_0_REQ_TX",
		59:   "GPU_XGMI_NBR_0_RESP_TX",
		60:   "GPU_XGMI_NBR_0_BEATS_TX",
		61:   "GPU_XGMI_NBR_1_NOP_TX",
		62:   "GPU_XGMI_NBR_1_REQ_TX",
		63:   "GPU_XGMI_NBR_1_RESP_TX",
		64:   "GPU_XGMI_NBR_1_BEATS_TX",
		65:   "GPU_XGMI_NBR_0_TX_THRPUT",
		66:   "GPU_XGMI_NBR_1_TX_THRPUT",
		67:   "GPU_XGMI_NBR_2_TX_THRPUT",
		68:   "GPU_XGMI_NBR_3_TX_THRPUT",
		69:   "GPU_XGMI_NBR_4_TX_THRPUT",
		70:   "GPU_XGMI_NBR_5_TX_THRPUT",
		71:   "GPU_USED_VRAM",
		72:   "GPU_FREE_VRAM",
		73:   "GPU_TOTAL_VISIBLE_VRAM",
		74:   "GPU_USED_VISIBLE_VRAM",
		75:   "GPU_FREE_VISIBLE_VRAM",
		76:   "GPU_TOTAL_GTT",
		77:   "GPU_USED_GTT",
		78:   "GPU_FREE_GTT",
		79:   "GPU_ECC_CORRECT_MCA",
		80:   "GPU_ECC_UNCORRECT_MCA",
		81:   "GPU_ECC_CORRECT_VCN",
		82:   "GPU_ECC_UNCORRECT_VCN",
		83:   "GPU_ECC_CORRECT_JPEG",
		84:   "GPU_ECC_UNCORRECT_JPEG",
		85:   "GPU_ECC_CORRECT_IH",
		86:   "GPU_ECC_UNCORRECT_IH",
		87:   "GPU_ECC_CORRECT_MPIO",
		88:   "GPU_ECC_UNCORRECT_MPIO",
		89:   "GPU_HEALTH",
		90:   "GPU_XGMI_LINK_RX",
		91:   "GPU_XGMI_LINK_TX",
		92:   "GPU_VIOLATION_CURRENT_ACCUMULATED_COUNTER",
		93:   "GPU_VIOLATION_PROCESSOR_HOT_RESIDENCY_ACCUMULATED",
		94:   "GPU_VIOLATION_PPT_RESIDENCY_ACCUMULATED",
		95:   "GPU_VIOLATION_SOCKET_THERMAL_RESIDENCY_ACCUMULATED",
		96:   "GPU_VIOLATION_VR_THERMAL_RESIDENCY_ACCUMULATED",
		97:   "GPU_VIOLATION_HBM_THERMAL_RESIDENCY_ACCUMULATED",
		98:   "GPU_GFX_BUSY_INSTANTANEOUS",
		99:   "GPU_VCN_BUSY_INSTANTANEOUS",
		100:  "GPU_JPEG_BUSY_INSTANTANEOUS",
		101:  "PCIE_RX",
		102:  "PCIE_TX",
		103:  "PCIE_BIDIRECTIONAL_BANDWIDTH",
		801:  "GPU_PROF_GRBM_GUI_ACTIVE",
		802:  "GPU_PROF_SQ_WAVES",
		803:  "GPU_PROF_GRBM_COUNT",
		804:  "GPU_PROF_CPC_CPC_STAT_BUSY",
		805:  "GPU_PROF_CPC_CPC_STAT_IDLE",
		806:  "GPU_PROF_CPC_CPC_STAT_STALL",
		807:  "GPU_PROF_CPC_CPC_TCIU_BUSY",
		808:  "GPU_PROF_CPC_CPC_TCIU_IDLE",
		809:  "GPU_PROF_CPC_CPC_UTCL2IU_BUSY",
		810:  "GPU_PROF_CPC_CPC_UTCL2IU_IDLE",
		811:  "GPU_PROF_CPC_CPC_UTCL2IU_STALL",
		812:  "GPU_PROF_CPC_ME1_BUSY_FOR_PACKET_DECODE",
		813:  "GPU_PROF_CPC_ME1_DC0_SPI_BUSY",
		814:  "GPU_PROF_CPC_UTCL1_STALL_ON_TRANSLATION",
		815:  "GPU_PROF_CPC_ALWAYS_COUNT",
		816:  "GPU_PROF_CPC_ADC_VALID_CHUNK_NOT_AVAIL",
		817:  "GPU_PROF_CPC_ADC_DISPATCH_ALLOC_DONE",
		818:  "GPU_PROF_CPC_ADC_VALID_CHUNK_END",
		819:  "GPU_PROF_CPC_SYNC_FIFO_FULL_LEVEL",
		820:  "GPU_PROF_CPC_SYNC_FIFO_FULL",
		821:  "GPU_PROF_CPC_GD_BUSY",
		822:  "GPU_PROF_CPC_TG_SEND",
		823:  "GPU_PROF_CPC_WALK_NEXT_CHUNK",
		824:  "GPU_PROF_CPC_STALLED_BY_SE0_SPI",
		825:  "GPU_PROF_CPC_STALLED_BY_SE1_SPI",
		826:  "GPU_PROF_CPC_STALLED_BY_SE2_SPI",
		827:  "GPU_PROF_CPC_STALLED_BY_SE3_SPI",
		828:  "GPU_PROF_CPC_LTE_ALL",
		829:  "GPU_PROF_CPC_SYNC_WRREQ_FIFO_BUSY",
		830:  "GPU_PROF_CPC_CANE_BUSY",
		831:  "GPU_PROF_CPC_CANE_STALL",
		832:  "GPU_PROF_CPF_CMP_UTCL1_STALL_ON_TRANSLATION",
		833:  "GPU_PROF_CPF_CPF_STAT_BUSY",
		834:  "GPU_PROF_CPF_CPF_STAT_IDLE",
		835:  "GPU_PROF_CPF_CPF_STAT_STALL",
		836:  "GPU_PROF_CPF_CPF_TCIU_BUSY",
		837:  "GPU_PROF_CPF_CPF_TCIU_IDLE",
		838:  "GPU_PROF_CPF_CPF_TCIU_STALL",
		1000: "GPU_PROF_FETCH_SIZE",
		1001: "GPU_PROF_WRITE_SIZE",
		1002: "GPU_PROF_TOTAL_16_OPS",
		1003: "GPU_PROF_TOTAL_32_OPS",
		1004: "GPU_PROF_TOTAL_64_OPS",
		1005: "GPU_PROF_GUI_UTIL_PERCENT",
		1006: "GPU_PROF_OCCUPANCY_PERCENT",
		1007: "GPU_PROF_TENSOR_ACTIVE_PERCENT",
		1008: "GPU_PROF_VALU_PIPE_ISSUE_UTIL",
		1009: "GPU_PROF_SM_ACTIVE",
		1010: "GPU_PROF_OCCUPANCY_ELAPSED",
		1011: "GPU_PROF_OCCUPANCY_PER_ACTIVE_CU",
		1012: "GPU_PROF_OCCUPANCY_PER_CU",
		1013: "GPU_PROF_SIMD_UTILIZATION",
	}
	GPUMetricField_value = map[string]int32{
		"GPU_NODES_TOTAL":                                    0,
		"GPU_PACKAGE_POWER":                                  1,
		"GPU_AVERAGE_PACKAGE_POWER":                          2,
		"GPU_EDGE_TEMPERATURE":                               3,
		"GPU_JUNCTION_TEMPERATURE":                           4,
		"GPU_MEMORY_TEMPERATURE":                             5,
		"GPU_HBM_TEMPERATURE":                                6,
		"GPU_GFX_ACTIVITY":                                   7,
		"GPU_UMC_ACTIVITY":                                   8,
		"GPU_MMA_ACTIVITY":                                   9,
		"GPU_VCN_ACTIVITY":                                   10,
		"GPU_JPEG_ACTIVITY":                                  11,
		"GPU_VOLTAGE":                                        12,
		"GPU_GFX_VOLTAGE":                                    13,
		"GPU_MEMORY_VOLTAGE":                                 14,
		"PCIE_SPEED":                                         15,
		"PCIE_MAX_SPEED":                                     16,
		"PCIE_BANDWIDTH":                                     17,
		"GPU_ENERGY_CONSUMED":                                18,
		"PCIE_REPLAY_COUNT":                                  19,
		"PCIE_RECOVERY_COUNT":                                20,
		"PCIE_REPLAY_ROLLOVER_COUNT":                         21,
		"PCIE_NACK_SENT_COUNT":                               22,
		"PCIE_NACK_RECEIVED_COUNT":                           23,
		"GPU_CLOCK":                                          24,
		"GPU_POWER_USAGE":                                    25,
		"GPU_TOTAL_VRAM":                                     26,
		"GPU_ECC_CORRECT_TOTAL":                              27,
		"GPU_ECC_UNCORRECT_TOTAL":                            28,
		"GPU_ECC_CORRECT_SDMA":                               29,
		"GPU_ECC_UNCORRECT_SDMA":                             30,
		"GPU_ECC_CORRECT_GFX":                                31,
		"GPU_ECC_UNCORRECT_GFX":                              32,
		"GPU_ECC_CORRECT_MMHUB":                              33,
		"GPU_ECC_UNCORRECT_MMHUB":                            34,
		"GPU_ECC_CORRECT_ATHUB":                              35,
		"GPU_ECC_UNCORRECT_ATHUB":                            36,
		"GPU_ECC_CORRECT_BIF":                                37,
		"GPU_ECC_UNCORRECT_BIF":                              38,
		"GPU_ECC_CORRECT_HDP":                                39,
		"GPU_ECC_UNCORRECT_HDP":                              40,
		"GPU_ECC_CORRECT_XGMI_WAFL":                          41,
		"GPU_ECC_UNCORRECT_XGMI_WAFL":                        42,
		"GPU_ECC_CORRECT_DF":                                 43,
		"GPU_ECC_UNCORRECT_DF":                               44,
		"GPU_ECC_CORRECT_SMN":                                45,
		"GPU_ECC_UNCORRECT_SMN":                              46,
		"GPU_ECC_CORRECT_SEM":                                47,
		"GPU_ECC_UNCORRECT_SEM":                              48,
		"GPU_ECC_CORRECT_MP0":                                49,
		"GPU_ECC_UNCORRECT_MP0":                              50,
		"GPU_ECC_CORRECT_MP1":                                51,
		"GPU_ECC_UNCORRECT_MP1":                              52,
		"GPU_ECC_CORRECT_FUSE":                               53,
		"GPU_ECC_UNCORRECT_FUSE":                             54,
		"GPU_ECC_CORRECT_UMC":                                55,
		"GPU_ECC_UNCORRECT_UMC":                              56,
		"GPU_XGMI_NBR_0_NOP_TX":                              57,
		"GPU_XGMI_NBR_0_REQ_TX":                              58,
		"GPU_XGMI_NBR_0_RESP_TX":                             59,
		"GPU_XGMI_NBR_0_BEATS_TX":                            60,
		"GPU_XGMI_NBR_1_NOP_TX":                              61,
		"GPU_XGMI_NBR_1_REQ_TX":                              62,
		"GPU_XGMI_NBR_1_RESP_TX":                             63,
		"GPU_XGMI_NBR_1_BEATS_TX":                            64,
		"GPU_XGMI_NBR_0_TX_THRPUT":                           65,
		"GPU_XGMI_NBR_1_TX_THRPUT":                           66,
		"GPU_XGMI_NBR_2_TX_THRPUT":                           67,
		"GPU_XGMI_NBR_3_TX_THRPUT":                           68,
		"GPU_XGMI_NBR_4_TX_THRPUT":                           69,
		"GPU_XGMI_NBR_5_TX_THRPUT":                           70,
		"GPU_USED_VRAM":                                      71,
		"GPU_FREE_VRAM":                                      72,
		"GPU_TOTAL_VISIBLE_VRAM":                             73,
		"GPU_USED_VISIBLE_VRAM":                              74,
		"GPU_FREE_VISIBLE_VRAM":                              75,
		"GPU_TOTAL_GTT":                                      76,
		"GPU_USED_GTT":                                       77,
		"GPU_FREE_GTT":                                       78,
		"GPU_ECC_CORRECT_MCA":                                79,
		"GPU_ECC_UNCORRECT_MCA":                              80,
		"GPU_ECC_CORRECT_VCN":                                81,
		"GPU_ECC_UNCORRECT_VCN":                              82,
		"GPU_ECC_CORRECT_JPEG":                               83,
		"GPU_ECC_UNCORRECT_JPEG":                             84,
		"GPU_ECC_CORRECT_IH":                                 85,
		"GPU_ECC_UNCORRECT_IH":                               86,
		"GPU_ECC_CORRECT_MPIO":                               87,
		"GPU_ECC_UNCORRECT_MPIO":                             88,
		"GPU_HEALTH":                                         89,
		"GPU_XGMI_LINK_RX":                                   90,
		"GPU_XGMI_LINK_TX":                                   91,
		"GPU_VIOLATION_CURRENT_ACCUMULATED_COUNTER":          92,
		"GPU_VIOLATION_PROCESSOR_HOT_RESIDENCY_ACCUMULATED":  93,
		"GPU_VIOLATION_PPT_RESIDENCY_ACCUMULATED":            94,
		"GPU_VIOLATION_SOCKET_THERMAL_RESIDENCY_ACCUMULATED": 95,
		"GPU_VIOLATION_VR_THERMAL_RESIDENCY_ACCUMULATED":     96,
		"GPU_VIOLATION_HBM_THERMAL_RESIDENCY_ACCUMULATED":    97,
		"GPU_GFX_BUSY_INSTANTANEOUS":                         98,
		"GPU_VCN_BUSY_INSTANTANEOUS":                         99,
		"GPU_JPEG_BUSY_INSTANTANEOUS":                        100,
		"PCIE_RX":                                            101,
		"PCIE_TX":                                            102,
		"PCIE_BIDIRECTIONAL_BANDWIDTH":                       103,
		"GPU_PROF_GRBM_GUI_ACTIVE":                           801,
		"GPU_PROF_SQ_WAVES":                                  802,
		"GPU_PROF_GRBM_COUNT":                                803,
		"GPU_PROF_CPC_CPC_STAT_BUSY":                         804,
		"GPU_PROF_CPC_CPC_STAT_IDLE":                         805,
		"GPU_PROF_CPC_CPC_STAT_STALL":                        806,
		"GPU_PROF_CPC_CPC_TCIU_BUSY":                         807,
		"GPU_PROF_CPC_CPC_TCIU_IDLE":                         808,
		"GPU_PROF_CPC_CPC_UTCL2IU_BUSY":                      809,
		"GPU_PROF_CPC_CPC_UTCL2IU_IDLE":                      810,
		"GPU_PROF_CPC_CPC_UTCL2IU_STALL":                     811,
		"GPU_PROF_CPC_ME1_BUSY_FOR_PACKET_DECODE":            812,
		"GPU_PROF_CPC_ME1_DC0_SPI_BUSY":                      813,
		"GPU_PROF_CPC_UTCL1_STALL_ON_TRANSLATION":            814,
		"GPU_PROF_CPC_ALWAYS_COUNT":                          815,
		"GPU_PROF_CPC_ADC_VALID_CHUNK_NOT_AVAIL":             816,
		"GPU_PROF_CPC_ADC_DISPATCH_ALLOC_DONE":               817,
		"GPU_PROF_CPC_ADC_VALID_CHUNK_END":                   818,
		"GPU_PROF_CPC_SYNC_FIFO_FULL_LEVEL":                  819,
		"GPU_PROF_CPC_SYNC_FIFO_FULL":                        820,
		"GPU_PROF_CPC_GD_BUSY":                               821,
		"GPU_PROF_CPC_TG_SEND":                               822,
		"GPU_PROF_CPC_WALK_NEXT_CHUNK":                       823,
		"GPU_PROF_CPC_STALLED_BY_SE0_SPI":                    824,
		"GPU_PROF_CPC_STALLED_BY_SE1_SPI":                    825,
		"GPU_PROF_CPC_STALLED_BY_SE2_SPI":                    826,
		"GPU_PROF_CPC_STALLED_BY_SE3_SPI":                    827,
		"GPU_PROF_CPC_LTE_ALL":                               828,
		"GPU_PROF_CPC_SYNC_WRREQ_FIFO_BUSY":                  829,
		"GPU_PROF_CPC_CANE_BUSY":                             830,
		"GPU_PROF_CPC_CANE_STALL":                            831,
		"GPU_PROF_CPF_CMP_UTCL1_STALL_ON_TRANSLATION":        832,
		"GPU_PROF_CPF_CPF_STAT_BUSY":                         833,
		"GPU_PROF_CPF_CPF_STAT_IDLE":                         834,
		"GPU_PROF_CPF_CPF_STAT_STALL":                        835,
		"GPU_PROF_CPF_CPF_TCIU_BUSY":                         836,
		"GPU_PROF_CPF_CPF_TCIU_IDLE":                         837,
		"GPU_PROF_CPF_CPF_TCIU_STALL":                        838,
		"GPU_PROF_FETCH_SIZE":                                1000,
		"GPU_PROF_WRITE_SIZE":                                1001,
		"GPU_PROF_TOTAL_16_OPS":                              1002,
		"GPU_PROF_TOTAL_32_OPS":                              1003,
		"GPU_PROF_TOTAL_64_OPS":                              1004,
		"GPU_PROF_GUI_UTIL_PERCENT":                          1005,
		"GPU_PROF_OCCUPANCY_PERCENT":                         1006,
		"GPU_PROF_TENSOR_ACTIVE_PERCENT":                     1007,
		"GPU_PROF_VALU_PIPE_ISSUE_UTIL":                      1008,
		"GPU_PROF_SM_ACTIVE":                                 1009,
		"GPU_PROF_OCCUPANCY_ELAPSED":                         1010,
		"GPU_PROF_OCCUPANCY_PER_ACTIVE_CU":                   1011,
		"GPU_PROF_OCCUPANCY_PER_CU":                          1012,
		"GPU_PROF_SIMD_UTILIZATION":                          1013,
	}
)

func (x GPUMetricField) Enum() *GPUMetricField {
	p := new(GPUMetricField)
	*p = x
	return p
}

func (x GPUMetricField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPUMetricField) Descriptor() protoreflect.EnumDescriptor {
	return file_exporterconfig_proto_enumTypes[1].Descriptor()
}

func (GPUMetricField) Type() protoreflect.EnumType {
	return &file_exporterconfig_proto_enumTypes[1]
}

func (x GPUMetricField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPUMetricField.Descriptor instead.
func (GPUMetricField) EnumDescriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{1}
}

type GPUMetricLabel int32

const (
	GPUMetricLabel_GPU_UUID GPUMetricLabel = 0
	// mandatory field GPU_ID cannot be disabled
	GPUMetricLabel_GPU_ID GPUMetricLabel = 1
	// mandatory field GPU_PARTITION_ID cannot be disabled
	GPUMetricLabel_GPU_PARTITION_ID GPUMetricLabel = 2
	// mandatory field GPU_COMPUTE_PARTITION_TYPE cannot be disabled
	GPUMetricLabel_GPU_COMPUTE_PARTITION_TYPE GPUMetricLabel = 3
	// mandatory field GPU_MEMORY_PARTITION_TYPE cannot be disabled
	GPUMetricLabel_GPU_MEMORY_PARTITION_TYPE GPUMetricLabel = 4
	// KFD_PROCESS_ID cannot be disabled
	// KFD_PROCESS_ID is a unique identifier for a process running on a GPU
	GPUMetricLabel_KFD_PROCESS_ID GPUMetricLabel = 5
	// Deployment mode Mode cannot be disabled
	// Hypervisor - Virtualization Host gim driver
	// BareMetal  - PCI passthrough without virtualization host
	// VM_VF      - Virtual Machine with VF passthrough
	// VM_PF      - Virtual Machine with PF passthrough
	GPUMetricLabel_DEPLOYMENT_MODE GPUMetricLabel = 6
)

// Enum value maps for GPUMetricLabel.
var (
	GPUMetricLabel_name = map[int32]string{
		0: "GPU_UUID",
		1: "GPU_ID",
		2: "GPU_PARTITION_ID",
		3: "GPU_COMPUTE_PARTITION_TYPE",
		4: "GPU_MEMORY_PARTITION_TYPE",
		5: "KFD_PROCESS_ID",
		6: "DEPLOYMENT_MODE",
	}
	GPUMetricLabel_value = map[string]int32{
		"GPU_UUID":                   0,
		"GPU_ID":                     1,
		"GPU_PARTITION_ID":           2,
		"GPU_COMPUTE_PARTITION_TYPE": 3,
		"GPU_MEMORY_PARTITION_TYPE":  4,
		"KFD_PROCESS_ID":             5,
		"DEPLOYMENT_MODE":            6,
	}
)

func (x GPUMetricLabel) Enum() *GPUMetricLabel {
	p := new(GPUMetricLabel)
	*p = x
	return p
}

func (x GPUMetricLabel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPUMetricLabel) Descriptor() protoreflect.EnumDescriptor {
	return file_exporterconfig_proto_enumTypes[2].Descriptor()
}

func (GPUMetricLabel) Type() protoreflect.EnumType {
	return &file_exporterconfig_proto_enumTypes[2]
}

func (x GPUMetricLabel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPUMetricLabel.Descriptor instead.
func (GPUMetricLabel) EnumDescriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{2}
}

type NICMetricField int32

const (
	NICMetricField_NIC_TOTAL     NICMetricField = 0
	NICMetricField_NIC_MAX_SPEED NICMetricField = 1
	// Port Stats Field defines the various statistics fields for port-level metrics.
	// Each field represents a different type of statistic related to the port's performance and health,
	// such as frames received successfully, total frames received, and other specific metrics.
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_OK            NICMetricField = 2
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_ALL           NICMetricField = 3
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_BAD_FCS       NICMetricField = 4
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_BAD_ALL       NICMetricField = 5
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PAUSE         NICMetricField = 6
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_BAD_LENGTH    NICMetricField = 7
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_UNDERSIZED    NICMetricField = 8
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_OVERSIZED     NICMetricField = 9
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_FRAGMENTS     NICMetricField = 10
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_JABBER        NICMetricField = 11
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRIPAUSE      NICMetricField = 12
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_STOMPED_CRC   NICMetricField = 13
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_TOO_LONG      NICMetricField = 14
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_DROPPED       NICMetricField = 15
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_OK            NICMetricField = 16
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_ALL           NICMetricField = 17
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_BAD           NICMetricField = 18
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PAUSE         NICMetricField = 19
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRIPAUSE      NICMetricField = 20
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_LESS_THAN_64B NICMetricField = 21
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_TRUNCATED     NICMetricField = 22
	NICMetricField_NIC_PORT_STATS_RSFEC_CORRECTABLE_WORD  NICMetricField = 23
	NICMetricField_NIC_PORT_STATS_RSFEC_CH_SYMBOL_ERR_CNT NICMetricField = 24
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_UNICAST       NICMetricField = 25
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_MULTICAST     NICMetricField = 26
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_BROADCAST     NICMetricField = 27
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_0         NICMetricField = 28
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_1         NICMetricField = 29
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_2         NICMetricField = 30
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_3         NICMetricField = 31
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_4         NICMetricField = 32
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_5         NICMetricField = 33
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_6         NICMetricField = 34
	NICMetricField_NIC_PORT_STATS_FRAMES_RX_PRI_7         NICMetricField = 35
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_UNICAST       NICMetricField = 36
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_MULTICAST     NICMetricField = 37
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_BROADCAST     NICMetricField = 38
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_0         NICMetricField = 39
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_1         NICMetricField = 40
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_2         NICMetricField = 41
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_3         NICMetricField = 42
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_4         NICMetricField = 43
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_5         NICMetricField = 44
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_6         NICMetricField = 45
	NICMetricField_NIC_PORT_STATS_FRAMES_TX_PRI_7         NICMetricField = 46
	NICMetricField_NIC_PORT_STATS_OCTETS_RX_OK            NICMetricField = 47
	NICMetricField_NIC_PORT_STATS_OCTETS_RX_ALL           NICMetricField = 48
	NICMetricField_NIC_PORT_STATS_OCTETS_TX_OK            NICMetricField = 49
	NICMetricField_NIC_PORT_STATS_OCTETS_TX_ALL           NICMetricField = 50
	// Lif stats
	NICMetricField_NIC_LIF_STATS_RX_UNICAST_PACKETS        NICMetricField = 100
	NICMetricField_NIC_LIF_STATS_RX_UNICAST_DROP_PACKETS   NICMetricField = 101
	NICMetricField_NIC_LIF_STATS_RX_MULTICAST_DROP_PACKETS NICMetricField = 102
	NICMetricField_NIC_LIF_STATS_RX_BROADCAST_DROP_PACKETS NICMetricField = 103
	NICMetricField_NIC_LIF_STATS_RX_DMA_ERRORS             NICMetricField = 104
	NICMetricField_NIC_LIF_STATS_TX_UNICAST_PACKETS        NICMetricField = 105
	NICMetricField_NIC_LIF_STATS_TX_UNICAST_DROP_PACKETS   NICMetricField = 106
	NICMetricField_NIC_LIF_STATS_TX_MULTICAST_DROP_PACKETS NICMetricField = 107
	NICMetricField_NIC_LIF_STATS_TX_BROADCAST_DROP_PACKETS NICMetricField = 108
	NICMetricField_NIC_LIF_STATS_TX_DMA_ERRORS             NICMetricField = 109
	// RDMA core Stats
	NICMetricField_RDMA_TX_UCAST_PKTS             NICMetricField = 200
	NICMetricField_RDMA_TX_CNP_PKTS               NICMetricField = 201
	NICMetricField_RDMA_RX_UCAST_PKTS             NICMetricField = 202
	NICMetricField_RDMA_RX_CNP_PKTS               NICMetricField = 203
	NICMetricField_RDMA_RX_ECN_PKTS               NICMetricField = 204
	NICMetricField_RDMA_REQ_RX_PKT_SEQ_ERR        NICMetricField = 205
	NICMetricField_RDMA_REQ_RX_RNR_RETRY_ERR      NICMetricField = 206
	NICMetricField_RDMA_REQ_RX_RMT_ACC_ERR        NICMetricField = 207
	NICMetricField_RDMA_REQ_RX_RMT_REQ_ERR        NICMetricField = 208
	NICMetricField_RDMA_REQ_RX_OPER_ERR           NICMetricField = 209
	NICMetricField_RDMA_REQ_RX_IMPL_NAK_SEQ_ERR   NICMetricField = 210
	NICMetricField_RDMA_REQ_RX_CQE_ERR            NICMetricField = 211
	NICMetricField_RDMA_REQ_RX_CQE_FLUSH          NICMetricField = 212
	NICMetricField_RDMA_REQ_RX_DUP_RESP           NICMetricField = 213
	NICMetricField_RDMA_REQ_RX_INVALID_PKTS       NICMetricField = 214
	NICMetricField_RDMA_REQ_TX_LOC_ERR            NICMetricField = 215
	NICMetricField_RDMA_REQ_TX_LOC_OPER_ERR       NICMetricField = 216
	NICMetricField_RDMA_REQ_TX_MEM_MGMT_ERR       NICMetricField = 217
	NICMetricField_RDMA_REQ_TX_RETRY_EXCD_ERR     NICMetricField = 218
	NICMetricField_RDMA_REQ_TX_LOC_SGL_INV_ERR    NICMetricField = 219
	NICMetricField_RDMA_RESP_RX_DUP_REQUEST       NICMetricField = 220
	NICMetricField_RDMA_RESP_RX_OUTOF_BUF         NICMetricField = 221
	NICMetricField_RDMA_RESP_RX_OUTOUF_SEQ        NICMetricField = 222
	NICMetricField_RDMA_RESP_RX_CQE_ERR           NICMetricField = 223
	NICMetricField_RDMA_RESP_RX_CQE_FLUSH         NICMetricField = 224
	NICMetricField_RDMA_RESP_RX_LOC_LEN_ERR       NICMetricField = 225
	NICMetricField_RDMA_RESP_RX_INVALID_REQUEST   NICMetricField = 226
	NICMetricField_RDMA_RESP_RX_LOC_OPER_ERR      NICMetricField = 227
	NICMetricField_RDMA_RESP_RX_OUTOF_ATOMIC      NICMetricField = 228
	NICMetricField_RDMA_RESP_TX_PKT_SEQ_ERR       NICMetricField = 229
	NICMetricField_RDMA_RESP_TX_RMT_INVAL_REQ_ERR NICMetricField = 230
	NICMetricField_RDMA_RESP_TX_RMT_ACC_ERR       NICMetricField = 231
	NICMetricField_RDMA_RESP_TX_RMT_OPER_ERR      NICMetricField = 232
	NICMetricField_RDMA_RESP_TX_RNR_RETRY_ERR     NICMetricField = 233
	NICMetricField_RDMA_RESP_TX_LOC_SGL_INV_ERR   NICMetricField = 234
	NICMetricField_RDMA_RESP_RX_S0_TABLE_ERR      NICMetricField = 235
	// QP  stats
	NICMetricField_QP_SQ_REQ_TX_NUM_PACKET                NICMetricField = 300
	NICMetricField_QP_SQ_REQ_TX_NUM_SEND_MSGS_WITH_RKE    NICMetricField = 301
	NICMetricField_QP_SQ_REQ_TX_NUM_LOCAL_ACK_TIMEOUTS    NICMetricField = 302
	NICMetricField_QP_SQ_REQ_TX_RNR_TIMEOUT               NICMetricField = 303
	NICMetricField_QP_SQ_REQ_TX_TIMES_SQ_DRAINED          NICMetricField = 304
	NICMetricField_QP_SQ_REQ_TX_NUM_CNP_SENT              NICMetricField = 305
	NICMetricField_QP_SQ_REQ_RX_NUM_PACKET                NICMetricField = 306
	NICMetricField_QP_SQ_REQ_RX_NUM_PKTS_WITH_ECN_MARKING NICMetricField = 307
	NICMetricField_QP_SQ_QCN_CURR_BYTE_COUNTER            NICMetricField = 308
	NICMetricField_QP_SQ_QCN_NUM_BYTE_COUNTER_EXPIRED     NICMetricField = 309
	NICMetricField_QP_SQ_QCN_NUM_TIMER_EXPIRED            NICMetricField = 310
	NICMetricField_QP_SQ_QCN_NUM_ALPHA_TIMER_EXPIRED      NICMetricField = 311
	NICMetricField_QP_SQ_QCN_NUM_CNP_RCVD                 NICMetricField = 312
	NICMetricField_QP_SQ_QCN_NUM_CNP_PROCESSED            NICMetricField = 313
	NICMetricField_QP_RQ_RSP_TX_NUM_PACKET                NICMetricField = 314
	NICMetricField_QP_RQ_RSP_TX_RNR_ERROR                 NICMetricField = 315
	NICMetricField_QP_RQ_RSP_TX_NUM_SEQUENCE_ERROR        NICMetricField = 316
	NICMetricField_QP_RQ_RSP_TX_NUM_RP_BYTE_THRES_HIT     NICMetricField = 317
	NICMetricField_QP_RQ_RSP_TX_NUM_RP_MAX_RATE_HIT       NICMetricField = 318
	NICMetricField_QP_RQ_RSP_RX_NUM_PACKET                NICMetricField = 319
	NICMetricField_QP_RQ_RSP_RX_NUM_SEND_MSGS_WITH_RKE    NICMetricField = 320
	NICMetricField_QP_RQ_RSP_RX_NUM_PKTS_WITH_ECN_MARKING NICMetricField = 321
	NICMetricField_QP_RQ_RSP_RX_NUM_CNPS_RECEIVED         NICMetricField = 322
	NICMetricField_QP_RQ_RSP_RX_MAX_RECIRC_EXCEEDED_DROP  NICMetricField = 323
	NICMetricField_QP_RQ_RSP_RX_NUM_MEM_WINDOW_INVALID    NICMetricField = 324
	NICMetricField_QP_RQ_RSP_RX_NUM_DUPL_WITH_WR_SEND_OPC NICMetricField = 325
	NICMetricField_QP_RQ_RSP_RX_NUM_DUPL_READ_BACKTRACK   NICMetricField = 326
	NICMetricField_QP_RQ_RSP_RX_NUM_DUPL_READ_ATOMIC_DROP NICMetricField = 327
	NICMetricField_QP_RQ_QCN_CURR_BYTE_COUNTER            NICMetricField = 328
	NICMetricField_QP_RQ_QCN_NUM_BYTE_COUNTER_EXPIRED     NICMetricField = 329
	NICMetricField_QP_RQ_QCN_NUM_TIMER_EXPIRED            NICMetricField = 330
	NICMetricField_QP_RQ_QCN_NUM_ALPHA_TIMER_EXPIRED      NICMetricField = 331
	NICMetricField_QP_RQ_QCN_NUM_CNP_RCVD                 NICMetricField = 332
	NICMetricField_QP_RQ_QCN_NUM_CNP_PROCESSED            NICMetricField = 333
	// Ethtool stats
	NICMetricField_ETH_TX_PACKETS            NICMetricField = 500
	NICMetricField_ETH_TX_BYTES              NICMetricField = 501
	NICMetricField_ETH_RX_PACKETS            NICMetricField = 502
	NICMetricField_ETH_RX_BYTES              NICMetricField = 503
	NICMetricField_ETH_FRAMES_RX_BROADCAST   NICMetricField = 504
	NICMetricField_ETH_FRAMES_RX_MULTICAST   NICMetricField = 505
	NICMetricField_ETH_FRAMES_TX_BROADCAST   NICMetricField = 506
	NICMetricField_ETH_FRAMES_TX_MULTICAST   NICMetricField = 507
	NICMetricField_ETH_FRAMES_RX_PAUSE       NICMetricField = 508
	NICMetricField_ETH_FRAMES_TX_PAUSE       NICMetricField = 509
	NICMetricField_ETH_FRAMES_RX_64B         NICMetricField = 510
	NICMetricField_ETH_FRAMES_RX_65B_127B    NICMetricField = 511
	NICMetricField_ETH_FRAMES_RX_128B_255B   NICMetricField = 512
	NICMetricField_ETH_FRAMES_RX_256B_511B   NICMetricField = 513
	NICMetricField_ETH_FRAMES_RX_512B_1023B  NICMetricField = 514
	NICMetricField_ETH_FRAMES_RX_1024B_1518B NICMetricField = 515
	NICMetricField_ETH_FRAMES_RX_1519B_2047B NICMetricField = 516
	NICMetricField_ETH_FRAMES_RX_2048B_4095B NICMetricField = 517
	NICMetricField_ETH_FRAMES_RX_4096B_8191B NICMetricField = 518
	NICMetricField_ETH_FRAMES_RX_BAD_FCS     NICMetricField = 519
	NICMetricField_ETH_FRAMES_RX_PRI0        NICMetricField = 520
	NICMetricField_ETH_FRAMES_RX_PRI1        NICMetricField = 521
	NICMetricField_ETH_FRAMES_RX_PRI2        NICMetricField = 522
	NICMetricField_ETH_FRAMES_RX_PRI3        NICMetricField = 523
	NICMetricField_ETH_FRAMES_RX_PRI4        NICMetricField = 524
	NICMetricField_ETH_FRAMES_RX_PRI5        NICMetricField = 525
	NICMetricField_ETH_FRAMES_RX_PRI6        NICMetricField = 526
	NICMetricField_ETH_FRAMES_RX_PRI7        NICMetricField = 527
	NICMetricField_ETH_FRAMES_TX_PRI0        NICMetricField = 528
	NICMetricField_ETH_FRAMES_TX_PRI1        NICMetricField = 529
	NICMetricField_ETH_FRAMES_TX_PRI2        NICMetricField = 530
	NICMetricField_ETH_FRAMES_TX_PRI3        NICMetricField = 531
	NICMetricField_ETH_FRAMES_TX_PRI4        NICMetricField = 532
	NICMetricField_ETH_FRAMES_TX_PRI5        NICMetricField = 533
	NICMetricField_ETH_FRAMES_TX_PRI6        NICMetricField = 534
	NICMetricField_ETH_FRAMES_TX_PRI7        NICMetricField = 535
	NICMetricField_ETH_FRAMES_RX_DROPPED     NICMetricField = 536
	NICMetricField_ETH_FRAMES_RX_ALL         NICMetricField = 537
	NICMetricField_ETH_FRAMES_RX_BAD_ALL     NICMetricField = 538
	NICMetricField_ETH_FRAMES_TX_ALL         NICMetricField = 539
	NICMetricField_ETH_FRAMES_TX_BAD         NICMetricField = 540
	NICMetricField_ETH_HW_TX_DROPPED         NICMetricField = 541
	NICMetricField_ETH_HW_RX_DROPPED         NICMetricField = 542
	NICMetricField_ETH_RX_0_DROPPED          NICMetricField = 543
	NICMetricField_ETH_RX_1_DROPPED          NICMetricField = 544
	NICMetricField_ETH_RX_2_DROPPED          NICMetricField = 545
	NICMetricField_ETH_RX_3_DROPPED          NICMetricField = 546
	NICMetricField_ETH_RX_4_DROPPED          NICMetricField = 547
	NICMetricField_ETH_RX_5_DROPPED          NICMetricField = 548
	NICMetricField_ETH_RX_6_DROPPED          NICMetricField = 549
	NICMetricField_ETH_RX_7_DROPPED          NICMetricField = 550
	NICMetricField_ETH_RX_8_DROPPED          NICMetricField = 551
	NICMetricField_ETH_RX_9_DROPPED          NICMetricField = 552
	NICMetricField_ETH_RX_10_DROPPED         NICMetricField = 553
	NICMetricField_ETH_RX_11_DROPPED         NICMetricField = 554
	NICMetricField_ETH_RX_12_DROPPED         NICMetricField = 555
	NICMetricField_ETH_RX_13_DROPPED         NICMetricField = 556
	NICMetricField_ETH_RX_14_DROPPED         NICMetricField = 557
	NICMetricField_ETH_RX_15_DROPPED         NICMetricField = 558
	NICMetricField_ETH_FRAMES_RX_OK          NICMetricField = 559
	NICMetricField_ETH_FRAMES_TX_OK          NICMetricField = 560
	NICMetricField_ETH_OCTETS_RX_OK          NICMetricField = 561
	NICMetricField_ETH_OCTETS_TX_OK          NICMetricField = 562
	NICMetricField_ETH_OCTETS_TX_TOTAL       NICMetricField = 563
	NICMetricField_ETH_FRAMES_RX_UNICAST     NICMetricField = 564
	NICMetricField_ETH_FRAMES_TX_UNICAST     NICMetricField = 565
	NICMetricField_ETH_FRAMES_RX_8192B_9215B NICMetricField = 566
	NICMetricField_ETH_FRAMES_TX_8192B_9215B NICMetricField = 567
	NICMetricField_ETH_FRAMES_TX_64B         NICMetricField = 568
	NICMetricField_ETH_FRAMES_TX_65B_127B    NICMetricField = 569
	NICMetricField_ETH_FRAMES_TX_128B_255B   NICMetricField = 570
	NICMetricField_ETH_FRAMES_TX_256B_511B   NICMetricField = 571
	NICMetricField_ETH_FRAMES_TX_512B_1023B  NICMetricField = 572
	NICMetricField_ETH_FRAMES_TX_1024B_1518B NICMetricField = 573
	NICMetricField_ETH_FRAMES_TX_1519B_2047B NICMetricField = 574
	NICMetricField_ETH_FRAMES_TX_2048B_4095B NICMetricField = 575
	NICMetricField_ETH_FRAMES_TX_4096B_8191B NICMetricField = 576
)

// Enum value maps for NICMetricField.
var (
	NICMetricField_name = map[int32]string{
		0:   "NIC_TOTAL",
		1:   "NIC_MAX_SPEED",
		2:   "NIC_PORT_STATS_FRAMES_RX_OK",
		3:   "NIC_PORT_STATS_FRAMES_RX_ALL",
		4:   "NIC_PORT_STATS_FRAMES_RX_BAD_FCS",
		5:   "NIC_PORT_STATS_FRAMES_RX_BAD_ALL",
		6:   "NIC_PORT_STATS_FRAMES_RX_PAUSE",
		7:   "NIC_PORT_STATS_FRAMES_RX_BAD_LENGTH",
		8:   "NIC_PORT_STATS_FRAMES_RX_UNDERSIZED",
		9:   "NIC_PORT_STATS_FRAMES_RX_OVERSIZED",
		10:  "NIC_PORT_STATS_FRAMES_RX_FRAGMENTS",
		11:  "NIC_PORT_STATS_FRAMES_RX_JABBER",
		12:  "NIC_PORT_STATS_FRAMES_RX_PRIPAUSE",
		13:  "NIC_PORT_STATS_FRAMES_RX_STOMPED_CRC",
		14:  "NIC_PORT_STATS_FRAMES_RX_TOO_LONG",
		15:  "NIC_PORT_STATS_FRAMES_RX_DROPPED",
		16:  "NIC_PORT_STATS_FRAMES_TX_OK",
		17:  "NIC_PORT_STATS_FRAMES_TX_ALL",
		18:  "NIC_PORT_STATS_FRAMES_TX_BAD",
		19:  "NIC_PORT_STATS_FRAMES_TX_PAUSE",
		20:  "NIC_PORT_STATS_FRAMES_TX_PRIPAUSE",
		21:  "NIC_PORT_STATS_FRAMES_TX_LESS_THAN_64B",
		22:  "NIC_PORT_STATS_FRAMES_TX_TRUNCATED",
		23:  "NIC_PORT_STATS_RSFEC_CORRECTABLE_WORD",
		24:  "NIC_PORT_STATS_RSFEC_CH_SYMBOL_ERR_CNT",
		25:  "NIC_PORT_STATS_FRAMES_RX_UNICAST",
		26:  "NIC_PORT_STATS_FRAMES_RX_MULTICAST",
		27:  "NIC_PORT_STATS_FRAMES_RX_BROADCAST",
		28:  "NIC_PORT_STATS_FRAMES_RX_PRI_0",
		29:  "NIC_PORT_STATS_FRAMES_RX_PRI_1",
		30:  "NIC_PORT_STATS_FRAMES_RX_PRI_2",
		31:  "NIC_PORT_STATS_FRAMES_RX_PRI_3",
		32:  "NIC_PORT_STATS_FRAMES_RX_PRI_4",
		33:  "NIC_PORT_STATS_FRAMES_RX_PRI_5",
		34:  "NIC_PORT_STATS_FRAMES_RX_PRI_6",
		35:  "NIC_PORT_STATS_FRAMES_RX_PRI_7",
		36:  "NIC_PORT_STATS_FRAMES_TX_UNICAST",
		37:  "NIC_PORT_STATS_FRAMES_TX_MULTICAST",
		38:  "NIC_PORT_STATS_FRAMES_TX_BROADCAST",
		39:  "NIC_PORT_STATS_FRAMES_TX_PRI_0",
		40:  "NIC_PORT_STATS_FRAMES_TX_PRI_1",
		41:  "NIC_PORT_STATS_FRAMES_TX_PRI_2",
		42:  "NIC_PORT_STATS_FRAMES_TX_PRI_3",
		43:  "NIC_PORT_STATS_FRAMES_TX_PRI_4",
		44:  "NIC_PORT_STATS_FRAMES_TX_PRI_5",
		45:  "NIC_PORT_STATS_FRAMES_TX_PRI_6",
		46:  "NIC_PORT_STATS_FRAMES_TX_PRI_7",
		47:  "NIC_PORT_STATS_OCTETS_RX_OK",
		48:  "NIC_PORT_STATS_OCTETS_RX_ALL",
		49:  "NIC_PORT_STATS_OCTETS_TX_OK",
		50:  "NIC_PORT_STATS_OCTETS_TX_ALL",
		100: "NIC_LIF_STATS_RX_UNICAST_PACKETS",
		101: "NIC_LIF_STATS_RX_UNICAST_DROP_PACKETS",
		102: "NIC_LIF_STATS_RX_MULTICAST_DROP_PACKETS",
		103: "NIC_LIF_STATS_RX_BROADCAST_DROP_PACKETS",
		104: "NIC_LIF_STATS_RX_DMA_ERRORS",
		105: "NIC_LIF_STATS_TX_UNICAST_PACKETS",
		106: "NIC_LIF_STATS_TX_UNICAST_DROP_PACKETS",
		107: "NIC_LIF_STATS_TX_MULTICAST_DROP_PACKETS",
		108: "NIC_LIF_STATS_TX_BROADCAST_DROP_PACKETS",
		109: "NIC_LIF_STATS_TX_DMA_ERRORS",
		200: "RDMA_TX_UCAST_PKTS",
		201: "RDMA_TX_CNP_PKTS",
		202: "RDMA_RX_UCAST_PKTS",
		203: "RDMA_RX_CNP_PKTS",
		204: "RDMA_RX_ECN_PKTS",
		205: "RDMA_REQ_RX_PKT_SEQ_ERR",
		206: "RDMA_REQ_RX_RNR_RETRY_ERR",
		207: "RDMA_REQ_RX_RMT_ACC_ERR",
		208: "RDMA_REQ_RX_RMT_REQ_ERR",
		209: "RDMA_REQ_RX_OPER_ERR",
		210: "RDMA_REQ_RX_IMPL_NAK_SEQ_ERR",
		211: "RDMA_REQ_RX_CQE_ERR",
		212: "RDMA_REQ_RX_CQE_FLUSH",
		213: "RDMA_REQ_RX_DUP_RESP",
		214: "RDMA_REQ_RX_INVALID_PKTS",
		215: "RDMA_REQ_TX_LOC_ERR",
		216: "RDMA_REQ_TX_LOC_OPER_ERR",
		217: "RDMA_REQ_TX_MEM_MGMT_ERR",
		218: "RDMA_REQ_TX_RETRY_EXCD_ERR",
		219: "RDMA_REQ_TX_LOC_SGL_INV_ERR",
		220: "RDMA_RESP_RX_DUP_REQUEST",
		221: "RDMA_RESP_RX_OUTOF_BUF",
		222: "RDMA_RESP_RX_OUTOUF_SEQ",
		223: "RDMA_RESP_RX_CQE_ERR",
		224: "RDMA_RESP_RX_CQE_FLUSH",
		225: "RDMA_RESP_RX_LOC_LEN_ERR",
		226: "RDMA_RESP_RX_INVALID_REQUEST",
		227: "RDMA_RESP_RX_LOC_OPER_ERR",
		228: "RDMA_RESP_RX_OUTOF_ATOMIC",
		229: "RDMA_RESP_TX_PKT_SEQ_ERR",
		230: "RDMA_RESP_TX_RMT_INVAL_REQ_ERR",
		231: "RDMA_RESP_TX_RMT_ACC_ERR",
		232: "RDMA_RESP_TX_RMT_OPER_ERR",
		233: "RDMA_RESP_TX_RNR_RETRY_ERR",
		234: "RDMA_RESP_TX_LOC_SGL_INV_ERR",
		235: "RDMA_RESP_RX_S0_TABLE_ERR",
		300: "QP_SQ_REQ_TX_NUM_PACKET",
		301: "QP_SQ_REQ_TX_NUM_SEND_MSGS_WITH_RKE",
		302: "QP_SQ_REQ_TX_NUM_LOCAL_ACK_TIMEOUTS",
		303: "QP_SQ_REQ_TX_RNR_TIMEOUT",
		304: "QP_SQ_REQ_TX_TIMES_SQ_DRAINED",
		305: "QP_SQ_REQ_TX_NUM_CNP_SENT",
		306: "QP_SQ_REQ_RX_NUM_PACKET",
		307: "QP_SQ_REQ_RX_NUM_PKTS_WITH_ECN_MARKING",
		308: "QP_SQ_QCN_CURR_BYTE_COUNTER",
		309: "QP_SQ_QCN_NUM_BYTE_COUNTER_EXPIRED",
		310: "QP_SQ_QCN_NUM_TIMER_EXPIRED",
		311: "QP_SQ_QCN_NUM_ALPHA_TIMER_EXPIRED",
		312: "QP_SQ_QCN_NUM_CNP_RCVD",
		313: "QP_SQ_QCN_NUM_CNP_PROCESSED",
		314: "QP_RQ_RSP_TX_NUM_PACKET",
		315: "QP_RQ_RSP_TX_RNR_ERROR",
		316: "QP_RQ_RSP_TX_NUM_SEQUENCE_ERROR",
		317: "QP_RQ_RSP_TX_NUM_RP_BYTE_THRES_HIT",
		318: "QP_RQ_RSP_TX_NUM_RP_MAX_RATE_HIT",
		319: "QP_RQ_RSP_RX_NUM_PACKET",
		320: "QP_RQ_RSP_RX_NUM_SEND_MSGS_WITH_RKE",
		321: "QP_RQ_RSP_RX_NUM_PKTS_WITH_ECN_MARKING",
		322: "QP_RQ_RSP_RX_NUM_CNPS_RECEIVED",
		323: "QP_RQ_RSP_RX_MAX_RECIRC_EXCEEDED_DROP",
		324: "QP_RQ_RSP_RX_NUM_MEM_WINDOW_INVALID",
		325: "QP_RQ_RSP_RX_NUM_DUPL_WITH_WR_SEND_OPC",
		326: "QP_RQ_RSP_RX_NUM_DUPL_READ_BACKTRACK",
		327: "QP_RQ_RSP_RX_NUM_DUPL_READ_ATOMIC_DROP",
		328: "QP_RQ_QCN_CURR_BYTE_COUNTER",
		329: "QP_RQ_QCN_NUM_BYTE_COUNTER_EXPIRED",
		330: "QP_RQ_QCN_NUM_TIMER_EXPIRED",
		331: "QP_RQ_QCN_NUM_ALPHA_TIMER_EXPIRED",
		332: "QP_RQ_QCN_NUM_CNP_RCVD",
		333: "QP_RQ_QCN_NUM_CNP_PROCESSED",
		500: "ETH_TX_PACKETS",
		501: "ETH_TX_BYTES",
		502: "ETH_RX_PACKETS",
		503: "ETH_RX_BYTES",
		504: "ETH_FRAMES_RX_BROADCAST",
		505: "ETH_FRAMES_RX_MULTICAST",
		506: "ETH_FRAMES_TX_BROADCAST",
		507: "ETH_FRAMES_TX_MULTICAST",
		508: "ETH_FRAMES_RX_PAUSE",
		509: "ETH_FRAMES_TX_PAUSE",
		510: "ETH_FRAMES_RX_64B",
		511: "ETH_FRAMES_RX_65B_127B",
		512: "ETH_FRAMES_RX_128B_255B",
		513: "ETH_FRAMES_RX_256B_511B",
		514: "ETH_FRAMES_RX_512B_1023B",
		515: "ETH_FRAMES_RX_1024B_1518B",
		516: "ETH_FRAMES_RX_1519B_2047B",
		517: "ETH_FRAMES_RX_2048B_4095B",
		518: "ETH_FRAMES_RX_4096B_8191B",
		519: "ETH_FRAMES_RX_BAD_FCS",
		520: "ETH_FRAMES_RX_PRI0",
		521: "ETH_FRAMES_RX_PRI1",
		522: "ETH_FRAMES_RX_PRI2",
		523: "ETH_FRAMES_RX_PRI3",
		524: "ETH_FRAMES_RX_PRI4",
		525: "ETH_FRAMES_RX_PRI5",
		526: "ETH_FRAMES_RX_PRI6",
		527: "ETH_FRAMES_RX_PRI7",
		528: "ETH_FRAMES_TX_PRI0",
		529: "ETH_FRAMES_TX_PRI1",
		530: "ETH_FRAMES_TX_PRI2",
		531: "ETH_FRAMES_TX_PRI3",
		532: "ETH_FRAMES_TX_PRI4",
		533: "ETH_FRAMES_TX_PRI5",
		534: "ETH_FRAMES_TX_PRI6",
		535: "ETH_FRAMES_TX_PRI7",
		536: "ETH_FRAMES_RX_DROPPED",
		537: "ETH_FRAMES_RX_ALL",
		538: "ETH_FRAMES_RX_BAD_ALL",
		539: "ETH_FRAMES_TX_ALL",
		540: "ETH_FRAMES_TX_BAD",
		541: "ETH_HW_TX_DROPPED",
		542: "ETH_HW_RX_DROPPED",
		543: "ETH_RX_0_DROPPED",
		544: "ETH_RX_1_DROPPED",
		545: "ETH_RX_2_DROPPED",
		546: "ETH_RX_3_DROPPED",
		547: "ETH_RX_4_DROPPED",
		548: "ETH_RX_5_DROPPED",
		549: "ETH_RX_6_DROPPED",
		550: "ETH_RX_7_DROPPED",
		551: "ETH_RX_8_DROPPED",
		552: "ETH_RX_9_DROPPED",
		553: "ETH_RX_10_DROPPED",
		554: "ETH_RX_11_DROPPED",
		555: "ETH_RX_12_DROPPED",
		556: "ETH_RX_13_DROPPED",
		557: "ETH_RX_14_DROPPED",
		558: "ETH_RX_15_DROPPED",
		559: "ETH_FRAMES_RX_OK",
		560: "ETH_FRAMES_TX_OK",
		561: "ETH_OCTETS_RX_OK",
		562: "ETH_OCTETS_TX_OK",
		563: "ETH_OCTETS_TX_TOTAL",
		564: "ETH_FRAMES_RX_UNICAST",
		565: "ETH_FRAMES_TX_UNICAST",
		566: "ETH_FRAMES_RX_8192B_9215B",
		567: "ETH_FRAMES_TX_8192B_9215B",
		568: "ETH_FRAMES_TX_64B",
		569: "ETH_FRAMES_TX_65B_127B",
		570: "ETH_FRAMES_TX_128B_255B",
		571: "ETH_FRAMES_TX_256B_511B",
		572: "ETH_FRAMES_TX_512B_1023B",
		573: "ETH_FRAMES_TX_1024B_1518B",
		574: "ETH_FRAMES_TX_1519B_2047B",
		575: "ETH_FRAMES_TX_2048B_4095B",
		576: "ETH_FRAMES_TX_4096B_8191B",
	}
	NICMetricField_value = map[string]int32{
		"NIC_TOTAL":                               0,
		"NIC_MAX_SPEED":                           1,
		"NIC_PORT_STATS_FRAMES_RX_OK":             2,
		"NIC_PORT_STATS_FRAMES_RX_ALL":            3,
		"NIC_PORT_STATS_FRAMES_RX_BAD_FCS":        4,
		"NIC_PORT_STATS_FRAMES_RX_BAD_ALL":        5,
		"NIC_PORT_STATS_FRAMES_RX_PAUSE":          6,
		"NIC_PORT_STATS_FRAMES_RX_BAD_LENGTH":     7,
		"NIC_PORT_STATS_FRAMES_RX_UNDERSIZED":     8,
		"NIC_PORT_STATS_FRAMES_RX_OVERSIZED":      9,
		"NIC_PORT_STATS_FRAMES_RX_FRAGMENTS":      10,
		"NIC_PORT_STATS_FRAMES_RX_JABBER":         11,
		"NIC_PORT_STATS_FRAMES_RX_PRIPAUSE":       12,
		"NIC_PORT_STATS_FRAMES_RX_STOMPED_CRC":    13,
		"NIC_PORT_STATS_FRAMES_RX_TOO_LONG":       14,
		"NIC_PORT_STATS_FRAMES_RX_DROPPED":        15,
		"NIC_PORT_STATS_FRAMES_TX_OK":             16,
		"NIC_PORT_STATS_FRAMES_TX_ALL":            17,
		"NIC_PORT_STATS_FRAMES_TX_BAD":            18,
		"NIC_PORT_STATS_FRAMES_TX_PAUSE":          19,
		"NIC_PORT_STATS_FRAMES_TX_PRIPAUSE":       20,
		"NIC_PORT_STATS_FRAMES_TX_LESS_THAN_64B":  21,
		"NIC_PORT_STATS_FRAMES_TX_TRUNCATED":      22,
		"NIC_PORT_STATS_RSFEC_CORRECTABLE_WORD":   23,
		"NIC_PORT_STATS_RSFEC_CH_SYMBOL_ERR_CNT":  24,
		"NIC_PORT_STATS_FRAMES_RX_UNICAST":        25,
		"NIC_PORT_STATS_FRAMES_RX_MULTICAST":      26,
		"NIC_PORT_STATS_FRAMES_RX_BROADCAST":      27,
		"NIC_PORT_STATS_FRAMES_RX_PRI_0":          28,
		"NIC_PORT_STATS_FRAMES_RX_PRI_1":          29,
		"NIC_PORT_STATS_FRAMES_RX_PRI_2":          30,
		"NIC_PORT_STATS_FRAMES_RX_PRI_3":          31,
		"NIC_PORT_STATS_FRAMES_RX_PRI_4":          32,
		"NIC_PORT_STATS_FRAMES_RX_PRI_5":          33,
		"NIC_PORT_STATS_FRAMES_RX_PRI_6":          34,
		"NIC_PORT_STATS_FRAMES_RX_PRI_7":          35,
		"NIC_PORT_STATS_FRAMES_TX_UNICAST":        36,
		"NIC_PORT_STATS_FRAMES_TX_MULTICAST":      37,
		"NIC_PORT_STATS_FRAMES_TX_BROADCAST":      38,
		"NIC_PORT_STATS_FRAMES_TX_PRI_0":          39,
		"NIC_PORT_STATS_FRAMES_TX_PRI_1":          40,
		"NIC_PORT_STATS_FRAMES_TX_PRI_2":          41,
		"NIC_PORT_STATS_FRAMES_TX_PRI_3":          42,
		"NIC_PORT_STATS_FRAMES_TX_PRI_4":          43,
		"NIC_PORT_STATS_FRAMES_TX_PRI_5":          44,
		"NIC_PORT_STATS_FRAMES_TX_PRI_6":          45,
		"NIC_PORT_STATS_FRAMES_TX_PRI_7":          46,
		"NIC_PORT_STATS_OCTETS_RX_OK":             47,
		"NIC_PORT_STATS_OCTETS_RX_ALL":            48,
		"NIC_PORT_STATS_OCTETS_TX_OK":             49,
		"NIC_PORT_STATS_OCTETS_TX_ALL":            50,
		"NIC_LIF_STATS_RX_UNICAST_PACKETS":        100,
		"NIC_LIF_STATS_RX_UNICAST_DROP_PACKETS":   101,
		"NIC_LIF_STATS_RX_MULTICAST_DROP_PACKETS": 102,
		"NIC_LIF_STATS_RX_BROADCAST_DROP_PACKETS": 103,
		"NIC_LIF_STATS_RX_DMA_ERRORS":             104,
		"NIC_LIF_STATS_TX_UNICAST_PACKETS":        105,
		"NIC_LIF_STATS_TX_UNICAST_DROP_PACKETS":   106,
		"NIC_LIF_STATS_TX_MULTICAST_DROP_PACKETS": 107,
		"NIC_LIF_STATS_TX_BROADCAST_DROP_PACKETS": 108,
		"NIC_LIF_STATS_TX_DMA_ERRORS":             109,
		"RDMA_TX_UCAST_PKTS":                      200,
		"RDMA_TX_CNP_PKTS":                        201,
		"RDMA_RX_UCAST_PKTS":                      202,
		"RDMA_RX_CNP_PKTS":                        203,
		"RDMA_RX_ECN_PKTS":                        204,
		"RDMA_REQ_RX_PKT_SEQ_ERR":                 205,
		"RDMA_REQ_RX_RNR_RETRY_ERR":               206,
		"RDMA_REQ_RX_RMT_ACC_ERR":                 207,
		"RDMA_REQ_RX_RMT_REQ_ERR":                 208,
		"RDMA_REQ_RX_OPER_ERR":                    209,
		"RDMA_REQ_RX_IMPL_NAK_SEQ_ERR":            210,
		"RDMA_REQ_RX_CQE_ERR":                     211,
		"RDMA_REQ_RX_CQE_FLUSH":                   212,
		"RDMA_REQ_RX_DUP_RESP":                    213,
		"RDMA_REQ_RX_INVALID_PKTS":                214,
		"RDMA_REQ_TX_LOC_ERR":                     215,
		"RDMA_REQ_TX_LOC_OPER_ERR":                216,
		"RDMA_REQ_TX_MEM_MGMT_ERR":                217,
		"RDMA_REQ_TX_RETRY_EXCD_ERR":              218,
		"RDMA_REQ_TX_LOC_SGL_INV_ERR":             219,
		"RDMA_RESP_RX_DUP_REQUEST":                220,
		"RDMA_RESP_RX_OUTOF_BUF":                  221,
		"RDMA_RESP_RX_OUTOUF_SEQ":                 222,
		"RDMA_RESP_RX_CQE_ERR":                    223,
		"RDMA_RESP_RX_CQE_FLUSH":                  224,
		"RDMA_RESP_RX_LOC_LEN_ERR":                225,
		"RDMA_RESP_RX_INVALID_REQUEST":            226,
		"RDMA_RESP_RX_LOC_OPER_ERR":               227,
		"RDMA_RESP_RX_OUTOF_ATOMIC":               228,
		"RDMA_RESP_TX_PKT_SEQ_ERR":                229,
		"RDMA_RESP_TX_RMT_INVAL_REQ_ERR":          230,
		"RDMA_RESP_TX_RMT_ACC_ERR":                231,
		"RDMA_RESP_TX_RMT_OPER_ERR":               232,
		"RDMA_RESP_TX_RNR_RETRY_ERR":              233,
		"RDMA_RESP_TX_LOC_SGL_INV_ERR":            234,
		"RDMA_RESP_RX_S0_TABLE_ERR":               235,
		"QP_SQ_REQ_TX_NUM_PACKET":                 300,
		"QP_SQ_REQ_TX_NUM_SEND_MSGS_WITH_RKE":     301,
		"QP_SQ_REQ_TX_NUM_LOCAL_ACK_TIMEOUTS":     302,
		"QP_SQ_REQ_TX_RNR_TIMEOUT":                303,
		"QP_SQ_REQ_TX_TIMES_SQ_DRAINED":           304,
		"QP_SQ_REQ_TX_NUM_CNP_SENT":               305,
		"QP_SQ_REQ_RX_NUM_PACKET":                 306,
		"QP_SQ_REQ_RX_NUM_PKTS_WITH_ECN_MARKING":  307,
		"QP_SQ_QCN_CURR_BYTE_COUNTER":             308,
		"QP_SQ_QCN_NUM_BYTE_COUNTER_EXPIRED":      309,
		"QP_SQ_QCN_NUM_TIMER_EXPIRED":             310,
		"QP_SQ_QCN_NUM_ALPHA_TIMER_EXPIRED":       311,
		"QP_SQ_QCN_NUM_CNP_RCVD":                  312,
		"QP_SQ_QCN_NUM_CNP_PROCESSED":             313,
		"QP_RQ_RSP_TX_NUM_PACKET":                 314,
		"QP_RQ_RSP_TX_RNR_ERROR":                  315,
		"QP_RQ_RSP_TX_NUM_SEQUENCE_ERROR":         316,
		"QP_RQ_RSP_TX_NUM_RP_BYTE_THRES_HIT":      317,
		"QP_RQ_RSP_TX_NUM_RP_MAX_RATE_HIT":        318,
		"QP_RQ_RSP_RX_NUM_PACKET":                 319,
		"QP_RQ_RSP_RX_NUM_SEND_MSGS_WITH_RKE":     320,
		"QP_RQ_RSP_RX_NUM_PKTS_WITH_ECN_MARKING":  321,
		"QP_RQ_RSP_RX_NUM_CNPS_RECEIVED":          322,
		"QP_RQ_RSP_RX_MAX_RECIRC_EXCEEDED_DROP":   323,
		"QP_RQ_RSP_RX_NUM_MEM_WINDOW_INVALID":     324,
		"QP_RQ_RSP_RX_NUM_DUPL_WITH_WR_SEND_OPC":  325,
		"QP_RQ_RSP_RX_NUM_DUPL_READ_BACKTRACK":    326,
		"QP_RQ_RSP_RX_NUM_DUPL_READ_ATOMIC_DROP":  327,
		"QP_RQ_QCN_CURR_BYTE_COUNTER":             328,
		"QP_RQ_QCN_NUM_BYTE_COUNTER_EXPIRED":      329,
		"QP_RQ_QCN_NUM_TIMER_EXPIRED":             330,
		"QP_RQ_QCN_NUM_ALPHA_TIMER_EXPIRED":       331,
		"QP_RQ_QCN_NUM_CNP_RCVD":                  332,
		"QP_RQ_QCN_NUM_CNP_PROCESSED":             333,
		"ETH_TX_PACKETS":                          500,
		"ETH_TX_BYTES":                            501,
		"ETH_RX_PACKETS":                          502,
		"ETH_RX_BYTES":                            503,
		"ETH_FRAMES_RX_BROADCAST":                 504,
		"ETH_FRAMES_RX_MULTICAST":                 505,
		"ETH_FRAMES_TX_BROADCAST":                 506,
		"ETH_FRAMES_TX_MULTICAST":                 507,
		"ETH_FRAMES_RX_PAUSE":                     508,
		"ETH_FRAMES_TX_PAUSE":                     509,
		"ETH_FRAMES_RX_64B":                       510,
		"ETH_FRAMES_RX_65B_127B":                  511,
		"ETH_FRAMES_RX_128B_255B":                 512,
		"ETH_FRAMES_RX_256B_511B":                 513,
		"ETH_FRAMES_RX_512B_1023B":                514,
		"ETH_FRAMES_RX_1024B_1518B":               515,
		"ETH_FRAMES_RX_1519B_2047B":               516,
		"ETH_FRAMES_RX_2048B_4095B":               517,
		"ETH_FRAMES_RX_4096B_8191B":               518,
		"ETH_FRAMES_RX_BAD_FCS":                   519,
		"ETH_FRAMES_RX_PRI0":                      520,
		"ETH_FRAMES_RX_PRI1":                      521,
		"ETH_FRAMES_RX_PRI2":                      522,
		"ETH_FRAMES_RX_PRI3":                      523,
		"ETH_FRAMES_RX_PRI4":                      524,
		"ETH_FRAMES_RX_PRI5":                      525,
		"ETH_FRAMES_RX_PRI6":                      526,
		"ETH_FRAMES_RX_PRI7":                      527,
		"ETH_FRAMES_TX_PRI0":                      528,
		"ETH_FRAMES_TX_PRI1":                      529,
		"ETH_FRAMES_TX_PRI2":                      530,
		"ETH_FRAMES_TX_PRI3":                      531,
		"ETH_FRAMES_TX_PRI4":                      532,
		"ETH_FRAMES_TX_PRI5":                      533,
		"ETH_FRAMES_TX_PRI6":                      534,
		"ETH_FRAMES_TX_PRI7":                      535,
		"ETH_FRAMES_RX_DROPPED":                   536,
		"ETH_FRAMES_RX_ALL":                       537,
		"ETH_FRAMES_RX_BAD_ALL":                   538,
		"ETH_FRAMES_TX_ALL":                       539,
		"ETH_FRAMES_TX_BAD":                       540,
		"ETH_HW_TX_DROPPED":                       541,
		"ETH_HW_RX_DROPPED":                       542,
		"ETH_RX_0_DROPPED":                        543,
		"ETH_RX_1_DROPPED":                        544,
		"ETH_RX_2_DROPPED":                        545,
		"ETH_RX_3_DROPPED":                        546,
		"ETH_RX_4_DROPPED":                        547,
		"ETH_RX_5_DROPPED":                        548,
		"ETH_RX_6_DROPPED":                        549,
		"ETH_RX_7_DROPPED":                        550,
		"ETH_RX_8_DROPPED":                        551,
		"ETH_RX_9_DROPPED":                        552,
		"ETH_RX_10_DROPPED":                       553,
		"ETH_RX_11_DROPPED":                       554,
		"ETH_RX_12_DROPPED":                       555,
		"ETH_RX_13_DROPPED":                       556,
		"ETH_RX_14_DROPPED":                       557,
		"ETH_RX_15_DROPPED":                       558,
		"ETH_FRAMES_RX_OK":                        559,
		"ETH_FRAMES_TX_OK":                        560,
		"ETH_OCTETS_RX_OK":                        561,
		"ETH_OCTETS_TX_OK":                        562,
		"ETH_OCTETS_TX_TOTAL":                     563,
		"ETH_FRAMES_RX_UNICAST":                   564,
		"ETH_FRAMES_TX_UNICAST":                   565,
		"ETH_FRAMES_RX_8192B_9215B":               566,
		"ETH_FRAMES_TX_8192B_9215B":               567,
		"ETH_FRAMES_TX_64B":                       568,
		"ETH_FRAMES_TX_65B_127B":                  569,
		"ETH_FRAMES_TX_128B_255B":                 570,
		"ETH_FRAMES_TX_256B_511B":                 571,
		"ETH_FRAMES_TX_512B_1023B":                572,
		"ETH_FRAMES_TX_1024B_1518B":               573,
		"ETH_FRAMES_TX_1519B_2047B":               574,
		"ETH_FRAMES_TX_2048B_4095B":               575,
		"ETH_FRAMES_TX_4096B_8191B":               576,
	}
)

func (x NICMetricField) Enum() *NICMetricField {
	p := new(NICMetricField)
	*p = x
	return p
}

func (x NICMetricField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NICMetricField) Descriptor() protoreflect.EnumDescriptor {
	return file_exporterconfig_proto_enumTypes[3].Descriptor()
}

func (NICMetricField) Type() protoreflect.EnumType {
	return &file_exporterconfig_proto_enumTypes[3]
}

func (x NICMetricField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NICMetricField.Descriptor instead.
func (NICMetricField) EnumDescriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{3}
}

type NICMetricLabel int32

const (
	NICMetricLabel_NIC_UUID NICMetricLabel = 0
	// mandatory field NIC_ID cannot be disabled
	NICMetricLabel_NIC_ID NICMetricLabel = 1
)

// Enum value maps for NICMetricLabel.
var (
	NICMetricLabel_name = map[int32]string{
		0: "NIC_UUID",
		1: "NIC_ID",
	}
	NICMetricLabel_value = map[string]int32{
		"NIC_UUID": 0,
		"NIC_ID":   1,
	}
)

func (x NICMetricLabel) Enum() *NICMetricLabel {
	p := new(NICMetricLabel)
	*p = x
	return p
}

func (x NICMetricLabel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NICMetricLabel) Descriptor() protoreflect.EnumDescriptor {
	return file_exporterconfig_proto_enumTypes[4].Descriptor()
}

func (NICMetricLabel) Type() protoreflect.EnumType {
	return &file_exporterconfig_proto_enumTypes[4]
}

func (x NICMetricLabel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NICMetricLabel.Descriptor instead.
func (NICMetricLabel) EnumDescriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{4}
}

type GPUHealthThresholds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GPU_ECC_UNCORRECT_SDMA      uint32 `protobuf:"varint,1,opt,name=GPU_ECC_UNCORRECT_SDMA,json=GPUECCUNCORRECTSDMA,proto3" json:"GPU_ECC_UNCORRECT_SDMA,omitempty"`
	GPU_ECC_UNCORRECT_GFX       uint32 `protobuf:"varint,2,opt,name=GPU_ECC_UNCORRECT_GFX,json=GPUECCUNCORRECTGFX,proto3" json:"GPU_ECC_UNCORRECT_GFX,omitempty"`
	GPU_ECC_UNCORRECT_MMHUB     uint32 `protobuf:"varint,3,opt,name=GPU_ECC_UNCORRECT_MMHUB,json=GPUECCUNCORRECTMMHUB,proto3" json:"GPU_ECC_UNCORRECT_MMHUB,omitempty"`
	GPU_ECC_UNCORRECT_ATHUB     uint32 `protobuf:"varint,4,opt,name=GPU_ECC_UNCORRECT_ATHUB,json=GPUECCUNCORRECTATHUB,proto3" json:"GPU_ECC_UNCORRECT_ATHUB,omitempty"`
	GPU_ECC_UNCORRECT_BIF       uint32 `protobuf:"varint,5,opt,name=GPU_ECC_UNCORRECT_BIF,json=GPUECCUNCORRECTBIF,proto3" json:"GPU_ECC_UNCORRECT_BIF,omitempty"`
	GPU_ECC_UNCORRECT_HDP       uint32 `protobuf:"varint,6,opt,name=GPU_ECC_UNCORRECT_HDP,json=GPUECCUNCORRECTHDP,proto3" json:"GPU_ECC_UNCORRECT_HDP,omitempty"`
	GPU_ECC_UNCORRECT_XGMI_WAFL uint32 `protobuf:"varint,7,opt,name=GPU_ECC_UNCORRECT_XGMI_WAFL,json=GPUECCUNCORRECTXGMIWAFL,proto3" json:"GPU_ECC_UNCORRECT_XGMI_WAFL,omitempty"`
	GPU_ECC_UNCORRECT_DF        uint32 `protobuf:"varint,8,opt,name=GPU_ECC_UNCORRECT_DF,json=GPUECCUNCORRECTDF,proto3" json:"GPU_ECC_UNCORRECT_DF,omitempty"`
	GPU_ECC_UNCORRECT_SMN       uint32 `protobuf:"varint,9,opt,name=GPU_ECC_UNCORRECT_SMN,json=GPUECCUNCORRECTSMN,proto3" json:"GPU_ECC_UNCORRECT_SMN,omitempty"`
	GPU_ECC_UNCORRECT_SEM       uint32 `protobuf:"varint,10,opt,name=GPU_ECC_UNCORRECT_SEM,json=GPUECCUNCORRECTSEM,proto3" json:"GPU_ECC_UNCORRECT_SEM,omitempty"`
	GPU_ECC_UNCORRECT_MP0       uint32 `protobuf:"varint,11,opt,name=GPU_ECC_UNCORRECT_MP0,json=GPUECCUNCORRECTMP0,proto3" json:"GPU_ECC_UNCORRECT_MP0,omitempty"`
	GPU_ECC_UNCORRECT_MP1       uint32 `protobuf:"varint,12,opt,name=GPU_ECC_UNCORRECT_MP1,json=GPUECCUNCORRECTMP1,proto3" json:"GPU_ECC_UNCORRECT_MP1,omitempty"`
	GPU_ECC_UNCORRECT_FUSE      uint32 `protobuf:"varint,13,opt,name=GPU_ECC_UNCORRECT_FUSE,json=GPUECCUNCORRECTFUSE,proto3" json:"GPU_ECC_UNCORRECT_FUSE,omitempty"`
	GPU_ECC_UNCORRECT_UMC       uint32 `protobuf:"varint,14,opt,name=GPU_ECC_UNCORRECT_UMC,json=GPUECCUNCORRECTUMC,proto3" json:"GPU_ECC_UNCORRECT_UMC,omitempty"`
	GPU_ECC_UNCORRECT_MCA       uint32 `protobuf:"varint,15,opt,name=GPU_ECC_UNCORRECT_MCA,json=GPUECCUNCORRECTMCA,proto3" json:"GPU_ECC_UNCORRECT_MCA,omitempty"`
	GPU_ECC_UNCORRECT_VCN       uint32 `protobuf:"varint,16,opt,name=GPU_ECC_UNCORRECT_VCN,json=GPUECCUNCORRECTVCN,proto3" json:"GPU_ECC_UNCORRECT_VCN,omitempty"`
	GPU_ECC_UNCORRECT_JPEG      uint32 `protobuf:"varint,17,opt,name=GPU_ECC_UNCORRECT_JPEG,json=GPUECCUNCORRECTJPEG,proto3" json:"GPU_ECC_UNCORRECT_JPEG,omitempty"`
	GPU_ECC_UNCORRECT_IH        uint32 `protobuf:"varint,18,opt,name=GPU_ECC_UNCORRECT_IH,json=GPUECCUNCORRECTIH,proto3" json:"GPU_ECC_UNCORRECT_IH,omitempty"`
	GPU_ECC_UNCORRECT_MPIO      uint32 `protobuf:"varint,19,opt,name=GPU_ECC_UNCORRECT_MPIO,json=GPUECCUNCORRECTMPIO,proto3" json:"GPU_ECC_UNCORRECT_MPIO,omitempty"`
}

func (x *GPUHealthThresholds) Reset() {
	*x = GPUHealthThresholds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUHealthThresholds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUHealthThresholds) ProtoMessage() {}

func (x *GPUHealthThresholds) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUHealthThresholds.ProtoReflect.Descriptor instead.
func (*GPUHealthThresholds) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{0}
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_SDMA() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_SDMA
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_GFX() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_GFX
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_MMHUB() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_MMHUB
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_ATHUB() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_ATHUB
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_BIF() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_BIF
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_HDP() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_HDP
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_XGMI_WAFL() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_XGMI_WAFL
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_DF() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_DF
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_SMN() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_SMN
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_SEM() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_SEM
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_MP0() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_MP0
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_MP1() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_MP1
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_FUSE() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_FUSE
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_UMC() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_UMC
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_MCA() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_MCA
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_VCN() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_VCN
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_JPEG() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_JPEG
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_IH() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_IH
	}
	return 0
}

func (x *GPUHealthThresholds) GetGPU_ECC_UNCORRECT_MPIO() uint32 {
	if x != nil {
		return x.GPU_ECC_UNCORRECT_MPIO
	}
	return 0
}

type GPUMetricConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// instance selector can include comma or range indices of format 0,2-3,7
	Selector string `protobuf:"bytes,1,opt,name=Selector,proto3" json:"Selector,omitempty"`
	// list of all GPUMetricField to be exported
	Fields []string `protobuf:"bytes,2,rep,name=Fields,proto3" json:"Fields,omitempty"`
	// list of labels to be exported
	Labels []string `protobuf:"bytes,3,rep,name=Labels,proto3" json:"Labels,omitempty"`
	// GPU Health Thresholds
	HealthThresholds *GPUHealthThresholds `protobuf:"bytes,4,opt,name=HealthThresholds,proto3" json:"HealthThresholds,omitempty"`
	// User Defined Custom Labels and values
	CustomLabels map[string]string `protobuf:"bytes,5,rep,name=CustomLabels,proto3" json:"CustomLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of extra pod labels to be exported (prometheus metric name as Key, pod label as value)
	ExtraPodLabels map[string]string `protobuf:"bytes,6,rep,name=ExtraPodLabels,proto3" json:"ExtraPodLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of Profiler Metrics enabled or disabled per node
	// either specify node name to toggle per node, or specify all to toggle
	// default/empty - is enabled
	// true - enabled
	// false - disabled
	// if disabled all profiler related fields will not be exported to avoid reporting
	// wrong values as 0
	ProfilerMetrics map[string]bool `protobuf:"bytes,7,rep,name=ProfilerMetrics,proto3" json:"ProfilerMetrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GPUMetricConfig) Reset() {
	*x = GPUMetricConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUMetricConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUMetricConfig) ProtoMessage() {}

func (x *GPUMetricConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUMetricConfig.ProtoReflect.Descriptor instead.
func (*GPUMetricConfig) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{1}
}

func (x *GPUMetricConfig) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (x *GPUMetricConfig) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GPUMetricConfig) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GPUMetricConfig) GetHealthThresholds() *GPUHealthThresholds {
	if x != nil {
		return x.HealthThresholds
	}
	return nil
}

func (x *GPUMetricConfig) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *GPUMetricConfig) GetExtraPodLabels() map[string]string {
	if x != nil {
		return x.ExtraPodLabels
	}
	return nil
}

func (x *GPUMetricConfig) GetProfilerMetrics() map[string]bool {
	if x != nil {
		return x.ProfilerMetrics
	}
	return nil
}

type HealthServiceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=Enable,proto3" json:"Enable,omitempty"`
}

func (x *HealthServiceConfig) Reset() {
	*x = HealthServiceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthServiceConfig) ProtoMessage() {}

func (x *HealthServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthServiceConfig.ProtoReflect.Descriptor instead.
func (*HealthServiceConfig) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{2}
}

func (x *HealthServiceConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type CommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string to add as perfix to all exported fields
	MetricsFieldPrefix string `protobuf:"bytes,1,opt,name=MetricsFieldPrefix,proto3" json:"MetricsFieldPrefix,omitempty"`
	// Health Service config
	HealthService *HealthServiceConfig `protobuf:"bytes,2,opt,name=HealthService,proto3" json:"HealthService,omitempty"`
}

func (x *CommonConfig) Reset() {
	*x = CommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonConfig) ProtoMessage() {}

func (x *CommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonConfig.ProtoReflect.Descriptor instead.
func (*CommonConfig) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{3}
}

func (x *CommonConfig) GetMetricsFieldPrefix() string {
	if x != nil {
		return x.MetricsFieldPrefix
	}
	return ""
}

func (x *CommonConfig) GetHealthService() *HealthServiceConfig {
	if x != nil {
		return x.HealthService
	}
	return nil
}

type NICMetricConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of all NICMetricField to be exported
	Fields []string `protobuf:"bytes,1,rep,name=Fields,proto3" json:"Fields,omitempty"`
	// list of labels to be exported
	Labels []string `protobuf:"bytes,2,rep,name=Labels,proto3" json:"Labels,omitempty"`
	// User Defined Custom Labels and values
	CustomLabels map[string]string `protobuf:"bytes,3,rep,name=CustomLabels,proto3" json:"CustomLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// NIC health check config
	HealthCheckConfig *NICHealthCheckConfig `protobuf:"bytes,4,opt,name=HealthCheckConfig,proto3" json:"HealthCheckConfig,omitempty"`
	// Map of extra pod labels to be exported (prometheus metric name as Key, pod label as value)
	ExtraPodLabels map[string]string `protobuf:"bytes,5,rep,name=ExtraPodLabels,proto3" json:"ExtraPodLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NICMetricConfig) Reset() {
	*x = NICMetricConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NICMetricConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NICMetricConfig) ProtoMessage() {}

func (x *NICMetricConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NICMetricConfig.ProtoReflect.Descriptor instead.
func (*NICMetricConfig) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{4}
}

func (x *NICMetricConfig) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *NICMetricConfig) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NICMetricConfig) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *NICMetricConfig) GetHealthCheckConfig() *NICHealthCheckConfig {
	if x != nil {
		return x.HealthCheckConfig
	}
	return nil
}

func (x *NICMetricConfig) GetExtraPodLabels() map[string]string {
	if x != nil {
		return x.ExtraPodLabels
	}
	return nil
}

type NICHealthCheckConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// report interface admin down state as unhealthy
	InterfaceAdminDownAsUnhealthy bool `protobuf:"varint,1,opt,name=InterfaceAdminDownAsUnhealthy,proto3" json:"InterfaceAdminDownAsUnhealthy,omitempty"`
}

func (x *NICHealthCheckConfig) Reset() {
	*x = NICHealthCheckConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NICHealthCheckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NICHealthCheckConfig) ProtoMessage() {}

func (x *NICHealthCheckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NICHealthCheckConfig.ProtoReflect.Descriptor instead.
func (*NICHealthCheckConfig) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{5}
}

func (x *NICHealthCheckConfig) GetInterfaceAdminDownAsUnhealthy() bool {
	if x != nil {
		return x.InterfaceAdminDownAsUnhealthy
	}
	return false
}

type MetricConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// server config port
	ServerPort uint32 `protobuf:"varint,1,opt,name=ServerPort,proto3" json:"ServerPort,omitempty"`
	// GPU Metric config for export
	GPUConfig *GPUMetricConfig `protobuf:"bytes,2,opt,name=GPUConfig,proto3" json:"GPUConfig,omitempty"`
	// Exporter Common Configuration
	CommonConfig *CommonConfig `protobuf:"bytes,3,opt,name=CommonConfig,proto3" json:"CommonConfig,omitempty"`
	// NIC Metric config for export
	NICConfig *NICMetricConfig `protobuf:"bytes,4,opt,name=NICConfig,proto3" json:"NICConfig,omitempty"`
}

func (x *MetricConfig) Reset() {
	*x = MetricConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exporterconfig_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricConfig) ProtoMessage() {}

func (x *MetricConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exporterconfig_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricConfig.ProtoReflect.Descriptor instead.
func (*MetricConfig) Descriptor() ([]byte, []int) {
	return file_exporterconfig_proto_rawDescGZIP(), []int{6}
}

func (x *MetricConfig) GetServerPort() uint32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *MetricConfig) GetGPUConfig() *GPUMetricConfig {
	if x != nil {
		return x.GPUConfig
	}
	return nil
}

func (x *MetricConfig) GetCommonConfig() *CommonConfig {
	if x != nil {
		return x.CommonConfig
	}
	return nil
}

func (x *MetricConfig) GetNICConfig() *NICMetricConfig {
	if x != nil {
		return x.NICConfig
	}
	return nil
}

var File_exporterconfig_proto protoreflect.FileDescriptor

var file_exporterconfig_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xf5, 0x07, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x12,
	0x33, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x44, 0x4d, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x53, 0x44, 0x4d, 0x41, 0x12, 0x31, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f,
	0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x47, 0x46, 0x58, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x47, 0x46, 0x58, 0x12, 0x35, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x45,
	0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x4d, 0x48,
	0x55, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43,
	0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x4d, 0x4d, 0x48, 0x55, 0x42, 0x12, 0x35,
	0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52,
	0x45, 0x43, 0x54, 0x5f, 0x41, 0x54, 0x48, 0x55, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x41, 0x54, 0x48, 0x55, 0x42, 0x12, 0x31, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43,
	0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x42, 0x49, 0x46, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x42, 0x49, 0x46, 0x12, 0x31, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f,
	0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x48, 0x44,
	0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x48, 0x44, 0x50, 0x12, 0x3c, 0x0a, 0x1b, 0x47,
	0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x57, 0x41, 0x46, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x17, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x58, 0x47, 0x4d, 0x49, 0x57, 0x41, 0x46, 0x4c, 0x12, 0x2f, 0x0a, 0x14, 0x47, 0x50, 0x55,
	0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x44,
	0x46, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x44, 0x46, 0x12, 0x31, 0x0a, 0x15, 0x47, 0x50,
	0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f,
	0x53, 0x4d, 0x4e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x47, 0x50, 0x55, 0x45, 0x43,
	0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x53, 0x4d, 0x4e, 0x12, 0x31, 0x0a,
	0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45,
	0x43, 0x54, 0x5f, 0x53, 0x45, 0x4d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x47, 0x50,
	0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x53, 0x45, 0x4d,
	0x12, 0x31, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x50, 0x30, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x4d, 0x50, 0x30, 0x12, 0x31, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x50, 0x31, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52,
	0x45, 0x43, 0x54, 0x4d, 0x50, 0x31, 0x12, 0x33, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43,
	0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x46, 0x55, 0x53, 0x45,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x46, 0x55, 0x53, 0x45, 0x12, 0x31, 0x0a, 0x15, 0x47,
	0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x5f, 0x55, 0x4d, 0x43, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x47, 0x50, 0x55, 0x45,
	0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x55, 0x4d, 0x43, 0x12, 0x31,
	0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52,
	0x45, 0x43, 0x54, 0x5f, 0x4d, 0x43, 0x41, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x47,
	0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x4d, 0x43,
	0x41, 0x12, 0x31, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43,
	0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x56, 0x43, 0x4e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x56, 0x43, 0x4e, 0x12, 0x33, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f,
	0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x4a, 0x50, 0x45, 0x47, 0x12, 0x2f, 0x0a, 0x14, 0x47, 0x50, 0x55,
	0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x49,
	0x48, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x47, 0x50, 0x55, 0x45, 0x43, 0x43, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x49, 0x48, 0x12, 0x33, 0x0a, 0x16, 0x47, 0x50,
	0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f,
	0x4d, 0x50, 0x49, 0x4f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x47, 0x50, 0x55, 0x45,
	0x43, 0x43, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x4d, 0x50, 0x49, 0x4f, 0x22,
	0x8e, 0x05, 0x0a, 0x0f, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x50, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x50, 0x55, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x52,
	0x10, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x73, 0x12, 0x56, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x5c, 0x0a, 0x0e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x6f,
	0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2d, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x8a, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x4a, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xd0, 0x03, 0x0a,
	0x0f, 0x4e, 0x49, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x56, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x49, 0x43, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x49, 0x43, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5c, 0x0a,
	0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x49, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x6f, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x5c, 0x0a, 0x14, 0x4e, 0x49, 0x43, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x41, 0x73, 0x55,
	0x6e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x6f,
	0x77, 0x6e, 0x41, 0x73, 0x55, 0x6e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x22, 0xf1, 0x01,
	0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x3e,
	0x0a, 0x09, 0x47, 0x50, 0x55, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x09, 0x47, 0x50, 0x55, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x3e, 0x0a, 0x09, 0x4e, 0x49, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x49, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x4e, 0x49, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2a, 0xed, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x4f, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x4e, 0x55, 0x4d, 0x42,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4f, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a,
	0x09, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4a,
	0x4f, 0x42, 0x5f, 0x49, 0x44, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x4f, 0x42, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x52, 0x44,
	0x5f, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x52,
	0x49, 0x56, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x11,
	0x0a, 0x0d, 0x56, 0x42, 0x49, 0x4f, 0x53, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x0d, 0x2a, 0xe9, 0x23, 0x0a, 0x0e, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x50, 0x55, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x53, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x50, 0x55,
	0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x47, 0x50, 0x55, 0x5f, 0x41, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x50, 0x55,
	0x5f, 0x4a, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x4d,
	0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x48, 0x42, 0x4d, 0x5f, 0x54,
	0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10,
	0x47, 0x50, 0x55, 0x5f, 0x47, 0x46, 0x58, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x50, 0x55, 0x5f, 0x55, 0x4d, 0x43, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x50, 0x55, 0x5f,
	0x4d, 0x4d, 0x41, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x09, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x50, 0x55, 0x5f, 0x56, 0x43, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x50, 0x55, 0x5f, 0x4a, 0x50, 0x45, 0x47,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x47,
	0x50, 0x55, 0x5f, 0x56, 0x4f, 0x4c, 0x54, 0x41, 0x47, 0x45, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f,
	0x47, 0x50, 0x55, 0x5f, 0x47, 0x46, 0x58, 0x5f, 0x56, 0x4f, 0x4c, 0x54, 0x41, 0x47, 0x45, 0x10,
	0x0d, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f,
	0x56, 0x4f, 0x4c, 0x54, 0x41, 0x47, 0x45, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x43, 0x49,
	0x45, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x43, 0x49,
	0x45, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x10, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x43, 0x49, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x57, 0x49, 0x44, 0x54, 0x48, 0x10,
	0x11, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x44, 0x10, 0x12, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x43,
	0x49, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x13, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x43, 0x49, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x14, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x43,
	0x49, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x4f, 0x56,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x15, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x43,
	0x49, 0x45, 0x5f, 0x4e, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x43, 0x49, 0x45, 0x5f, 0x4e, 0x41, 0x43,
	0x4b, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x17, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x50, 0x55, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x18, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x55,
	0x53, 0x41, 0x47, 0x45, 0x10, 0x19, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x50, 0x55, 0x5f, 0x54, 0x4f,
	0x54, 0x41, 0x4c, 0x5f, 0x56, 0x52, 0x41, 0x4d, 0x10, 0x1a, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50,
	0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x4f,
	0x54, 0x41, 0x4c, 0x10, 0x1b, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43,
	0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c,
	0x10, 0x1c, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x44, 0x4d, 0x41, 0x10, 0x1d, 0x12, 0x1a, 0x0a, 0x16,
	0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x5f, 0x53, 0x44, 0x4d, 0x41, 0x10, 0x1e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f,
	0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x47, 0x46, 0x58, 0x10,
	0x1f, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43,
	0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x47, 0x46, 0x58, 0x10, 0x20, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f,
	0x4d, 0x4d, 0x48, 0x55, 0x42, 0x10, 0x21, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x45,
	0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x4d, 0x48,
	0x55, 0x42, 0x10, 0x22, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x54, 0x48, 0x55, 0x42, 0x10, 0x23, 0x12,
	0x1b, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x54, 0x48, 0x55, 0x42, 0x10, 0x24, 0x12, 0x17, 0x0a, 0x13,
	0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f,
	0x42, 0x49, 0x46, 0x10, 0x25, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43,
	0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x42, 0x49, 0x46, 0x10, 0x26,
	0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52,
	0x45, 0x43, 0x54, 0x5f, 0x48, 0x44, 0x50, 0x10, 0x27, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55,
	0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x48,
	0x44, 0x50, 0x10, 0x28, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x57, 0x41, 0x46,
	0x4c, 0x10, 0x29, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x57, 0x41,
	0x46, 0x4c, 0x10, 0x2a, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x46, 0x10, 0x2b, 0x12, 0x18, 0x0a, 0x14,
	0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x5f, 0x44, 0x46, 0x10, 0x2c, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43,
	0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x4d, 0x4e, 0x10, 0x2d, 0x12,
	0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x4d, 0x4e, 0x10, 0x2e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50,
	0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x45,
	0x4d, 0x10, 0x2f, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x45, 0x4d, 0x10, 0x30, 0x12, 0x17,
	0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x5f, 0x4d, 0x50, 0x30, 0x10, 0x31, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45,
	0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x50, 0x30,
	0x10, 0x32, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x50, 0x31, 0x10, 0x33, 0x12, 0x19, 0x0a, 0x15, 0x47,
	0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x5f, 0x4d, 0x50, 0x31, 0x10, 0x34, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43,
	0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x46, 0x55, 0x53, 0x45, 0x10, 0x35,
	0x12, 0x1a, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x46, 0x55, 0x53, 0x45, 0x10, 0x36, 0x12, 0x17, 0x0a, 0x13,
	0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f,
	0x55, 0x4d, 0x43, 0x10, 0x37, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43,
	0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x55, 0x4d, 0x43, 0x10, 0x38,
	0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52,
	0x5f, 0x30, 0x5f, 0x4e, 0x4f, 0x50, 0x5f, 0x54, 0x58, 0x10, 0x39, 0x12, 0x19, 0x0a, 0x15, 0x47,
	0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x30, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x58, 0x10, 0x3a, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47,
	0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x30, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58,
	0x10, 0x3b, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e,
	0x42, 0x52, 0x5f, 0x30, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x10, 0x3c, 0x12,
	0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f,
	0x31, 0x5f, 0x4e, 0x4f, 0x50, 0x5f, 0x54, 0x58, 0x10, 0x3d, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50,
	0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x31, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x54, 0x58, 0x10, 0x3e, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d,
	0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x31, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x10,
	0x3f, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42,
	0x52, 0x5f, 0x31, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x10, 0x40, 0x12, 0x1c,
	0x0a, 0x18, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x30,
	0x5f, 0x54, 0x58, 0x5f, 0x54, 0x48, 0x52, 0x50, 0x55, 0x54, 0x10, 0x41, 0x12, 0x1c, 0x0a, 0x18,
	0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x31, 0x5f, 0x54,
	0x58, 0x5f, 0x54, 0x48, 0x52, 0x50, 0x55, 0x54, 0x10, 0x42, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x50,
	0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x32, 0x5f, 0x54, 0x58, 0x5f,
	0x54, 0x48, 0x52, 0x50, 0x55, 0x54, 0x10, 0x43, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x50, 0x55, 0x5f,
	0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x33, 0x5f, 0x54, 0x58, 0x5f, 0x54, 0x48,
	0x52, 0x50, 0x55, 0x54, 0x10, 0x44, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47,
	0x4d, 0x49, 0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x34, 0x5f, 0x54, 0x58, 0x5f, 0x54, 0x48, 0x52, 0x50,
	0x55, 0x54, 0x10, 0x45, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49,
	0x5f, 0x4e, 0x42, 0x52, 0x5f, 0x35, 0x5f, 0x54, 0x58, 0x5f, 0x54, 0x48, 0x52, 0x50, 0x55, 0x54,
	0x10, 0x46, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x50, 0x55, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x5f, 0x56,
	0x52, 0x41, 0x4d, 0x10, 0x47, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x50, 0x55, 0x5f, 0x46, 0x52, 0x45,
	0x45, 0x5f, 0x56, 0x52, 0x41, 0x4d, 0x10, 0x48, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f,
	0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x56, 0x52,
	0x41, 0x4d, 0x10, 0x49, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x55, 0x53, 0x45, 0x44,
	0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x56, 0x52, 0x41, 0x4d, 0x10, 0x4a, 0x12,
	0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x56, 0x49, 0x53, 0x49,
	0x42, 0x4c, 0x45, 0x5f, 0x56, 0x52, 0x41, 0x4d, 0x10, 0x4b, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x50,
	0x55, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x47, 0x54, 0x54, 0x10, 0x4c, 0x12, 0x10, 0x0a,
	0x0c, 0x47, 0x50, 0x55, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x5f, 0x47, 0x54, 0x54, 0x10, 0x4d, 0x12,
	0x10, 0x0a, 0x0c, 0x47, 0x50, 0x55, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x47, 0x54, 0x54, 0x10,
	0x4e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x43, 0x41, 0x10, 0x4f, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50,
	0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f,
	0x4d, 0x43, 0x41, 0x10, 0x50, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43,
	0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x56, 0x43, 0x4e, 0x10, 0x51, 0x12, 0x19,
	0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52,
	0x45, 0x43, 0x54, 0x5f, 0x56, 0x43, 0x4e, 0x10, 0x52, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x50, 0x55,
	0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4a, 0x50, 0x45,
	0x47, 0x10, 0x53, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55,
	0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x54, 0x12,
	0x16, 0x0a, 0x12, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45,
	0x43, 0x54, 0x5f, 0x49, 0x48, 0x10, 0x55, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x45,
	0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x48, 0x10,
	0x56, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x50, 0x49, 0x4f, 0x10, 0x57, 0x12, 0x1a, 0x0a, 0x16, 0x47,
	0x50, 0x55, 0x5f, 0x45, 0x43, 0x43, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x5f, 0x4d, 0x50, 0x49, 0x4f, 0x10, 0x58, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x50, 0x55, 0x5f, 0x48,
	0x45, 0x41, 0x4c, 0x54, 0x48, 0x10, 0x59, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x50, 0x55, 0x5f, 0x58,
	0x47, 0x4d, 0x49, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x52, 0x58, 0x10, 0x5a, 0x12, 0x14, 0x0a,
	0x10, 0x47, 0x50, 0x55, 0x5f, 0x58, 0x47, 0x4d, 0x49, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x54,
	0x58, 0x10, 0x5b, 0x12, 0x2d, 0x0a, 0x29, 0x47, 0x50, 0x55, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43,
	0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52,
	0x10, 0x5c, 0x12, 0x35, 0x0a, 0x31, 0x47, 0x50, 0x55, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x4f, 0x52, 0x5f, 0x48, 0x4f,
	0x54, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x55,
	0x4d, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x10, 0x5d, 0x12, 0x2b, 0x0a, 0x27, 0x47, 0x50, 0x55,
	0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x50, 0x54, 0x5f, 0x52,
	0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x55, 0x4c,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x5e, 0x12, 0x36, 0x0a, 0x32, 0x47, 0x50, 0x55, 0x5f, 0x56, 0x49,
	0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54,
	0x48, 0x45, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x59,
	0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x10, 0x5f, 0x12, 0x32,
	0x0a, 0x2e, 0x47, 0x50, 0x55, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x56, 0x52, 0x5f, 0x54, 0x48, 0x45, 0x52, 0x4d, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44,
	0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x60, 0x12, 0x33, 0x0a, 0x2f, 0x47, 0x50, 0x55, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x42, 0x4d, 0x5f, 0x54, 0x48, 0x45, 0x52, 0x4d, 0x41, 0x4c, 0x5f,
	0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x55,
	0x4c, 0x41, 0x54, 0x45, 0x44, 0x10, 0x61, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x47,
	0x46, 0x58, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x41,
	0x4e, 0x45, 0x4f, 0x55, 0x53, 0x10, 0x62, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x56,
	0x43, 0x4e, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x41,
	0x4e, 0x45, 0x4f, 0x55, 0x53, 0x10, 0x63, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x50, 0x55, 0x5f, 0x4a,
	0x50, 0x45, 0x47, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54,
	0x41, 0x4e, 0x45, 0x4f, 0x55, 0x53, 0x10, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x43, 0x49, 0x45,
	0x5f, 0x52, 0x58, 0x10, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x43, 0x49, 0x45, 0x5f, 0x54, 0x58,
	0x10, 0x66, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x43, 0x49, 0x45, 0x5f, 0x42, 0x49, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x57, 0x49, 0x44,
	0x54, 0x48, 0x10, 0x67, 0x12, 0x1d, 0x0a, 0x18, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46,
	0x5f, 0x47, 0x52, 0x42, 0x4d, 0x5f, 0x47, 0x55, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0xa1, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f,
	0x53, 0x51, 0x5f, 0x57, 0x41, 0x56, 0x45, 0x53, 0x10, 0xa2, 0x06, 0x12, 0x18, 0x0a, 0x13, 0x47,
	0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x47, 0x52, 0x42, 0x4d, 0x5f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0xa3, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x42,
	0x55, 0x53, 0x59, 0x10, 0xa4, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f,
	0x49, 0x44, 0x4c, 0x45, 0x10, 0xa5, 0x06, 0x12, 0x20, 0x0a, 0x1b, 0x47, 0x50, 0x55, 0x5f, 0x50,
	0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0xa6, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55,
	0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x54, 0x43,
	0x49, 0x55, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0xa7, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50,
	0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x54,
	0x43, 0x49, 0x55, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0xa8, 0x06, 0x12, 0x22, 0x0a, 0x1d, 0x47,
	0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f,
	0x55, 0x54, 0x43, 0x4c, 0x32, 0x49, 0x55, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0xa9, 0x06, 0x12,
	0x22, 0x0a, 0x1d, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f,
	0x43, 0x50, 0x43, 0x5f, 0x55, 0x54, 0x43, 0x4c, 0x32, 0x49, 0x55, 0x5f, 0x49, 0x44, 0x4c, 0x45,
	0x10, 0xaa, 0x06, 0x12, 0x23, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f,
	0x43, 0x50, 0x43, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x55, 0x54, 0x43, 0x4c, 0x32, 0x49, 0x55, 0x5f,
	0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0xab, 0x06, 0x12, 0x2c, 0x0a, 0x27, 0x47, 0x50, 0x55, 0x5f,
	0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x4d, 0x45, 0x31, 0x5f, 0x42, 0x55, 0x53,
	0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x43,
	0x4f, 0x44, 0x45, 0x10, 0xac, 0x06, 0x12, 0x22, 0x0a, 0x1d, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x4d, 0x45, 0x31, 0x5f, 0x44, 0x43, 0x30, 0x5f, 0x53,
	0x50, 0x49, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0xad, 0x06, 0x12, 0x2c, 0x0a, 0x27, 0x47, 0x50,
	0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x55, 0x54, 0x43, 0x4c, 0x31,
	0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xae, 0x06, 0x12, 0x1e, 0x0a, 0x19, 0x47, 0x50, 0x55, 0x5f,
	0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x5f,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0xaf, 0x06, 0x12, 0x2b, 0x0a, 0x26, 0x47, 0x50, 0x55, 0x5f,
	0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x41, 0x44, 0x43, 0x5f, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x10, 0xb0, 0x06, 0x12, 0x29, 0x0a, 0x24, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x41, 0x44, 0x43, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0xb1, 0x06,
	0x12, 0x25, 0x0a, 0x20, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43,
	0x5f, 0x41, 0x44, 0x43, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b,
	0x5f, 0x45, 0x4e, 0x44, 0x10, 0xb2, 0x06, 0x12, 0x26, 0x0a, 0x21, 0x47, 0x50, 0x55, 0x5f, 0x50,
	0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x46, 0x49, 0x46,
	0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0xb3, 0x06, 0x12,
	0x20, 0x0a, 0x1b, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f,
	0x53, 0x59, 0x4e, 0x43, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0xb4,
	0x06, 0x12, 0x19, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50,
	0x43, 0x5f, 0x47, 0x44, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0xb5, 0x06, 0x12, 0x19, 0x0a, 0x14,
	0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x54, 0x47, 0x5f,
	0x53, 0x45, 0x4e, 0x44, 0x10, 0xb6, 0x06, 0x12, 0x21, 0x0a, 0x1c, 0x47, 0x50, 0x55, 0x5f, 0x50,
	0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x57, 0x41, 0x4c, 0x4b, 0x5f, 0x4e, 0x45, 0x58,
	0x54, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0xb7, 0x06, 0x12, 0x24, 0x0a, 0x1f, 0x47, 0x50,
	0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c,
	0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x53, 0x45, 0x30, 0x5f, 0x53, 0x50, 0x49, 0x10, 0xb8, 0x06,
	0x12, 0x24, 0x0a, 0x1f, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43,
	0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x53, 0x45, 0x31, 0x5f,
	0x53, 0x50, 0x49, 0x10, 0xb9, 0x06, 0x12, 0x24, 0x0a, 0x1f, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42,
	0x59, 0x5f, 0x53, 0x45, 0x32, 0x5f, 0x53, 0x50, 0x49, 0x10, 0xba, 0x06, 0x12, 0x24, 0x0a, 0x1f,
	0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41,
	0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x53, 0x45, 0x33, 0x5f, 0x53, 0x50, 0x49, 0x10,
	0xbb, 0x06, 0x12, 0x19, 0x0a, 0x14, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43,
	0x50, 0x43, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0xbc, 0x06, 0x12, 0x26, 0x0a,
	0x21, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x57, 0x52, 0x52, 0x45, 0x51, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x5f, 0x42, 0x55,
	0x53, 0x59, 0x10, 0xbd, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x5f, 0x43, 0x50, 0x43, 0x5f, 0x43, 0x41, 0x4e, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10,
	0xbe, 0x06, 0x12, 0x1c, 0x0a, 0x17, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43,
	0x50, 0x43, 0x5f, 0x43, 0x41, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0xbf, 0x06,
	0x12, 0x30, 0x0a, 0x2b, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x46,
	0x5f, 0x43, 0x4d, 0x50, 0x5f, 0x55, 0x54, 0x43, 0x4c, 0x31, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c,
	0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0xc0, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43,
	0x50, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x42, 0x55, 0x53, 0x59,
	0x10, 0xc1, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f,
	0x43, 0x50, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x49, 0x44, 0x4c,
	0x45, 0x10, 0xc2, 0x06, 0x12, 0x20, 0x0a, 0x1b, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46,
	0x5f, 0x43, 0x50, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x4c, 0x4c, 0x10, 0xc3, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x54, 0x43, 0x49, 0x55, 0x5f,
	0x42, 0x55, 0x53, 0x59, 0x10, 0xc4, 0x06, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50,
	0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x54, 0x43, 0x49, 0x55,
	0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0xc5, 0x06, 0x12, 0x20, 0x0a, 0x1b, 0x47, 0x50, 0x55, 0x5f,
	0x50, 0x52, 0x4f, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x43, 0x50, 0x46, 0x5f, 0x54, 0x43, 0x49,
	0x55, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0xc6, 0x06, 0x12, 0x18, 0x0a, 0x13, 0x47, 0x50,
	0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x10, 0xe8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46,
	0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0xe9, 0x07, 0x12, 0x1a,
	0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c,
	0x5f, 0x31, 0x36, 0x5f, 0x4f, 0x50, 0x53, 0x10, 0xea, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x47, 0x50,
	0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x33, 0x32, 0x5f,
	0x4f, 0x50, 0x53, 0x10, 0xeb, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x36, 0x34, 0x5f, 0x4f, 0x50, 0x53, 0x10,
	0xec, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x47,
	0x55, 0x49, 0x5f, 0x55, 0x54, 0x49, 0x4c, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x10,
	0xed, 0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x4f,
	0x43, 0x43, 0x55, 0x50, 0x41, 0x4e, 0x43, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54,
	0x10, 0xee, 0x07, 0x12, 0x23, 0x0a, 0x1e, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f,
	0x54, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x45,
	0x52, 0x43, 0x45, 0x4e, 0x54, 0x10, 0xef, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x47, 0x50, 0x55, 0x5f,
	0x50, 0x52, 0x4f, 0x46, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x5f, 0x49,
	0x53, 0x53, 0x55, 0x45, 0x5f, 0x55, 0x54, 0x49, 0x4c, 0x10, 0xf0, 0x07, 0x12, 0x17, 0x0a, 0x12,
	0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x53, 0x4d, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0xf1, 0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x5f, 0x4f, 0x43, 0x43, 0x55, 0x50, 0x41, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x4c, 0x41, 0x50,
	0x53, 0x45, 0x44, 0x10, 0xf2, 0x07, 0x12, 0x25, 0x0a, 0x20, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x5f, 0x4f, 0x43, 0x43, 0x55, 0x50, 0x41, 0x4e, 0x43, 0x59, 0x5f, 0x50, 0x45, 0x52,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x55, 0x10, 0xf3, 0x07, 0x12, 0x1e, 0x0a,
	0x19, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x4f, 0x43, 0x43, 0x55, 0x50, 0x41,
	0x4e, 0x43, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x43, 0x55, 0x10, 0xf4, 0x07, 0x12, 0x1e, 0x0a,
	0x19, 0x47, 0x50, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x5f, 0x53, 0x49, 0x4d, 0x44, 0x5f, 0x55,
	0x54, 0x49, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xf5, 0x07, 0x2a, 0xa8, 0x01,
	0x0a, 0x0e, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x0c, 0x0a, 0x08, 0x47, 0x50, 0x55, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x50, 0x55, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x50,
	0x55, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x02,
	0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x50, 0x55, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03,
	0x12, 0x1d, 0x0a, 0x19, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x4b, 0x46, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x49,
	0x44, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x06, 0x2a, 0xee, 0x33, 0x0a, 0x0e, 0x4e, 0x49, 0x43,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x49, 0x43, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x49,
	0x43, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a,
	0x1b, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x4b, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x03,
	0x12, 0x24, 0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44,
	0x5f, 0x46, 0x43, 0x53, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e,
	0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x06,
	0x12, 0x27, 0x0a, 0x23, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44,
	0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10, 0x07, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x49, 0x43,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x49, 0x5a, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x09, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x49,
	0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x46, 0x52, 0x41, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x53,
	0x10, 0x0a, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4a,
	0x41, 0x42, 0x42, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x25, 0x0a, 0x21, 0x4e, 0x49, 0x43, 0x5f, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x0c, 0x12, 0x28,
	0x0a, 0x24, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x53, 0x54, 0x4f, 0x4d, 0x50,
	0x45, 0x44, 0x5f, 0x43, 0x52, 0x43, 0x10, 0x0d, 0x12, 0x25, 0x0a, 0x21, 0x4e, 0x49, 0x43, 0x5f,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x52, 0x58, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x0e, 0x12,
	0x24, 0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x50, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54,
	0x58, 0x5f, 0x4f, 0x4b, 0x10, 0x10, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x54, 0x58, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x11, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x49, 0x43, 0x5f,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x54, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x10, 0x12, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49,
	0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x13, 0x12, 0x25,
	0x0a, 0x21, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x50, 0x41,
	0x55, 0x53, 0x45, 0x10, 0x14, 0x12, 0x2a, 0x0a, 0x26, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54,
	0x58, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x36, 0x34, 0x42, 0x10,
	0x15, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x54, 0x52,
	0x55, 0x4e, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x16, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x49, 0x43,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x52, 0x53, 0x46, 0x45,
	0x43, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x17, 0x12, 0x2a, 0x0a, 0x26, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x52, 0x53, 0x46, 0x45, 0x43, 0x5f, 0x43, 0x48, 0x5f,
	0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x43, 0x4e, 0x54, 0x10, 0x18,
	0x12, 0x24, 0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x55, 0x4e, 0x49,
	0x43, 0x41, 0x53, 0x54, 0x10, 0x19, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x1a, 0x12, 0x26,
	0x0a, 0x22, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44,
	0x43, 0x41, 0x53, 0x54, 0x10, 0x1b, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x30, 0x10, 0x1c, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49,
	0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x31, 0x10, 0x1d, 0x12, 0x22,
	0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x32,
	0x10, 0x1e, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50,
	0x52, 0x49, 0x5f, 0x33, 0x10, 0x1f, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x34, 0x10, 0x20, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49,
	0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x35, 0x10, 0x21, 0x12, 0x22,
	0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x36,
	0x10, 0x22, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50,
	0x52, 0x49, 0x5f, 0x37, 0x10, 0x23, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x54, 0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x24, 0x12, 0x26, 0x0a, 0x22,
	0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41,
	0x53, 0x54, 0x10, 0x25, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58,
	0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x26, 0x12, 0x22, 0x0a, 0x1e,
	0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x30, 0x10, 0x27,
	0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49,
	0x5f, 0x31, 0x10, 0x28, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58,
	0x5f, 0x50, 0x52, 0x49, 0x5f, 0x32, 0x10, 0x29, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x33, 0x10, 0x2a, 0x12, 0x22, 0x0a, 0x1e,
	0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x34, 0x10, 0x2b,
	0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49,
	0x5f, 0x35, 0x10, 0x2c, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58,
	0x5f, 0x50, 0x52, 0x49, 0x5f, 0x36, 0x10, 0x2d, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x49, 0x43, 0x5f,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x37, 0x10, 0x2e, 0x12, 0x1f, 0x0a, 0x1b,
	0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x4f,
	0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x4b, 0x10, 0x2f, 0x12, 0x20, 0x0a,
	0x1c, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f,
	0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x30, 0x12,
	0x1f, 0x0a, 0x1b, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x53, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x4f, 0x4b, 0x10, 0x31,
	0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x49, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x53, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x32, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x64, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x49, 0x43, 0x5f,
	0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x55, 0x4e, 0x49,
	0x43, 0x41, 0x53, 0x54, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x53, 0x10, 0x65, 0x12, 0x2b, 0x0a, 0x27, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53,
	0x54, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x66,
	0x12, 0x2b, 0x0a, 0x27, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x67, 0x12, 0x1f, 0x0a,
	0x1b, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x52,
	0x58, 0x5f, 0x44, 0x4d, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x68, 0x12, 0x24,
	0x0a, 0x20, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f,
	0x54, 0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x53, 0x10, 0x69, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x6a, 0x12,
	0x2b, 0x0a, 0x27, 0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53,
	0x5f, 0x54, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x6b, 0x12, 0x2b, 0x0a, 0x27,
	0x4e, 0x49, 0x43, 0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x54, 0x58,
	0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x6c, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x49, 0x43,
	0x5f, 0x4c, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x44, 0x4d,
	0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x6d, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x44,
	0x4d, 0x41, 0x5f, 0x54, 0x58, 0x5f, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x50, 0x4b, 0x54, 0x53,
	0x10, 0xc8, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x54, 0x58, 0x5f, 0x43,
	0x4e, 0x50, 0x5f, 0x50, 0x4b, 0x54, 0x53, 0x10, 0xc9, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x44,
	0x4d, 0x41, 0x5f, 0x52, 0x58, 0x5f, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x50, 0x4b, 0x54, 0x53,
	0x10, 0xca, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x58, 0x5f, 0x43,
	0x4e, 0x50, 0x5f, 0x50, 0x4b, 0x54, 0x53, 0x10, 0xcb, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x44,
	0x4d, 0x41, 0x5f, 0x52, 0x58, 0x5f, 0x45, 0x43, 0x4e, 0x5f, 0x50, 0x4b, 0x54, 0x53, 0x10, 0xcc,
	0x01, 0x12, 0x1c, 0x0a, 0x17, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58,
	0x5f, 0x50, 0x4b, 0x54, 0x5f, 0x53, 0x45, 0x51, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xcd, 0x01, 0x12,
	0x1e, 0x0a, 0x19, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x52,
	0x4e, 0x52, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xce, 0x01, 0x12,
	0x1c, 0x0a, 0x17, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x52,
	0x4d, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xcf, 0x01, 0x12, 0x1c, 0x0a,
	0x17, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x52, 0x4d, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xd0, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x52,
	0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x5f,
	0x45, 0x52, 0x52, 0x10, 0xd1, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52,
	0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x5f, 0x4e, 0x41, 0x4b, 0x5f, 0x53,
	0x45, 0x51, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xd2, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x44, 0x4d,
	0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x43, 0x51, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0xd3, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f,
	0x52, 0x58, 0x5f, 0x43, 0x51, 0x45, 0x5f, 0x46, 0x4c, 0x55, 0x53, 0x48, 0x10, 0xd4, 0x01, 0x12,
	0x19, 0x0a, 0x14, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x44,
	0x55, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0xd5, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x44,
	0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x58, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x50, 0x4b, 0x54, 0x53, 0x10, 0xd6, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x44, 0x4d,
	0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x58, 0x5f, 0x4c, 0x4f, 0x43, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0xd7, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f,
	0x54, 0x58, 0x5f, 0x4c, 0x4f, 0x43, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10,
	0xd8, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54,
	0x58, 0x5f, 0x4d, 0x45, 0x4d, 0x5f, 0x4d, 0x47, 0x4d, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xd9,
	0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x58,
	0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x43, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10,
	0xda, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54,
	0x58, 0x5f, 0x4c, 0x4f, 0x43, 0x5f, 0x53, 0x47, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x5f, 0x45, 0x52,
	0x52, 0x10, 0xdb, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0xdc, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x55, 0x54, 0x4f, 0x46, 0x5f, 0x42, 0x55, 0x46, 0x10, 0xdd, 0x01,
	0x12, 0x1c, 0x0a, 0x17, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x52, 0x58,
	0x5f, 0x4f, 0x55, 0x54, 0x4f, 0x55, 0x46, 0x5f, 0x53, 0x45, 0x51, 0x10, 0xde, 0x01, 0x12, 0x19,
	0x0a, 0x14, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x43,
	0x51, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xdf, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x44, 0x4d,
	0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x43, 0x51, 0x45, 0x5f, 0x46, 0x4c,
	0x55, 0x53, 0x48, 0x10, 0xe0, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4c, 0x4f, 0x43, 0x5f, 0x4c, 0x45, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x10, 0xe1, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xe2, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x52, 0x44, 0x4d, 0x41,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4c, 0x4f, 0x43, 0x5f, 0x4f, 0x50, 0x45,
	0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xe3, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x52, 0x44, 0x4d, 0x41,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x55, 0x54, 0x4f, 0x46, 0x5f, 0x41,
	0x54, 0x4f, 0x4d, 0x49, 0x43, 0x10, 0xe4, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x44, 0x4d, 0x41,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x4b, 0x54, 0x5f, 0x53, 0x45, 0x51,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0xe5, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x52, 0x44, 0x4d, 0x41, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x52, 0x4d, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xe6, 0x01, 0x12, 0x1d, 0x0a, 0x18,
	0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x52, 0x4d, 0x54,
	0x5f, 0x41, 0x43, 0x43, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xe7, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x52,
	0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x52, 0x4d, 0x54, 0x5f,
	0x4f, 0x50, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xe8, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x52,
	0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x52, 0x4e, 0x52, 0x5f,
	0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xe9, 0x01, 0x12, 0x21, 0x0a, 0x1c,
	0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x4c, 0x4f, 0x43,
	0x5f, 0x53, 0x47, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xea, 0x01, 0x12,
	0x1e, 0x0a, 0x19, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f,
	0x53, 0x30, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xeb, 0x01, 0x12,
	0x1c, 0x0a, 0x17, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x58, 0x5f,
	0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0xac, 0x02, 0x12, 0x28, 0x0a,
	0x23, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x58, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x5f, 0x52, 0x4b, 0x45, 0x10, 0xad, 0x02, 0x12, 0x28, 0x0a, 0x23, 0x51, 0x50, 0x5f, 0x53, 0x51,
	0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x4c, 0x4f, 0x43, 0x41,
	0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x53, 0x10, 0xae,
	0x02, 0x12, 0x1d, 0x0a, 0x18, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54,
	0x58, 0x5f, 0x52, 0x4e, 0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0xaf, 0x02,
	0x12, 0x22, 0x0a, 0x1d, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x58,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x5f, 0x53, 0x51, 0x5f, 0x44, 0x52, 0x41, 0x49, 0x4e, 0x45,
	0x44, 0x10, 0xb0, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x54, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x43, 0x4e, 0x50, 0x5f, 0x53, 0x45, 0x4e,
	0x54, 0x10, 0xb1, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10,
	0xb2, 0x02, 0x12, 0x2b, 0x0a, 0x26, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x52, 0x45, 0x51, 0x5f,
	0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x4b, 0x54, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x5f, 0x45, 0x43, 0x4e, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0xb3, 0x02, 0x12,
	0x20, 0x0a, 0x1b, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x43, 0x55, 0x52,
	0x52, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x10, 0xb4,
	0x02, 0x12, 0x27, 0x0a, 0x22, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xb5, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x51, 0x50,
	0x5f, 0x53, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xb6, 0x02, 0x12, 0x26, 0x0a, 0x21,
	0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0xb7, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x51, 0x43,
	0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x43, 0x4e, 0x50, 0x5f, 0x52, 0x43, 0x56, 0x44, 0x10, 0xb8,
	0x02, 0x12, 0x20, 0x0a, 0x1b, 0x51, 0x50, 0x5f, 0x53, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x43, 0x4e, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x45, 0x44,
	0x10, 0xb9, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50,
	0x5f, 0x54, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0xba,
	0x02, 0x12, 0x1b, 0x0a, 0x16, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x54,
	0x58, 0x5f, 0x52, 0x4e, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xbb, 0x02, 0x12, 0x24,
	0x0a, 0x1f, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xbc, 0x02, 0x12, 0x27, 0x0a, 0x22, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53,
	0x50, 0x5f, 0x54, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x52, 0x50, 0x5f, 0x42, 0x59, 0x54, 0x45,
	0x5f, 0x54, 0x48, 0x52, 0x45, 0x53, 0x5f, 0x48, 0x49, 0x54, 0x10, 0xbd, 0x02, 0x12, 0x25, 0x0a,
	0x20, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x54, 0x58, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x52, 0x50, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x49,
	0x54, 0x10, 0xbe, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53,
	0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10,
	0xbf, 0x02, 0x12, 0x28, 0x0a, 0x23, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f,
	0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x53,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x52, 0x4b, 0x45, 0x10, 0xc0, 0x02, 0x12, 0x2b, 0x0a, 0x26,
	0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d,
	0x5f, 0x50, 0x4b, 0x54, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x43, 0x4e, 0x5f, 0x4d,
	0x41, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0xc1, 0x02, 0x12, 0x23, 0x0a, 0x1e, 0x51, 0x50, 0x5f,
	0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x43, 0x4e,
	0x50, 0x53, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0xc2, 0x02, 0x12, 0x2a,
	0x0a, 0x25, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4d,
	0x41, 0x58, 0x5f, 0x52, 0x45, 0x43, 0x49, 0x52, 0x43, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0xc3, 0x02, 0x12, 0x28, 0x0a, 0x23, 0x51, 0x50,
	0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x4d,
	0x45, 0x4d, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0xc4, 0x02, 0x12, 0x2b, 0x0a, 0x26, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53,
	0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x44, 0x55, 0x50, 0x4c, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x57, 0x52, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x50, 0x43, 0x10, 0xc5,
	0x02, 0x12, 0x29, 0x0a, 0x24, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x52,
	0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x44, 0x55, 0x50, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f,
	0x42, 0x41, 0x43, 0x4b, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x10, 0xc6, 0x02, 0x12, 0x2b, 0x0a, 0x26,
	0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x52, 0x58, 0x5f, 0x4e, 0x55, 0x4d,
	0x5f, 0x44, 0x55, 0x50, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x41, 0x54, 0x4f, 0x4d, 0x49,
	0x43, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0xc7, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x51, 0x50, 0x5f,
	0x52, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x5f, 0x42, 0x59, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x10, 0xc8, 0x02, 0x12, 0x27, 0x0a, 0x22, 0x51,
	0x50, 0x5f, 0x52, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x42, 0x59, 0x54,
	0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0xc9, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x51, 0x43,
	0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49,
	0x52, 0x45, 0x44, 0x10, 0xca, 0x02, 0x12, 0x26, 0x0a, 0x21, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f,
	0x51, 0x43, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xcb, 0x02, 0x12, 0x1b,
	0x0a, 0x16, 0x51, 0x50, 0x5f, 0x52, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f,
	0x43, 0x4e, 0x50, 0x5f, 0x52, 0x43, 0x56, 0x44, 0x10, 0xcc, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x51,
	0x50, 0x5f, 0x52, 0x51, 0x5f, 0x51, 0x43, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x43, 0x4e, 0x50,
	0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0xcd, 0x02, 0x12, 0x13, 0x0a,
	0x0e, 0x45, 0x54, 0x48, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10,
	0xf4, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x45, 0x54, 0x48, 0x5f, 0x54, 0x58, 0x5f, 0x42, 0x59, 0x54,
	0x45, 0x53, 0x10, 0xf5, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0xf6, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x45, 0x54,
	0x48, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0xf7, 0x03, 0x12, 0x1c, 0x0a,
	0x17, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42,
	0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0xf8, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x45,
	0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4d, 0x55, 0x4c,
	0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0xf9, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44,
	0x43, 0x41, 0x53, 0x54, 0x10, 0xfa, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x54, 0x48, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41,
	0x53, 0x54, 0x10, 0xfb, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0xfc, 0x03, 0x12,
	0x18, 0x0a, 0x13, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58,
	0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0xfd, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x36, 0x34, 0x42, 0x10, 0xfe,
	0x03, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x36, 0x35, 0x42, 0x5f, 0x31, 0x32, 0x37, 0x42, 0x10, 0xff, 0x03, 0x12, 0x1c,
	0x0a, 0x17, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f,
	0x31, 0x32, 0x38, 0x42, 0x5f, 0x32, 0x35, 0x35, 0x42, 0x10, 0x80, 0x04, 0x12, 0x1c, 0x0a, 0x17,
	0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x32, 0x35,
	0x36, 0x42, 0x5f, 0x35, 0x31, 0x31, 0x42, 0x10, 0x81, 0x04, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x54,
	0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x35, 0x31, 0x32, 0x42,
	0x5f, 0x31, 0x30, 0x32, 0x33, 0x42, 0x10, 0x82, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x30, 0x32, 0x34, 0x42,
	0x5f, 0x31, 0x35, 0x31, 0x38, 0x42, 0x10, 0x83, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x42,
	0x5f, 0x32, 0x30, 0x34, 0x37, 0x42, 0x10, 0x84, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x32, 0x30, 0x34, 0x38, 0x42,
	0x5f, 0x34, 0x30, 0x39, 0x35, 0x42, 0x10, 0x85, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x34, 0x30, 0x39, 0x36, 0x42,
	0x5f, 0x38, 0x31, 0x39, 0x31, 0x42, 0x10, 0x86, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x46,
	0x43, 0x53, 0x10, 0x87, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x30, 0x10, 0x88, 0x04, 0x12, 0x17,
	0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f,
	0x50, 0x52, 0x49, 0x31, 0x10, 0x89, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x32, 0x10, 0x8a, 0x04,
	0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52,
	0x58, 0x5f, 0x50, 0x52, 0x49, 0x33, 0x10, 0x8b, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x34, 0x10,
	0x8c, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x35, 0x10, 0x8d, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45,
	0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49,
	0x36, 0x10, 0x8e, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x37, 0x10, 0x8f, 0x04, 0x12, 0x17, 0x0a,
	0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50,
	0x52, 0x49, 0x30, 0x10, 0x90, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x31, 0x10, 0x91, 0x04, 0x12,
	0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58,
	0x5f, 0x50, 0x52, 0x49, 0x32, 0x10, 0x92, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x33, 0x10, 0x93,
	0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x34, 0x10, 0x94, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54,
	0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x35,
	0x10, 0x95, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x36, 0x10, 0x96, 0x04, 0x12, 0x17, 0x0a, 0x12,
	0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52,
	0x49, 0x37, 0x10, 0x97, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x98,
	0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x99, 0x04, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x41,
	0x4c, 0x4c, 0x10, 0x9a, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x9b, 0x04, 0x12, 0x16, 0x0a,
	0x11, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x42,
	0x41, 0x44, 0x10, 0x9c, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48, 0x5f, 0x48, 0x57, 0x5f,
	0x54, 0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x9d, 0x04, 0x12, 0x16, 0x0a,
	0x11, 0x45, 0x54, 0x48, 0x5f, 0x48, 0x57, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50,
	0x45, 0x44, 0x10, 0x9e, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f,
	0x30, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x9f, 0x04, 0x12, 0x15, 0x0a, 0x10,
	0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x10, 0xa0, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x32, 0x5f,
	0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xa1, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54,
	0x48, 0x5f, 0x52, 0x58, 0x5f, 0x33, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xa2,
	0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x34, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xa3, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f,
	0x52, 0x58, 0x5f, 0x35, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xa4, 0x04, 0x12,
	0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x36, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x50, 0x45, 0x44, 0x10, 0xa5, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58,
	0x5f, 0x37, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xa6, 0x04, 0x12, 0x15, 0x0a,
	0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x38, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45,
	0x44, 0x10, 0xa7, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x39,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xa8, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45,
	0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x30, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x10, 0xa9, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x31,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xaa, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45,
	0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x32, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x10, 0xab, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x33,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xac, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45,
	0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x34, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x10, 0xad, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x35,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0xae, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45,
	0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x4b, 0x10,
	0xaf, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x5f, 0x54, 0x58, 0x5f, 0x4f, 0x4b, 0x10, 0xb0, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48,
	0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x4b, 0x10, 0xb1, 0x04,
	0x12, 0x15, 0x0a, 0x10, 0x45, 0x54, 0x48, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x54,
	0x58, 0x5f, 0x4f, 0x4b, 0x10, 0xb2, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x54, 0x48, 0x5f, 0x4f,
	0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0xb3,
	0x04, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0xb4, 0x04, 0x12, 0x1a, 0x0a,
	0x15, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x55,
	0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0xb5, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x38, 0x31, 0x39, 0x32, 0x42,
	0x5f, 0x39, 0x32, 0x31, 0x35, 0x42, 0x10, 0xb6, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x38, 0x31, 0x39, 0x32, 0x42,
	0x5f, 0x39, 0x32, 0x31, 0x35, 0x42, 0x10, 0xb7, 0x04, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x36, 0x34, 0x42, 0x10, 0xb8,
	0x04, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x54, 0x58, 0x5f, 0x36, 0x35, 0x42, 0x5f, 0x31, 0x32, 0x37, 0x42, 0x10, 0xb9, 0x04, 0x12, 0x1c,
	0x0a, 0x17, 0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f,
	0x31, 0x32, 0x38, 0x42, 0x5f, 0x32, 0x35, 0x35, 0x42, 0x10, 0xba, 0x04, 0x12, 0x1c, 0x0a, 0x17,
	0x45, 0x54, 0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x32, 0x35,
	0x36, 0x42, 0x5f, 0x35, 0x31, 0x31, 0x42, 0x10, 0xbb, 0x04, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x54,
	0x48, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x35, 0x31, 0x32, 0x42,
	0x5f, 0x31, 0x30, 0x32, 0x33, 0x42, 0x10, 0xbc, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x31, 0x30, 0x32, 0x34, 0x42,
	0x5f, 0x31, 0x35, 0x31, 0x38, 0x42, 0x10, 0xbd, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x42,
	0x5f, 0x32, 0x30, 0x34, 0x37, 0x42, 0x10, 0xbe, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x32, 0x30, 0x34, 0x38, 0x42,
	0x5f, 0x34, 0x30, 0x39, 0x35, 0x42, 0x10, 0xbf, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x34, 0x30, 0x39, 0x36, 0x42,
	0x5f, 0x38, 0x31, 0x39, 0x31, 0x42, 0x10, 0xc0, 0x04, 0x2a, 0x2a, 0x0a, 0x0e, 0x4e, 0x49, 0x43,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x08, 0x4e,
	0x49, 0x43, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x49, 0x43,
	0x5f, 0x49, 0x44, 0x10, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exporterconfig_proto_rawDescOnce sync.Once
	file_exporterconfig_proto_rawDescData = file_exporterconfig_proto_rawDesc
)

func file_exporterconfig_proto_rawDescGZIP() []byte {
	file_exporterconfig_proto_rawDescOnce.Do(func() {
		file_exporterconfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_exporterconfig_proto_rawDescData)
	})
	return file_exporterconfig_proto_rawDescData
}

var file_exporterconfig_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_exporterconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_exporterconfig_proto_goTypes = []any{
	(MetricLabel)(0),             // 0: exportermetrics.MetricLabel
	(GPUMetricField)(0),          // 1: exportermetrics.GPUMetricField
	(GPUMetricLabel)(0),          // 2: exportermetrics.GPUMetricLabel
	(NICMetricField)(0),          // 3: exportermetrics.NICMetricField
	(NICMetricLabel)(0),          // 4: exportermetrics.NICMetricLabel
	(*GPUHealthThresholds)(nil),  // 5: exportermetrics.GPUHealthThresholds
	(*GPUMetricConfig)(nil),      // 6: exportermetrics.GPUMetricConfig
	(*HealthServiceConfig)(nil),  // 7: exportermetrics.HealthServiceConfig
	(*CommonConfig)(nil),         // 8: exportermetrics.CommonConfig
	(*NICMetricConfig)(nil),      // 9: exportermetrics.NICMetricConfig
	(*NICHealthCheckConfig)(nil), // 10: exportermetrics.NICHealthCheckConfig
	(*MetricConfig)(nil),         // 11: exportermetrics.MetricConfig
	nil,                          // 12: exportermetrics.GPUMetricConfig.CustomLabelsEntry
	nil,                          // 13: exportermetrics.GPUMetricConfig.ExtraPodLabelsEntry
	nil,                          // 14: exportermetrics.GPUMetricConfig.ProfilerMetricsEntry
	nil,                          // 15: exportermetrics.NICMetricConfig.CustomLabelsEntry
	nil,                          // 16: exportermetrics.NICMetricConfig.ExtraPodLabelsEntry
}
var file_exporterconfig_proto_depIdxs = []int32{
	5,  // 0: exportermetrics.GPUMetricConfig.HealthThresholds:type_name -> exportermetrics.GPUHealthThresholds
	12, // 1: exportermetrics.GPUMetricConfig.CustomLabels:type_name -> exportermetrics.GPUMetricConfig.CustomLabelsEntry
	13, // 2: exportermetrics.GPUMetricConfig.ExtraPodLabels:type_name -> exportermetrics.GPUMetricConfig.ExtraPodLabelsEntry
	14, // 3: exportermetrics.GPUMetricConfig.ProfilerMetrics:type_name -> exportermetrics.GPUMetricConfig.ProfilerMetricsEntry
	7,  // 4: exportermetrics.CommonConfig.HealthService:type_name -> exportermetrics.HealthServiceConfig
	15, // 5: exportermetrics.NICMetricConfig.CustomLabels:type_name -> exportermetrics.NICMetricConfig.CustomLabelsEntry
	10, // 6: exportermetrics.NICMetricConfig.HealthCheckConfig:type_name -> exportermetrics.NICHealthCheckConfig
	16, // 7: exportermetrics.NICMetricConfig.ExtraPodLabels:type_name -> exportermetrics.NICMetricConfig.ExtraPodLabelsEntry
	6,  // 8: exportermetrics.MetricConfig.GPUConfig:type_name -> exportermetrics.GPUMetricConfig
	8,  // 9: exportermetrics.MetricConfig.CommonConfig:type_name -> exportermetrics.CommonConfig
	9,  // 10: exportermetrics.MetricConfig.NICConfig:type_name -> exportermetrics.NICMetricConfig
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_exporterconfig_proto_init() }
func file_exporterconfig_proto_init() {
	if File_exporterconfig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exporterconfig_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GPUHealthThresholds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exporterconfig_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GPUMetricConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exporterconfig_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HealthServiceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exporterconfig_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exporterconfig_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NICMetricConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exporterconfig_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NICHealthCheckConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exporterconfig_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MetricConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exporterconfig_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_exporterconfig_proto_goTypes,
		DependencyIndexes: file_exporterconfig_proto_depIdxs,
		EnumInfos:         file_exporterconfig_proto_enumTypes,
		MessageInfos:      file_exporterconfig_proto_msgTypes,
	}.Build()
	File_exporterconfig_proto = out.File
	file_exporterconfig_proto_rawDesc = nil
	file_exporterconfig_proto_goTypes = nil
	file_exporterconfig_proto_depIdxs = nil
}
