//
//Copyright (c) Advanced Micro Devices, Inc. All rights reserved.
//
//Licensed under the Apache License, Version 2.0 (the \"License\");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an \"AS IS\" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

//----------------------------------------------------------------------------
///
/// \file
/// AMD NIC Ethtool Metrics
///
//----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: ethtool.proto

package nicmetrics

import (
	_ "github.com/alta/protopatch/patch/gopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EthtoolStats represents the statistics of an ethernet interface, identified by a unique ifname.
type EthtoolStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TX_PACKETS            uint64 `protobuf:"varint,2,opt,name=TX_PACKETS,json=TXPACKETS,proto3" json:"tx_packets,omitempty" yaml:"tx_packets,omitempty"`
	TX_BYTES              uint64 `protobuf:"varint,3,opt,name=TX_BYTES,json=TXBYTES,proto3" json:"tx_bytes,omitempty" yaml:"tx_bytes,omitempty"`
	RX_PACKETS            uint64 `protobuf:"varint,4,opt,name=RX_PACKETS,json=RXPACKETS,proto3" json:"rx_packets,omitempty" yaml:"rx_packets,omitempty"`
	RX_BYTES              uint64 `protobuf:"varint,5,opt,name=RX_BYTES,json=RXBYTES,proto3" json:"rx_bytes,omitempty" yaml:"rx_bytes,omitempty"`
	FRAMES_RX_BROADCAST   uint64 `protobuf:"varint,6,opt,name=FRAMES_RX_BROADCAST,json=FRAMESRXBROADCAST,proto3" json:"frames_rx_broadcast,omitempty" yaml:"frames_rx_broadcast,omitempty"`
	FRAMES_RX_MULTICAST   uint64 `protobuf:"varint,7,opt,name=FRAMES_RX_MULTICAST,json=FRAMESRXMULTICAST,proto3" json:"frames_rx_multicast,omitempty" yaml:"frames_rx_multicast,omitempty"`
	FRAMES_TX_BROADCAST   uint64 `protobuf:"varint,8,opt,name=FRAMES_TX_BROADCAST,json=FRAMESTXBROADCAST,proto3" json:"frames_tx_broadcast,omitempty" yaml:"frames_tx_broadcast,omitempty"`
	FRAMES_TX_MULTICAST   uint64 `protobuf:"varint,9,opt,name=FRAMES_TX_MULTICAST,json=FRAMESTXMULTICAST,proto3" json:"frames_tx_multicast,omitempty" yaml:"frames_tx_multicast,omitempty"`
	FRAMES_RX_PAUSE       uint64 `protobuf:"varint,10,opt,name=FRAMES_RX_PAUSE,json=FRAMESRXPAUSE,proto3" json:"frames_rx_pause,omitempty" yaml:"frames_rx_pause,omitempty"`
	FRAMES_TX_PAUSE       uint64 `protobuf:"varint,11,opt,name=FRAMES_TX_PAUSE,json=FRAMESTXPAUSE,proto3" json:"frames_tx_pause,omitempty" yaml:"frames_tx_pause,omitempty"`
	FRAMES_RX_64B         uint64 `protobuf:"varint,12,opt,name=FRAMES_RX_64B,json=FRAMESRX64B,proto3" json:"frames_rx_64b,omitempty" yaml:"frames_rx_64b,omitempty"`
	FRAMES_RX_65B_127B    uint64 `protobuf:"varint,13,opt,name=FRAMES_RX_65B_127B,json=FRAMESRX65B127B,proto3" json:"frames_rx_65b_127b,omitempty" yaml:"frames_rx_65b_127b,omitempty"`
	FRAMES_RX_128B_255B   uint64 `protobuf:"varint,14,opt,name=FRAMES_RX_128B_255B,json=FRAMESRX128B255B,proto3" json:"frames_rx_128b_255b,omitempty" yaml:"frames_rx_128b_255b,omitempty"`
	FRAMES_RX_256B_511B   uint64 `protobuf:"varint,15,opt,name=FRAMES_RX_256B_511B,json=FRAMESRX256B511B,proto3" json:"frames_rx_256b_511b,omitempty" yaml:"frames_rx_256b_511b,omitempty"`
	FRAMES_RX_512B_1023B  uint64 `protobuf:"varint,16,opt,name=FRAMES_RX_512B_1023B,json=FRAMESRX512B1023B,proto3" json:"frames_rx_512b_1023b,omitempty" yaml:"frames_rx_512b_1023b,omitempty"`
	FRAMES_RX_1024B_1518B uint64 `protobuf:"varint,17,opt,name=FRAMES_RX_1024B_1518B,json=FRAMESRX1024B1518B,proto3" json:"frames_rx_1024b_1518b,omitempty" yaml:"frames_rx_1024b_1518b,omitempty"`
	FRAMES_RX_1519B_2047B uint64 `protobuf:"varint,18,opt,name=FRAMES_RX_1519B_2047B,json=FRAMESRX1519B2047B,proto3" json:"frames_rx_1519b_2047b,omitempty" yaml:"frames_rx_1519b_2047b,omitempty"`
	FRAMES_RX_2048B_4095B uint64 `protobuf:"varint,19,opt,name=FRAMES_RX_2048B_4095B,json=FRAMESRX2048B4095B,proto3" json:"frames_rx_2048b_4095b,omitempty" yaml:"frames_rx_2048b_4095b,omitempty"`
	FRAMES_RX_4096B_8191B uint64 `protobuf:"varint,20,opt,name=FRAMES_RX_4096B_8191B,json=FRAMESRX4096B8191B,proto3" json:"frames_rx_4096b_8191b,omitempty" yaml:"frames_rx_4096b_8191b,omitempty"`
	FRAMES_RX_BAD_FCS     uint64 `protobuf:"varint,21,opt,name=FRAMES_RX_BAD_FCS,json=FRAMESRXBADFCS,proto3" json:"frames_rx_bad_fcs,omitempty" yaml:"frames_rx_bad_fcs,omitempty"`
	FRAMES_RX_PRI_4       uint64 `protobuf:"varint,22,opt,name=FRAMES_RX_PRI_4,json=FRAMESRXPRI4,proto3" json:"frames_rx_pri_4,omitempty" yaml:"frames_rx_pri_4,omitempty"`
	FRAMES_TX_PRI_4       uint64 `protobuf:"varint,23,opt,name=FRAMES_TX_PRI_4,json=FRAMESTXPRI4,proto3" json:"frames_tx_pri_4,omitempty" yaml:"frames_tx_pri_4,omitempty"`
	FRAMES_RX_PRI_0       uint64 `protobuf:"varint,24,opt,name=FRAMES_RX_PRI_0,json=FRAMESRXPRI0,proto3" json:"frames_rx_pri_0,omitempty" yaml:"frames_rx_pri_0,omitempty"`
	FRAMES_RX_PRI_1       uint64 `protobuf:"varint,25,opt,name=FRAMES_RX_PRI_1,json=FRAMESRXPRI1,proto3" json:"frames_rx_pri_1,omitempty" yaml:"frames_rx_pri_1,omitempty"`
	FRAMES_RX_PRI_2       uint64 `protobuf:"varint,26,opt,name=FRAMES_RX_PRI_2,json=FRAMESRXPRI2,proto3" json:"frames_rx_pri_2,omitempty" yaml:"frames_rx_pri_2,omitempty"`
	FRAMES_RX_PRI_3       uint64 `protobuf:"varint,27,opt,name=FRAMES_RX_PRI_3,json=FRAMESRXPRI3,proto3" json:"frames_rx_pri_3,omitempty" yaml:"frames_rx_pri_3,omitempty"`
	FRAMES_RX_PRI_5       uint64 `protobuf:"varint,28,opt,name=FRAMES_RX_PRI_5,json=FRAMESRXPRI5,proto3" json:"frames_rx_pri_5,omitempty" yaml:"frames_rx_pri_5,omitempty"`
	FRAMES_RX_PRI_6       uint64 `protobuf:"varint,29,opt,name=FRAMES_RX_PRI_6,json=FRAMESRXPRI6,proto3" json:"frames_rx_pri_6,omitempty" yaml:"frames_rx_pri_6,omitempty"`
	FRAMES_RX_PRI_7       uint64 `protobuf:"varint,30,opt,name=FRAMES_RX_PRI_7,json=FRAMESRXPRI7,proto3" json:"frames_rx_pri_7,omitempty" yaml:"frames_rx_pri_7,omitempty"`
	FRAMES_TX_PRI_0       uint64 `protobuf:"varint,31,opt,name=FRAMES_TX_PRI_0,json=FRAMESTXPRI0,proto3" json:"frames_tx_pri_0,omitempty" yaml:"frames_tx_pri_0,omitempty"`
	FRAMES_TX_PRI_1       uint64 `protobuf:"varint,32,opt,name=FRAMES_TX_PRI_1,json=FRAMESTXPRI1,proto3" json:"frames_tx_pri_1,omitempty" yaml:"frames_tx_pri_1,omitempty"`
	FRAMES_TX_PRI_2       uint64 `protobuf:"varint,33,opt,name=FRAMES_TX_PRI_2,json=FRAMESTXPRI2,proto3" json:"frames_tx_pri_2,omitempty" yaml:"frames_tx_pri_2,omitempty"`
	FRAMES_TX_PRI_3       uint64 `protobuf:"varint,34,opt,name=FRAMES_TX_PRI_3,json=FRAMESTXPRI3,proto3" json:"frames_tx_pri_3,omitempty" yaml:"frames_tx_pri_3,omitempty"`
	FRAMES_TX_PRI_5       uint64 `protobuf:"varint,35,opt,name=FRAMES_TX_PRI_5,json=FRAMESTXPRI5,proto3" json:"frames_tx_pri_5,omitempty" yaml:"frames_tx_pri_5,omitempty"`
	FRAMES_TX_PRI_6       uint64 `protobuf:"varint,36,opt,name=FRAMES_TX_PRI_6,json=FRAMESTXPRI6,proto3" json:"frames_tx_pri_6,omitempty" yaml:"frames_tx_pri_6,omitempty"`
	FRAMES_TX_PRI_7       uint64 `protobuf:"varint,37,opt,name=FRAMES_TX_PRI_7,json=FRAMESTXPRI7,proto3" json:"frames_tx_pri_7,omitempty" yaml:"frames_tx_pri_7,omitempty"`
	FRAMES_RX_DROPPED     uint64 `protobuf:"varint,38,opt,name=FRAMES_RX_DROPPED,json=FRAMESRXDROPPED,proto3" json:"frames_rx_dropped,omitempty" yaml:"frames_rx_dropped,omitempty"`
	FRAMES_RX_ALL         uint64 `protobuf:"varint,39,opt,name=FRAMES_RX_ALL,json=FRAMESRXALL,proto3" json:"frames_rx_all,omitempty" yaml:"frames_rx_all,omitempty"`
	FRAMES_RX_BAD_ALL     uint64 `protobuf:"varint,40,opt,name=FRAMES_RX_BAD_ALL,json=FRAMESRXBADALL,proto3" json:"frames_rx_bad_all,omitempty" yaml:"frames_rx_bad_all,omitempty"`
	FRAMES_TX_ALL         uint64 `protobuf:"varint,41,opt,name=FRAMES_TX_ALL,json=FRAMESTXALL,proto3" json:"frames_tx_all,omitempty" yaml:"frames_tx_all,omitempty"`
	FRAMES_TX_BAD         uint64 `protobuf:"varint,42,opt,name=FRAMES_TX_BAD,json=FRAMESTXBAD,proto3" json:"frames_tx_bad,omitempty" yaml:"frames_tx_bad,omitempty"`
	HW_TX_DROPPED         uint64 `protobuf:"varint,43,opt,name=HW_TX_DROPPED,json=HWTXDROPPED,proto3" json:"hw_tx_dropped,omitempty" yaml:"hw_tx_dropped,omitempty"`
	HW_RX_DROPPED         uint64 `protobuf:"varint,44,opt,name=HW_RX_DROPPED,json=HWRXDROPPED,proto3" json:"hw_rx_dropped,omitempty" yaml:"hw_rx_dropped,omitempty"`
	RX_0_DROPPED          uint64 `protobuf:"varint,45,opt,name=RX_0_DROPPED,json=RX0DROPPED,proto3" json:"rx_0_dropped,omitempty" yaml:"rx_0_dropped,omitempty"`
	RX_1_DROPPED          uint64 `protobuf:"varint,46,opt,name=RX_1_DROPPED,json=RX1DROPPED,proto3" json:"rx_1_dropped,omitempty" yaml:"rx_1_dropped,omitempty"`
	RX_2_DROPPED          uint64 `protobuf:"varint,47,opt,name=RX_2_DROPPED,json=RX2DROPPED,proto3" json:"rx_2_dropped,omitempty" yaml:"rx_2_dropped,omitempty"`
	RX_3_DROPPED          uint64 `protobuf:"varint,48,opt,name=RX_3_DROPPED,json=RX3DROPPED,proto3" json:"rx_3_dropped,omitempty" yaml:"rx_3_dropped,omitempty"`
	RX_4_DROPPED          uint64 `protobuf:"varint,49,opt,name=RX_4_DROPPED,json=RX4DROPPED,proto3" json:"rx_4_dropped,omitempty" yaml:"rx_4_dropped,omitempty"`
	RX_5_DROPPED          uint64 `protobuf:"varint,50,opt,name=RX_5_DROPPED,json=RX5DROPPED,proto3" json:"rx_5_dropped,omitempty" yaml:"rx_5_dropped,omitempty"`
	RX_6_DROPPED          uint64 `protobuf:"varint,51,opt,name=RX_6_DROPPED,json=RX6DROPPED,proto3" json:"rx_6_dropped,omitempty" yaml:"rx_6_dropped,omitempty"`
	RX_7_DROPPED          uint64 `protobuf:"varint,52,opt,name=RX_7_DROPPED,json=RX7DROPPED,proto3" json:"rx_7_dropped,omitempty" yaml:"rx_7_dropped,omitempty"`
	RX_8_DROPPED          uint64 `protobuf:"varint,53,opt,name=RX_8_DROPPED,json=RX8DROPPED,proto3" json:"rx_8_dropped,omitempty" yaml:"rx_8_dropped,omitempty"`
	RX_9_DROPPED          uint64 `protobuf:"varint,54,opt,name=RX_9_DROPPED,json=RX9DROPPED,proto3" json:"rx_9_dropped,omitempty" yaml:"rx_9_dropped,omitempty"`
	RX_10_DROPPED         uint64 `protobuf:"varint,55,opt,name=RX_10_DROPPED,json=RX10DROPPED,proto3" json:"rx_10_dropped,omitempty" yaml:"rx_10_dropped,omitempty"`
	RX_11_DROPPED         uint64 `protobuf:"varint,56,opt,name=RX_11_DROPPED,json=RX11DROPPED,proto3" json:"rx_11_dropped,omitempty" yaml:"rx_11_dropped,omitempty"`
	RX_12_DROPPED         uint64 `protobuf:"varint,57,opt,name=RX_12_DROPPED,json=RX12DROPPED,proto3" json:"rx_12_dropped,omitempty" yaml:"rx_12_dropped,omitempty"`
	RX_13_DROPPED         uint64 `protobuf:"varint,58,opt,name=RX_13_DROPPED,json=RX13DROPPED,proto3" json:"rx_13_dropped,omitempty" yaml:"rx_13_dropped,omitempty"`
	RX_14_DROPPED         uint64 `protobuf:"varint,59,opt,name=RX_14_DROPPED,json=RX14DROPPED,proto3" json:"rx_14_dropped,omitempty" yaml:"rx_14_dropped,omitempty"`
	RX_15_DROPPED         uint64 `protobuf:"varint,60,opt,name=RX_15_DROPPED,json=RX15DROPPED,proto3" json:"rx_15_dropped,omitempty" yaml:"rx_15_dropped,omitempty"`
	FRAMES_RX_OK          uint64 `protobuf:"varint,61,opt,name=FRAMES_RX_OK,json=FRAMESRXOK,proto3" json:"frames_rx_ok,omitempty" yaml:"frames_rx_ok,omitempty"`
	FRAMES_TX_OK          uint64 `protobuf:"varint,62,opt,name=FRAMES_TX_OK,json=FRAMESTXOK,proto3" json:"frames_tx_ok,omitempty" yaml:"frames_tx_ok,omitempty"`
	OCTETS_RX_OK          uint64 `protobuf:"varint,63,opt,name=OCTETS_RX_OK,json=OCTETSRXOK,proto3" json:"octets_rx_ok,omitempty" yaml:"octets_rx_ok,omitempty"`
	OCTETS_TX_OK          uint64 `protobuf:"varint,64,opt,name=OCTETS_TX_OK,json=OCTETSTXOK,proto3" json:"octets_tx_ok,omitempty" yaml:"octets_tx_ok,omitempty"`
	OCTETS_TX_TOTAL       uint64 `protobuf:"varint,65,opt,name=OCTETS_TX_TOTAL,json=OCTETSTXTOTAL,proto3" json:"octets_tx_total,omitempty" yaml:"octets_tx_total,omitempty"`
	FRAMES_RX_UNICAST     uint64 `protobuf:"varint,66,opt,name=FRAMES_RX_UNICAST,json=FRAMESRXUNICAST,proto3" json:"frames_rx_unicast,omitempty" yaml:"frames_rx_unicast,omitempty"`
	FRAMES_TX_UNICAST     uint64 `protobuf:"varint,67,opt,name=FRAMES_TX_UNICAST,json=FRAMESTXUNICAST,proto3" json:"frames_tx_unicast,omitempty" yaml:"frames_tx_unicast,omitempty"`
	FRAMES_RX_8192B_9215B uint64 `protobuf:"varint,68,opt,name=FRAMES_RX_8192B_9215B,json=FRAMESRX8192B9215B,proto3" json:"frames_rx_8192b_9215b,omitempty" yaml:"frames_rx_8192b_9215b,omitempty"`
	FRAMES_TX_8192B_9215B uint64 `protobuf:"varint,69,opt,name=FRAMES_TX_8192B_9215B,json=FRAMESTX8192B9215B,proto3" json:"frames_tx_8192b_9215b,omitempty" yaml:"frames_tx_8192b_9215b,omitempty"`
	FRAMES_TX_64B         uint64 `protobuf:"varint,70,opt,name=FRAMES_TX_64B,json=FRAMESTX64B,proto3" json:"frames_tx_64b,omitempty" yaml:"frames_tx_64b,omitempty"`
	FRAMES_TX_65B_127B    uint64 `protobuf:"varint,71,opt,name=FRAMES_TX_65B_127B,json=FRAMESTX65B127B,proto3" json:"frames_tx_65b_127b,omitempty" yaml:"frames_tx_65b_127b,omitempty"`
	FRAMES_TX_128B_255B   uint64 `protobuf:"varint,72,opt,name=FRAMES_TX_128B_255B,json=FRAMESTX128B255B,proto3" json:"frames_tx_128b_255b,omitempty" yaml:"frames_tx_128b_255b,omitempty"`
	FRAMES_TX_256B_511B   uint64 `protobuf:"varint,73,opt,name=FRAMES_TX_256B_511B,json=FRAMESTX256B511B,proto3" json:"frames_tx_256b_511b,omitempty" yaml:"frames_tx_256b_511b,omitempty"`
	FRAMES_TX_512B_1023B  uint64 `protobuf:"varint,74,opt,name=FRAMES_TX_512B_1023B,json=FRAMESTX512B1023B,proto3" json:"frames_tx_512b_1023b,omitempty" yaml:"frames_tx_512b_1023b,omitempty"`
	FRAMES_TX_1024B_1518B uint64 `protobuf:"varint,75,opt,name=FRAMES_TX_1024B_1518B,json=FRAMESTX1024B1518B,proto3" json:"frames_tx_1024b_1518b,omitempty" yaml:"frames_tx_1024b_1518b,omitempty"`
	FRAMES_TX_1519B_2047B uint64 `protobuf:"varint,76,opt,name=FRAMES_TX_1519B_2047B,json=FRAMESTX1519B2047B,proto3" json:"frames_tx_1519b_2047b,omitempty" yaml:"frames_tx_1519b_2047b,omitempty"`
	FRAMES_TX_2048B_4095B uint64 `protobuf:"varint,77,opt,name=FRAMES_TX_2048B_4095B,json=FRAMESTX2048B4095B,proto3" json:"frames_tx_2048b_4095b,omitempty" yaml:"frames_tx_2048b_4095b,omitempty"`
	FRAMES_TX_4096B_8191B uint64 `protobuf:"varint,78,opt,name=FRAMES_TX_4096B_8191B,json=FRAMESTX4096B8191B,proto3" json:"frames_tx_4096b_8191b,omitempty" yaml:"frames_tx_4096b_8191b,omitempty"`
}

func (x *EthtoolStats) Reset() {
	*x = EthtoolStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethtool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthtoolStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthtoolStats) ProtoMessage() {}

func (x *EthtoolStats) ProtoReflect() protoreflect.Message {
	mi := &file_ethtool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthtoolStats.ProtoReflect.Descriptor instead.
func (*EthtoolStats) Descriptor() ([]byte, []int) {
	return file_ethtool_proto_rawDescGZIP(), []int{0}
}

func (x *EthtoolStats) GetTX_PACKETS() uint64 {
	if x != nil {
		return x.TX_PACKETS
	}
	return 0
}

func (x *EthtoolStats) GetTX_BYTES() uint64 {
	if x != nil {
		return x.TX_BYTES
	}
	return 0
}

func (x *EthtoolStats) GetRX_PACKETS() uint64 {
	if x != nil {
		return x.RX_PACKETS
	}
	return 0
}

func (x *EthtoolStats) GetRX_BYTES() uint64 {
	if x != nil {
		return x.RX_BYTES
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_BROADCAST() uint64 {
	if x != nil {
		return x.FRAMES_RX_BROADCAST
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_MULTICAST() uint64 {
	if x != nil {
		return x.FRAMES_RX_MULTICAST
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_BROADCAST() uint64 {
	if x != nil {
		return x.FRAMES_TX_BROADCAST
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_MULTICAST() uint64 {
	if x != nil {
		return x.FRAMES_TX_MULTICAST
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PAUSE() uint64 {
	if x != nil {
		return x.FRAMES_RX_PAUSE
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PAUSE() uint64 {
	if x != nil {
		return x.FRAMES_TX_PAUSE
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_64B() uint64 {
	if x != nil {
		return x.FRAMES_RX_64B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_65B_127B() uint64 {
	if x != nil {
		return x.FRAMES_RX_65B_127B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_128B_255B() uint64 {
	if x != nil {
		return x.FRAMES_RX_128B_255B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_256B_511B() uint64 {
	if x != nil {
		return x.FRAMES_RX_256B_511B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_512B_1023B() uint64 {
	if x != nil {
		return x.FRAMES_RX_512B_1023B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_1024B_1518B() uint64 {
	if x != nil {
		return x.FRAMES_RX_1024B_1518B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_1519B_2047B() uint64 {
	if x != nil {
		return x.FRAMES_RX_1519B_2047B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_2048B_4095B() uint64 {
	if x != nil {
		return x.FRAMES_RX_2048B_4095B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_4096B_8191B() uint64 {
	if x != nil {
		return x.FRAMES_RX_4096B_8191B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_BAD_FCS() uint64 {
	if x != nil {
		return x.FRAMES_RX_BAD_FCS
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_4() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_4
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_4() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_4
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_0() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_0
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_1() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_1
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_2() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_2
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_3() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_3
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_5() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_5
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_6() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_6
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_PRI_7() uint64 {
	if x != nil {
		return x.FRAMES_RX_PRI_7
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_0() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_0
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_1() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_1
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_2() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_2
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_3() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_3
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_5() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_5
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_6() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_6
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_PRI_7() uint64 {
	if x != nil {
		return x.FRAMES_TX_PRI_7
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_DROPPED() uint64 {
	if x != nil {
		return x.FRAMES_RX_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_ALL() uint64 {
	if x != nil {
		return x.FRAMES_RX_ALL
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_BAD_ALL() uint64 {
	if x != nil {
		return x.FRAMES_RX_BAD_ALL
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_ALL() uint64 {
	if x != nil {
		return x.FRAMES_TX_ALL
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_BAD() uint64 {
	if x != nil {
		return x.FRAMES_TX_BAD
	}
	return 0
}

func (x *EthtoolStats) GetHW_TX_DROPPED() uint64 {
	if x != nil {
		return x.HW_TX_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetHW_RX_DROPPED() uint64 {
	if x != nil {
		return x.HW_RX_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_0_DROPPED() uint64 {
	if x != nil {
		return x.RX_0_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_1_DROPPED() uint64 {
	if x != nil {
		return x.RX_1_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_2_DROPPED() uint64 {
	if x != nil {
		return x.RX_2_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_3_DROPPED() uint64 {
	if x != nil {
		return x.RX_3_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_4_DROPPED() uint64 {
	if x != nil {
		return x.RX_4_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_5_DROPPED() uint64 {
	if x != nil {
		return x.RX_5_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_6_DROPPED() uint64 {
	if x != nil {
		return x.RX_6_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_7_DROPPED() uint64 {
	if x != nil {
		return x.RX_7_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_8_DROPPED() uint64 {
	if x != nil {
		return x.RX_8_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_9_DROPPED() uint64 {
	if x != nil {
		return x.RX_9_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_10_DROPPED() uint64 {
	if x != nil {
		return x.RX_10_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_11_DROPPED() uint64 {
	if x != nil {
		return x.RX_11_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_12_DROPPED() uint64 {
	if x != nil {
		return x.RX_12_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_13_DROPPED() uint64 {
	if x != nil {
		return x.RX_13_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_14_DROPPED() uint64 {
	if x != nil {
		return x.RX_14_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetRX_15_DROPPED() uint64 {
	if x != nil {
		return x.RX_15_DROPPED
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_OK() uint64 {
	if x != nil {
		return x.FRAMES_RX_OK
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_OK() uint64 {
	if x != nil {
		return x.FRAMES_TX_OK
	}
	return 0
}

func (x *EthtoolStats) GetOCTETS_RX_OK() uint64 {
	if x != nil {
		return x.OCTETS_RX_OK
	}
	return 0
}

func (x *EthtoolStats) GetOCTETS_TX_OK() uint64 {
	if x != nil {
		return x.OCTETS_TX_OK
	}
	return 0
}

func (x *EthtoolStats) GetOCTETS_TX_TOTAL() uint64 {
	if x != nil {
		return x.OCTETS_TX_TOTAL
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_UNICAST() uint64 {
	if x != nil {
		return x.FRAMES_RX_UNICAST
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_UNICAST() uint64 {
	if x != nil {
		return x.FRAMES_TX_UNICAST
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_RX_8192B_9215B() uint64 {
	if x != nil {
		return x.FRAMES_RX_8192B_9215B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_8192B_9215B() uint64 {
	if x != nil {
		return x.FRAMES_TX_8192B_9215B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_64B() uint64 {
	if x != nil {
		return x.FRAMES_TX_64B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_65B_127B() uint64 {
	if x != nil {
		return x.FRAMES_TX_65B_127B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_128B_255B() uint64 {
	if x != nil {
		return x.FRAMES_TX_128B_255B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_256B_511B() uint64 {
	if x != nil {
		return x.FRAMES_TX_256B_511B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_512B_1023B() uint64 {
	if x != nil {
		return x.FRAMES_TX_512B_1023B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_1024B_1518B() uint64 {
	if x != nil {
		return x.FRAMES_TX_1024B_1518B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_1519B_2047B() uint64 {
	if x != nil {
		return x.FRAMES_TX_1519B_2047B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_2048B_4095B() uint64 {
	if x != nil {
		return x.FRAMES_TX_2048B_4095B
	}
	return 0
}

func (x *EthtoolStats) GetFRAMES_TX_4096B_8191B() uint64 {
	if x != nil {
		return x.FRAMES_TX_4096B_8191B
	}
	return 0
}

var File_ethtool_proto protoreflect.FileDescriptor

var file_ethtool_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x74, 0x68, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x6e, 0x69, 0x63, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x45, 0x0a, 0x0c, 0x45, 0x74, 0x68, 0x74, 0x6f,
	0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0a, 0x54, 0x58, 0x5f, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3e, 0xca, 0xb5, 0x03,
	0x3a, 0xa2, 0x01, 0x37, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x78, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x78, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x09, 0x54, 0x58, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x12, 0x55, 0x0a, 0x08, 0x54, 0x58, 0x5f, 0x42, 0x59, 0x54,
	0x45, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3a, 0xca, 0xb5, 0x03, 0x36, 0xa2, 0x01,
	0x33, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x52, 0x07, 0x54, 0x58, 0x42, 0x59, 0x54, 0x45, 0x53, 0x12, 0x5d, 0x0a,
	0x0a, 0x52, 0x58, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x3e, 0xca, 0xb5, 0x03, 0x3a, 0xa2, 0x01, 0x37, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x72, 0x78, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x52, 0x09, 0x52, 0x58, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x12, 0x55, 0x0a, 0x08,
	0x52, 0x58, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3a,
	0xca, 0xb5, 0x03, 0x36, 0xa2, 0x01, 0x33, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x07, 0x52, 0x58, 0x42, 0x59,
	0x54, 0x45, 0x53, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52,
	0x58, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01, 0x49, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x52, 0x11, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x42, 0x52, 0x4f,
	0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01, 0x49, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72,
	0x78, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x11, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58,
	0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53,
	0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01, 0x49,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x11, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x54, 0x58, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x12, 0x80, 0x01, 0x0a,
	0x13, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49,
	0x43, 0x41, 0x53, 0x54, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c,
	0xa2, 0x01, 0x49, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x11, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x12,
	0x70, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01,
	0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78,
	0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72,
	0x78, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x52, 0x0d, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x50, 0x41, 0x55, 0x53,
	0x45, 0x12, 0x70, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50,
	0x41, 0x55, 0x53, 0x45, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44,
	0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x74, 0x78, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x52, 0x0d, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x41,
	0x55, 0x53, 0x45, 0x12, 0x68, 0x0a, 0x0d, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58,
	0x5f, 0x36, 0x34, 0x42, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40,
	0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x72, 0x78, 0x5f, 0x36, 0x34, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72,
	0x78, 0x5f, 0x36, 0x34, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x0b, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x36, 0x34, 0x42, 0x12, 0x7b, 0x0a,
	0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x36, 0x35, 0x42, 0x5f, 0x31,
	0x32, 0x37, 0x42, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4e, 0xca, 0xb5, 0x03, 0x4a, 0xa2,
	0x01, 0x47, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72,
	0x78, 0x5f, 0x36, 0x35, 0x62, 0x5f, 0x31, 0x32, 0x37, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x36, 0x35, 0x62, 0x5f, 0x31, 0x32, 0x37, 0x62, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x52, 0x58, 0x36, 0x35, 0x42, 0x31, 0x32, 0x37, 0x42, 0x12, 0x7f, 0x0a, 0x13, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x32, 0x38, 0x42, 0x5f, 0x32, 0x35, 0x35,
	0x42, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01, 0x49,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f,
	0x31, 0x32, 0x38, 0x62, 0x5f, 0x32, 0x35, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x72, 0x78, 0x5f, 0x31, 0x32, 0x38, 0x62, 0x5f, 0x32, 0x35, 0x35, 0x62, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x10, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x52, 0x58, 0x31, 0x32, 0x38, 0x42, 0x32, 0x35, 0x35, 0x42, 0x12, 0x7f, 0x0a, 0x13, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x32, 0x35, 0x36, 0x42, 0x5f, 0x35, 0x31,
	0x31, 0x42, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01,
	0x49, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78,
	0x5f, 0x32, 0x35, 0x36, 0x62, 0x5f, 0x35, 0x31, 0x31, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x32, 0x35, 0x36, 0x62, 0x5f, 0x35, 0x31, 0x31, 0x62, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x10, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x52, 0x58, 0x32, 0x35, 0x36, 0x42, 0x35, 0x31, 0x31, 0x42, 0x12, 0x83, 0x01, 0x0a,
	0x14, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x35, 0x31, 0x32, 0x42, 0x5f,
	0x31, 0x30, 0x32, 0x33, 0x42, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x42, 0x52, 0xca, 0xb5, 0x03,
	0x4e, 0xa2, 0x01, 0x4b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x72, 0x78, 0x5f, 0x35, 0x31, 0x32, 0x62, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x62, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x35, 0x31, 0x32, 0x62, 0x5f, 0x31,
	0x30, 0x32, 0x33, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52,
	0x11, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x35, 0x31, 0x32, 0x42, 0x31, 0x30, 0x32,
	0x33, 0x42, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58,
	0x5f, 0x31, 0x30, 0x32, 0x34, 0x42, 0x5f, 0x31, 0x35, 0x31, 0x38, 0x42, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x31, 0x30, 0x32, 0x34, 0x62,
	0x5f, 0x31, 0x35, 0x31, 0x38, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72,
	0x78, 0x5f, 0x31, 0x30, 0x32, 0x34, 0x62, 0x5f, 0x31, 0x35, 0x31, 0x38, 0x62, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x52, 0x58, 0x31, 0x30, 0x32, 0x34, 0x42, 0x31, 0x35, 0x31, 0x38, 0x42, 0x12, 0x87, 0x01, 0x0a,
	0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x42,
	0x5f, 0x32, 0x30, 0x34, 0x37, 0x42, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x42, 0x54, 0xca, 0xb5,
	0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x72, 0x78, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x62, 0x5f, 0x32, 0x30, 0x34, 0x37, 0x62,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x31, 0x35, 0x31, 0x39,
	0x62, 0x5f, 0x32, 0x30, 0x34, 0x37, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x31, 0x35, 0x31, 0x39,
	0x42, 0x32, 0x30, 0x34, 0x37, 0x42, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x52, 0x58, 0x5f, 0x32, 0x30, 0x34, 0x38, 0x42, 0x5f, 0x34, 0x30, 0x39, 0x35, 0x42,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x42, 0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x32,
	0x30, 0x34, 0x38, 0x62, 0x5f, 0x34, 0x30, 0x39, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x32, 0x30, 0x34, 0x38, 0x62, 0x5f, 0x34, 0x30, 0x39, 0x35,
	0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x32, 0x30, 0x34, 0x38, 0x42, 0x34, 0x30, 0x39, 0x35, 0x42,
	0x12, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x34,
	0x30, 0x39, 0x36, 0x42, 0x5f, 0x38, 0x31, 0x39, 0x31, 0x42, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x34, 0x30, 0x39, 0x36, 0x62, 0x5f, 0x38,
	0x31, 0x39, 0x31, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f,
	0x34, 0x30, 0x39, 0x36, 0x62, 0x5f, 0x38, 0x31, 0x39, 0x31, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58,
	0x34, 0x30, 0x39, 0x36, 0x42, 0x38, 0x31, 0x39, 0x31, 0x42, 0x12, 0x77, 0x0a, 0x11, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x46, 0x43, 0x53, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4c, 0xca, 0xb5, 0x03, 0x48, 0xa2, 0x01, 0x45, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x62, 0x61,
	0x64, 0x5f, 0x66, 0x63, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78,
	0x5f, 0x62, 0x61, 0x64, 0x5f, 0x66, 0x63, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x52, 0x0e, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x42, 0x41, 0x44,
	0x46, 0x43, 0x53, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58,
	0x5f, 0x50, 0x52, 0x49, 0x5f, 0x34, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5,
	0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x34, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x34, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58,
	0x50, 0x52, 0x49, 0x34, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54,
	0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x34, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca,
	0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x34, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x34, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54,
	0x58, 0x50, 0x52, 0x49, 0x34, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f,
	0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x30, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48,
	0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x30, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x30, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x52, 0x58, 0x50, 0x52, 0x49, 0x30, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x31, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x31, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x31, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x52, 0x58, 0x50, 0x52, 0x49, 0x31, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x32, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x32, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x32, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x52, 0x58, 0x50, 0x52, 0x49, 0x32, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x33, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x33, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x33,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x52, 0x58, 0x50, 0x52, 0x49, 0x33, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x35, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x35,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f,
	0x35, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x50, 0x52, 0x49, 0x35, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x36, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f,
	0x36, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69,
	0x5f, 0x36, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x50, 0x52, 0x49, 0x36, 0x12, 0x6f, 0x0a, 0x0f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x37, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72, 0x69,
	0x5f, 0x37, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x72,
	0x69, 0x5f, 0x37, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x50, 0x52, 0x49, 0x37, 0x12, 0x6f, 0x0a, 0x0f,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x30, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72,
	0x69, 0x5f, 0x30, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x70,
	0x72, 0x69, 0x5f, 0x30, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52,
	0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x52, 0x49, 0x30, 0x12, 0x6f, 0x0a,
	0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f, 0x31,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x70,
	0x72, 0x69, 0x5f, 0x31, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f,
	0x70, 0x72, 0x69, 0x5f, 0x31, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x52, 0x49, 0x31, 0x12, 0x6f,
	0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49, 0x5f,
	0x32, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f,
	0x70, 0x72, 0x69, 0x5f, 0x32, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x70, 0x72, 0x69, 0x5f, 0x32, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x52, 0x49, 0x32, 0x12,
	0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52, 0x49,
	0x5f, 0x33, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01,
	0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x70, 0x72, 0x69, 0x5f, 0x33, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74,
	0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x33, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x52, 0x49, 0x33,
	0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x52,
	0x49, 0x5f, 0x35, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2,
	0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74,
	0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x35, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x35, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x52, 0x49,
	0x35, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x50,
	0x52, 0x49, 0x5f, 0x36, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44,
	0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x36, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x36, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50, 0x52,
	0x49, 0x36, 0x12, 0x6f, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f,
	0x50, 0x52, 0x49, 0x5f, 0x37, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0xca, 0xb5, 0x03,
	0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x37, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x5f, 0x37, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x50,
	0x52, 0x49, 0x37, 0x12, 0x78, 0x0a, 0x11, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x26, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4c,
	0xca, 0xb5, 0x03, 0x48, 0xa2, 0x01, 0x45, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0f, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x68, 0x0a,
	0x0d, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x41, 0x4c, 0x4c, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x61, 0x6c, 0x6c,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x61, 0x6c, 0x6c, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x52, 0x58, 0x41, 0x4c, 0x4c, 0x12, 0x77, 0x0a, 0x11, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x4c, 0xca, 0xb5, 0x03, 0x48, 0xa2, 0x01, 0x45, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x62, 0x61, 0x64, 0x5f, 0x61,
	0x6c, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x62, 0x61,
	0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x0e, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x42, 0x41, 0x44, 0x41, 0x4c, 0x4c,
	0x12, 0x68, 0x0a, 0x0d, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x41, 0x4c,
	0x4c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f,
	0x61, 0x6c, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x61,
	0x6c, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x41, 0x4c, 0x4c, 0x12, 0x68, 0x0a, 0x0d, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x61, 0x64, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x61, 0x64, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54,
	0x58, 0x42, 0x41, 0x44, 0x12, 0x68, 0x0a, 0x0d, 0x48, 0x57, 0x5f, 0x54, 0x58, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03,
	0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x68, 0x77, 0x5f, 0x74, 0x78, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x68, 0x77, 0x5f, 0x74, 0x78, 0x5f, 0x64,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x52, 0x0b, 0x48, 0x57, 0x54, 0x58, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x68,
	0x0a, 0x0d, 0x48, 0x57, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x68, 0x77, 0x5f, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x68, 0x77, 0x5f, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x48, 0x57, 0x52,
	0x58, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x30,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42,
	0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f,
	0x30, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x30, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x30, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64,
	0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x31, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x72, 0x78, 0x5f, 0x31, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x31, 0x44, 0x52, 0x4f,
	0x50, 0x50, 0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x32, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x50, 0x45, 0x44, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e,
	0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x32, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x32, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a,
	0x52, 0x58, 0x32, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58,
	0x5f, 0x33, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x30, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72,
	0x78, 0x5f, 0x33, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f,
	0x33, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x33, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x34, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x34, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x34, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x34, 0x44,
	0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x35, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5,
	0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x35, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x35, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x0a, 0x52, 0x58, 0x35, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c,
	0x52, 0x58, 0x5f, 0x36, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x72, 0x78, 0x5f, 0x36, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72,
	0x78, 0x5f, 0x36, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x36, 0x44, 0x52, 0x4f, 0x50, 0x50,
	0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x37, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50,
	0x45, 0x44, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01,
	0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x37, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x37, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x52, 0x58,
	0x37, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x38,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42,
	0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f,
	0x38, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x38, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x38, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x64,
	0x0a, 0x0c, 0x52, 0x58, 0x5f, 0x39, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x39, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x72, 0x78, 0x5f, 0x39, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x52, 0x58, 0x39, 0x44, 0x52, 0x4f,
	0x50, 0x50, 0x45, 0x44, 0x12, 0x68, 0x0a, 0x0d, 0x52, 0x58, 0x5f, 0x31, 0x30, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03,
	0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x30, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x30, 0x5f, 0x64,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x52, 0x0b, 0x52, 0x58, 0x31, 0x30, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x68,
	0x0a, 0x0d, 0x52, 0x58, 0x5f, 0x31, 0x31, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x31, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x31, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x52, 0x58, 0x31,
	0x31, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x68, 0x0a, 0x0d, 0x52, 0x58, 0x5f, 0x31,
	0x32, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78,
	0x5f, 0x31, 0x32, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f,
	0x31, 0x32, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x52, 0x58, 0x31, 0x32, 0x44, 0x52, 0x4f, 0x50, 0x50,
	0x45, 0x44, 0x12, 0x68, 0x0a, 0x0d, 0x52, 0x58, 0x5f, 0x31, 0x33, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x50, 0x45, 0x44, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2,
	0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x33, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x33, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52,
	0x0b, 0x52, 0x58, 0x31, 0x33, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x68, 0x0a, 0x0d,
	0x52, 0x58, 0x5f, 0x31, 0x34, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x34, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x72, 0x78, 0x5f, 0x31, 0x34, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x52, 0x58, 0x31, 0x34, 0x44,
	0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x12, 0x68, 0x0a, 0x0d, 0x52, 0x58, 0x5f, 0x31, 0x35, 0x5f,
	0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca,
	0xb5, 0x03, 0x40, 0xa2, 0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31,
	0x35, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x78, 0x5f, 0x31, 0x35,
	0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x52, 0x0b, 0x52, 0x58, 0x31, 0x35, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45, 0x44,
	0x12, 0x64, 0x0a, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x4b,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6f,
	0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6f, 0x6b, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x53, 0x52, 0x58, 0x4f, 0x4b, 0x12, 0x64, 0x0a, 0x0c, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x5f, 0x54, 0x58, 0x5f, 0x4f, 0x4b, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5,
	0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6f, 0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x5f, 0x6f, 0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x0a, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x4f, 0x4b, 0x12, 0x64, 0x0a, 0x0c,
	0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x4f, 0x4b, 0x18, 0x3f, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01, 0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6f, 0x6b, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6f,
	0x63, 0x74, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6f, 0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x52, 0x58,
	0x4f, 0x4b, 0x12, 0x64, 0x0a, 0x0c, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f,
	0x4f, 0x4b, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x42, 0x42, 0xca, 0xb5, 0x03, 0x3e, 0xa2, 0x01,
	0x3b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x6f, 0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6f,
	0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x4f, 0x43,
	0x54, 0x45, 0x54, 0x53, 0x54, 0x58, 0x4f, 0x4b, 0x12, 0x70, 0x0a, 0x0f, 0x4f, 0x43, 0x54, 0x45,
	0x54, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x18, 0x41, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x48, 0xca, 0xb5, 0x03, 0x44, 0xa2, 0x01, 0x41, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0d, 0x4f, 0x43, 0x54,
	0x45, 0x54, 0x53, 0x54, 0x58, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x12, 0x78, 0x0a, 0x11, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x18,
	0x42, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4c, 0xca, 0xb5, 0x03, 0x48, 0xa2, 0x01, 0x45, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78,
	0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x52, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x55, 0x4e, 0x49,
	0x43, 0x41, 0x53, 0x54, 0x12, 0x78, 0x0a, 0x11, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54,
	0x58, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x4c, 0xca, 0xb5, 0x03, 0x48, 0xa2, 0x01, 0x45, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x12, 0x87,
	0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x5f, 0x38, 0x31, 0x39,
	0x32, 0x42, 0x5f, 0x39, 0x32, 0x31, 0x35, 0x42, 0x18, 0x44, 0x20, 0x01, 0x28, 0x04, 0x42, 0x54,
	0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x38, 0x31, 0x39, 0x32, 0x62, 0x5f, 0x39, 0x32, 0x31,
	0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x38, 0x31,
	0x39, 0x32, 0x62, 0x5f, 0x39, 0x32, 0x31, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x58, 0x38, 0x31,
	0x39, 0x32, 0x42, 0x39, 0x32, 0x31, 0x35, 0x42, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x38, 0x31, 0x39, 0x32, 0x42, 0x5f, 0x39, 0x32, 0x31,
	0x35, 0x42, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x42, 0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01,
	0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x38, 0x31, 0x39, 0x32, 0x62, 0x5f, 0x39, 0x32, 0x31, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x38, 0x31, 0x39, 0x32, 0x62, 0x5f, 0x39, 0x32,
	0x31, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x38, 0x31, 0x39, 0x32, 0x42, 0x39, 0x32, 0x31,
	0x35, 0x42, 0x12, 0x68, 0x0a, 0x0d, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f,
	0x36, 0x34, 0x42, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x42, 0x44, 0xca, 0xb5, 0x03, 0x40, 0xa2,
	0x01, 0x3d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74,
	0x78, 0x5f, 0x36, 0x34, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x36, 0x34, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52,
	0x0b, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x36, 0x34, 0x42, 0x12, 0x7b, 0x0a, 0x12,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x36, 0x35, 0x42, 0x5f, 0x31, 0x32,
	0x37, 0x42, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x42, 0x4e, 0xca, 0xb5, 0x03, 0x4a, 0xa2, 0x01,
	0x47, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x36, 0x35, 0x62, 0x5f, 0x31, 0x32, 0x37, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x74, 0x78, 0x5f, 0x36, 0x35, 0x62, 0x5f, 0x31, 0x32, 0x37, 0x62, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x54, 0x58, 0x36, 0x35, 0x42, 0x31, 0x32, 0x37, 0x42, 0x12, 0x7f, 0x0a, 0x13, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x31, 0x32, 0x38, 0x42, 0x5f, 0x32, 0x35, 0x35, 0x42,
	0x18, 0x48, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01, 0x49, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x31,
	0x32, 0x38, 0x62, 0x5f, 0x32, 0x35, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x74, 0x78, 0x5f, 0x31, 0x32, 0x38, 0x62, 0x5f, 0x32, 0x35, 0x35, 0x62, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x10, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x54, 0x58, 0x31, 0x32, 0x38, 0x42, 0x32, 0x35, 0x35, 0x42, 0x12, 0x7f, 0x0a, 0x13, 0x46, 0x52,
	0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x32, 0x35, 0x36, 0x42, 0x5f, 0x35, 0x31, 0x31,
	0x42, 0x18, 0x49, 0x20, 0x01, 0x28, 0x04, 0x42, 0x50, 0xca, 0xb5, 0x03, 0x4c, 0xa2, 0x01, 0x49,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f,
	0x32, 0x35, 0x36, 0x62, 0x5f, 0x35, 0x31, 0x31, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x74, 0x78, 0x5f, 0x32, 0x35, 0x36, 0x62, 0x5f, 0x35, 0x31, 0x31, 0x62, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x10, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x53, 0x54, 0x58, 0x32, 0x35, 0x36, 0x42, 0x35, 0x31, 0x31, 0x42, 0x12, 0x83, 0x01, 0x0a, 0x14,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x35, 0x31, 0x32, 0x42, 0x5f, 0x31,
	0x30, 0x32, 0x33, 0x42, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x52, 0xca, 0xb5, 0x03, 0x4e,
	0xa2, 0x01, 0x4b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x5f, 0x35, 0x31, 0x32, 0x62, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x62, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x35, 0x31, 0x32, 0x62, 0x5f, 0x31, 0x30,
	0x32, 0x33, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x11,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x35, 0x31, 0x32, 0x42, 0x31, 0x30, 0x32, 0x33,
	0x42, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f,
	0x31, 0x30, 0x32, 0x34, 0x42, 0x5f, 0x31, 0x35, 0x31, 0x38, 0x42, 0x18, 0x4b, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x31, 0x30, 0x32, 0x34, 0x62, 0x5f,
	0x31, 0x35, 0x31, 0x38, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78,
	0x5f, 0x31, 0x30, 0x32, 0x34, 0x62, 0x5f, 0x31, 0x35, 0x31, 0x38, 0x62, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54,
	0x58, 0x31, 0x30, 0x32, 0x34, 0x42, 0x31, 0x35, 0x31, 0x38, 0x42, 0x12, 0x87, 0x01, 0x0a, 0x15,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x42, 0x5f,
	0x32, 0x30, 0x34, 0x37, 0x42, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x04, 0x42, 0x54, 0xca, 0xb5, 0x03,
	0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x74, 0x78, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x62, 0x5f, 0x32, 0x30, 0x34, 0x37, 0x62, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x31, 0x35, 0x31, 0x39, 0x62,
	0x5f, 0x32, 0x30, 0x34, 0x37, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x31, 0x35, 0x31, 0x39, 0x42,
	0x32, 0x30, 0x34, 0x37, 0x42, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53,
	0x5f, 0x54, 0x58, 0x5f, 0x32, 0x30, 0x34, 0x38, 0x42, 0x5f, 0x34, 0x30, 0x39, 0x35, 0x42, 0x18,
	0x4d, 0x20, 0x01, 0x28, 0x04, 0x42, 0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x32, 0x30,
	0x34, 0x38, 0x62, 0x5f, 0x34, 0x30, 0x39, 0x35, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x74, 0x78, 0x5f, 0x32, 0x30, 0x34, 0x38, 0x62, 0x5f, 0x34, 0x30, 0x39, 0x35, 0x62,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x53, 0x54, 0x58, 0x32, 0x30, 0x34, 0x38, 0x42, 0x34, 0x30, 0x39, 0x35, 0x42, 0x12,
	0x87, 0x01, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x5f, 0x34, 0x30,
	0x39, 0x36, 0x42, 0x5f, 0x38, 0x31, 0x39, 0x31, 0x42, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x54, 0xca, 0xb5, 0x03, 0x50, 0xa2, 0x01, 0x4d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x34, 0x30, 0x39, 0x36, 0x62, 0x5f, 0x38, 0x31,
	0x39, 0x31, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x34,
	0x30, 0x39, 0x36, 0x62, 0x5f, 0x38, 0x31, 0x39, 0x31, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x58, 0x34,
	0x30, 0x39, 0x36, 0x42, 0x38, 0x31, 0x39, 0x31, 0x42, 0x42, 0x10, 0x5a, 0x0e, 0x67, 0x65, 0x6e,
	0x2f, 0x6e, 0x69, 0x63, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ethtool_proto_rawDescOnce sync.Once
	file_ethtool_proto_rawDescData = file_ethtool_proto_rawDesc
)

func file_ethtool_proto_rawDescGZIP() []byte {
	file_ethtool_proto_rawDescOnce.Do(func() {
		file_ethtool_proto_rawDescData = protoimpl.X.CompressGZIP(file_ethtool_proto_rawDescData)
	})
	return file_ethtool_proto_rawDescData
}

var file_ethtool_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ethtool_proto_goTypes = []any{
	(*EthtoolStats)(nil), // 0: nicmetrics.EthtoolStats
}
var file_ethtool_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ethtool_proto_init() }
func file_ethtool_proto_init() {
	if File_ethtool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ethtool_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EthtoolStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ethtool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ethtool_proto_goTypes,
		DependencyIndexes: file_ethtool_proto_depIdxs,
		MessageInfos:      file_ethtool_proto_msgTypes,
	}.Build()
	File_ethtool_proto = out.File
	file_ethtool_proto_rawDesc = nil
	file_ethtool_proto_goTypes = nil
	file_ethtool_proto_depIdxs = nil
}
