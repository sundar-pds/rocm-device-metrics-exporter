# -- Specify the platform to deploy the metrics exporter, k8s or openshift
platform: k8s

# -- Add node selector for the daemonset of metrics exporter
nodeSelector: {}

# -- Add tolerations for deploying metrics exporter on tainted nodes
tolerations: []

# -- Add annotations to the pods
podAnnotations: {}

# -- kubelet configuration
kubelet:
  # -- host path for kubelet pod-resources directory (optional)
  #    - vanilla k8s kubelet path: /var/lib/kubelet/pod-resources
  #    - micro k8s kubelet path: /var/snap/microk8s/common/var/lib/kubelet/pod-resources/
  #    - default to /var/lib/kubelet/pod-resources
  podResourceAPISocketPath: /var/lib/kubelet/pod-resources

image:
  # -- repository URL for the metrics exporter image
  repository: docker.io/rocm/device-metrics-exporter
  # -- metrics exporter image tag
  tag: v1.4.0
  # -- metrics exporter image pullPolicy
  pullPolicy: Always
  # -- metrics exporter image pullSecret name
  pullSecrets: ""
  # -- metrics exporter initContainer image
  initContainerImage: busybox:1.36

# -- options for the metrics exporter container - default values are set if not specified
resources:
  # -- Resource limits and requests for the metrics exporter container
  limits:
    # -- CPU limit for the metrics exporter container
    cpu: "2"
    # -- Memory limit for the metrics exporter container
    memory: "4Gi"
  requests:
    # -- CPU request for the metrics exporter container
    cpu: "500m"
    # -- Memory request for the metrics exporter container
    memory: "512M"

service:
  # -- metrics exporter service type, could be ClusterIP or NodePort
  type: ClusterIP
  # -- Add annotations to the service
  annotations: {}
  ClusterIP:
    # -- set port for ClusterIP type service
    port: 5000
  NodePort:
    # -- set port for NodePort type service   
    port: 5000
    # -- set nodePort for NodePort type service  
    nodePort: 32500

# -- configMap name for the customizing configs and mount into metrics exporter container
configMap: ""

# -- ServiceMonitor configuration
serviceMonitor:
  # -- Whether to create a ServiceMonitor resource for Prometheus Operator
  enabled: false
  # -- Scrape interval for the ServiceMonitor
  interval: "30s"
  # -- Honor labels configuration for ServiceMonitor
  honorLabels: true
  # -- Honor timestamps configuration for ServiceMonitor
  honorTimestamps: true
  # -- Adds node metadata to discovered targets for node-based filtering
  attachMetadata:
    node: false
  # -- Additional labels for the ServiceMonitor
  labels: {}
  # -- RelabelConfigs to apply to samples before scraping
  relabelings: []
  # -- Relabeling rules applied to individual scraped metrics
  metricRelabelings: []
